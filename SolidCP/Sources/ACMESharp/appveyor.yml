version: 0.8.2.{build}
image: WMF 5
pull_requests:
  do_not_increment_build_number: true
skip_tags: true
environment:
  secureInfoPassword:
    secure: r5xGVtj4yCfOX7QUsgBCq9IIK2/99/JrSfhmspffhzU=
  ACME_POSH_PATH: C:\projects\acmesharp\ACMESharp\ACMESharp.POSH-test\bin\ACMESharp
  STAGING_NUGET_APIKEY:
    secure: SUYnj+1syy4bFbcQnP7a9f0jdPoxhbW6yV8FOdNcxTxWQMmnxJ4NqaHnMLlUS2hG
  STAGING_MYGET_APIKEY:
    secure: YgniOlPvY8QhpvATtvXiPP9zM65vI/zvanIzIFZ2YJvK+xxfzgwEKpj8CcZjHf1k
  COVERITY_PROJECT_TOKEN:
    secure: L57O1BtGTk/n6pjNDXgF2U2zoGhDvi+a+oYoCYQATCs=
  COVERITY_NOTIFICATION_EMAIL:
    secure: tqVJuj5P8gr5lS1gMbTV5pEq7VC8lGU4r4to1RDzDcQ=
configuration:
  - Debug
# - Release
install:
- ps: .\ci\av-install.ps1
nuget:
  account_feed: true
  project_feed: true
  disable_publish_on_pr: true
build_script:
- ps: .\ci\av-build.ps1
before_test:
- ps: >-
    $doPester = ((wget http://acmesharp.zyborg.io/appveyor-pester.txt).Content -eq 1)
    
    if ($doPester) {
      echo ACME_POSH_PATH = $ENV:ACME_POSH_PATH
      choco install pester
    }
test:
  categories:
    except:
    - skipCI
    - acmeServerIntegXXX
after_test:
- ps: >-
    $doPester = ((wget http://acmesharp.zyborg.io/appveyor-pester.txt).Content -eq 1)
    
    if ($doPester) {
      $env:ACME_POSH_PATH = 'C:\projects\acmesharp\ACMESharp\ACMESharp.POSH-test\bin\ACMESharp'
      Invoke-Pester
    }
artifacts:
## These are no longer needed as separate artifacts
#- path: ACMESharp\ACMESharp\bin
#  name: ACME-lib
#  type: zip
#- path: ACMESharp\ACMESharp.POSH\bin
#  name: ACME-posh
#  type: zip

## These 2 are needed by powershell.org Build server to run POSH tests
- path: ACMESharp\ACMESharp.POSH-test\Pester
  name: ACME-posh-pester
  type: zip
- path: ACMESharp\ACMESharp.POSH-test\bin
  name: ACME-posh-pester-bin
  type: zip
## These are the nuget library packages generated by av-build.ps1
- path: ACMESharp\ACMESharp\bin\nuget\*.nupkg
  name: ACMESharp-lib
- path: ACMESharp\ACMESharp.Vault\bin\nuget\*.nupkg
  name: ACMESharp.Vault-lib
- path: ACMESharp\ACMESharp.Providers.IIS\bin\nuget\*.nupkg
  name: ACMESharp.Providers.IIS-lib
- path: ACMESharp\ACMESharp.Providers.AWS\bin\nuget\*.nupkg
  name: ACMESharp.Providers.AWS-lib
- path: ACMESharp\ACMESharp.Providers.CloudFlare\bin\nuget\*.nupkg
  name: ACMESharp.Providers.CloudFlare-lib
- path: ACMESharp\ACMESharp.POSH\bin\nuget\*.nupkg
  name: ACMESharp.POSH-lib
## PowerShell Modules generated by av-build.ps1
- path: ACMESharp\ACMESharp.POSH\bin\$(configuration)\*.nupkg
  name: ACMESharp-posh-$(configuration)
- path: ACMESharp\ACMESharp.Providers.IIS\bin\posh\*.nupkg
  name: ACMESharp.Providers.IIS-posh-$(configuration)
- path: ACMESharp\ACMESharp.Providers.AWS\bin\posh\*.nupkg
  name: ACMESharp.Providers.AWS-posh-$(configuration)
- path: ACMESharp\ACMESharp.Providers.CloudFlare\bin\posh\*.nupkg
  name: ACMESharp.Providers.CloudFlare-posh-$(configuration)
## The choco installation packages - DEPRECATED - Remove in Future
#- path: ACMESharp\ACMESharp.POSH\choco\**\*.nupkg
#  name: ACME-posh-choco
#- path: ACMESharp\ACMESharp.POSH-test\choco\**\*.nupkg
#  name: ACME-posh-all-choco
## Coverity
- path: cov-int
  name: ACMESharp-coverity
  type: zip
## Disabling the S3 deployment -- I don't think this is
## really needed since we always have the artifacts in AV
#deploy:
#- provider: S3
#  access_key_id: AKIAIU2XOHJ3HOICE4NA
#  secret_access_key:
#    secure: SFUn+5KMSOZJunA0RgHcztIE1O3mSv2gVgSBJnBwWV/miBevC9/CB+GWpSJ2XBjn
#  region: us-east-1
#  bucket: acmesharp.zyborg.io
#  folder: appveyor-deploy
#  artifact: ACME-lib,ACME-posh,ACME-posh-pester,ACME-posh-pester-bin
#  set_public: true
notifications:
- provider: Webhook
  url: https://webhooks.gitter.im/e/c403570df3265c0d6d6b
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true
- provider: Slack
  incoming_webhook:
    secure: aWdM3NtqORVBUyvtL31SO8Et9glsWcCCycZGM5qr3Na3HnU56TygnbssHZoWq9wuQzlJ36NSI8Qzxr+H8ioQx8iI2ksUyH48Lu435TtfWyk=
  on_build_success: true
  on_build_failure: true
  on_build_status_changed: true
on_finish:
- ps: .\ci\av-onfinish.ps1
