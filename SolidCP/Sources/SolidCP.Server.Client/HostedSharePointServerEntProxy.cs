// Copyright (c) 2016, SolidCP
// SolidCP is distributed under the Creative Commons Share-alike license
// 
// SolidCP is a fork of WebsitePanel:
// Copyright (c) 2015, Outercurve Foundation.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// - Redistributions of source code must  retain  the  above copyright notice, this
//   list of conditions and the following disclaimer.
//
// - Redistributions in binary form  must  reproduce the  above  copyright  notice,
//   this list of conditions  and  the  following  disclaimer in  the documentation
//   and/or other materials provided with the distribution.
//
// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its
//   contributors may be used to endorse or  promote  products  derived  from  this
//   software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT  NOT  LIMITED TO, THE IMPLIED
// WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR  PURPOSE  ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL,  SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT  OF  SUBSTITUTE  GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER  CAUSED AND ON
// ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT  LIABILITY,  OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING  IN  ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8657
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace SolidCP.Providers.HostedSolution {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    using SolidCP.Providers.SharePoint;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="HostedSharePointServerEntSoap", Namespace="http://smbsaas/solidcp/server/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceProviderItem))]
    public partial class HostedSharePointServerEnt : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        public ServiceProviderSettingsSoapHeader ServiceProviderSettingsSoapHeaderValue;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSupportedLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_CreateSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_UpdateQuotasOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_DeleteSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_BackupSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_RestoreSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetTempFileBinaryChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_AppendTempFileBinaryChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionSizeOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_SetPeoplePickerOuOperationCompleted;
        
        /// <remarks/>
        public HostedSharePointServerEnt() {
            this.Url = "http://localhost:9003/HostedSharePointServerEnt.asmx";
        }
        
        /// <remarks/>
        public event Enterprise_GetSupportedLanguagesCompletedEventHandler Enterprise_GetSupportedLanguagesCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionsCompletedEventHandler Enterprise_GetSiteCollectionsCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionCompletedEventHandler Enterprise_GetSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_CreateSiteCollectionCompletedEventHandler Enterprise_CreateSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_UpdateQuotasCompletedEventHandler Enterprise_UpdateQuotasCompleted;
        
        /// <remarks/>
        public event Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventHandler Enterprise_CalculateSiteCollectionsDiskSpaceCompleted;
        
        /// <remarks/>
        public event Enterprise_DeleteSiteCollectionCompletedEventHandler Enterprise_DeleteSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_BackupSiteCollectionCompletedEventHandler Enterprise_BackupSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_RestoreSiteCollectionCompletedEventHandler Enterprise_RestoreSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_GetTempFileBinaryChunkCompletedEventHandler Enterprise_GetTempFileBinaryChunkCompleted;
        
        /// <remarks/>
        public event Enterprise_AppendTempFileBinaryChunkCompletedEventHandler Enterprise_AppendTempFileBinaryChunkCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionSizeCompletedEventHandler Enterprise_GetSiteCollectionSizeCompleted;
        
        /// <remarks/>
        public event Enterprise_SetPeoplePickerOuCompletedEventHandler Enterprise_SetPeoplePickerOuCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_GetSupportedLanguages", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] Enterprise_GetSupportedLanguages() {
            object[] results = this.Invoke("Enterprise_GetSupportedLanguages", new object[0]);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSupportedLanguages(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSupportedLanguages", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndEnterprise_GetSupportedLanguages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSupportedLanguagesAsync() {
            this.Enterprise_GetSupportedLanguagesAsync(null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSupportedLanguagesAsync(object userState) {
            if ((this.Enterprise_GetSupportedLanguagesOperationCompleted == null)) {
                this.Enterprise_GetSupportedLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSupportedLanguagesOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSupportedLanguages", new object[0], this.Enterprise_GetSupportedLanguagesOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSupportedLanguagesOperationCompleted(object arg) {
            if ((this.Enterprise_GetSupportedLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSupportedLanguagesCompleted(this, new Enterprise_GetSupportedLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_GetSiteCollections", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollection[] Enterprise_GetSiteCollections() {
            object[] results = this.Invoke("Enterprise_GetSiteCollections", new object[0]);
            return ((SharePointEnterpriseSiteCollection[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollections(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollections", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection[] EndEnterprise_GetSiteCollections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollection[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsAsync() {
            this.Enterprise_GetSiteCollectionsAsync(null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsAsync(object userState) {
            if ((this.Enterprise_GetSiteCollectionsOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionsOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollections", new object[0], this.Enterprise_GetSiteCollectionsOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionsOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionsCompleted(this, new Enterprise_GetSiteCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_GetSiteCollection", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollection Enterprise_GetSiteCollection(string url) {
            object[] results = this.Invoke("Enterprise_GetSiteCollection", new object[] {
                        url});
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollection(string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollection", new object[] {
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection EndEnterprise_GetSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionAsync(string url) {
            this.Enterprise_GetSiteCollectionAsync(url, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionAsync(string url, object userState) {
            if ((this.Enterprise_GetSiteCollectionOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollection", new object[] {
                        url}, this.Enterprise_GetSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionCompleted(this, new Enterprise_GetSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_CreateSiteCollection", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_CreateSiteCollection(SharePointEnterpriseSiteCollection siteCollection) {
            this.Invoke("Enterprise_CreateSiteCollection", new object[] {
                        siteCollection});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_CreateSiteCollection(SharePointEnterpriseSiteCollection siteCollection, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_CreateSiteCollection", new object[] {
                        siteCollection}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_CreateSiteCollection(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_CreateSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection) {
            this.Enterprise_CreateSiteCollectionAsync(siteCollection, null);
        }
        
        /// <remarks/>
        public void Enterprise_CreateSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection, object userState) {
            if ((this.Enterprise_CreateSiteCollectionOperationCompleted == null)) {
                this.Enterprise_CreateSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_CreateSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_CreateSiteCollection", new object[] {
                        siteCollection}, this.Enterprise_CreateSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_CreateSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_CreateSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_CreateSiteCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_UpdateQuotas", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_UpdateQuotas(string url, long maxSize, long warningSize) {
            this.Invoke("Enterprise_UpdateQuotas", new object[] {
                        url,
                        maxSize,
                        warningSize});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_UpdateQuotas(string url, long maxSize, long warningSize, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_UpdateQuotas", new object[] {
                        url,
                        maxSize,
                        warningSize}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_UpdateQuotas(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_UpdateQuotasAsync(string url, long maxSize, long warningSize) {
            this.Enterprise_UpdateQuotasAsync(url, maxSize, warningSize, null);
        }
        
        /// <remarks/>
        public void Enterprise_UpdateQuotasAsync(string url, long maxSize, long warningSize, object userState) {
            if ((this.Enterprise_UpdateQuotasOperationCompleted == null)) {
                this.Enterprise_UpdateQuotasOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_UpdateQuotasOperationCompleted);
            }
            this.InvokeAsync("Enterprise_UpdateQuotas", new object[] {
                        url,
                        maxSize,
                        warningSize}, this.Enterprise_UpdateQuotasOperationCompleted, userState);
        }
        
        private void OnEnterprise_UpdateQuotasOperationCompleted(object arg) {
            if ((this.Enterprise_UpdateQuotasCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_UpdateQuotasCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_CalculateSiteCollectionsDiskSpace", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointSiteDiskSpace[] Enterprise_CalculateSiteCollectionsDiskSpace(string[] urls) {
            object[] results = this.Invoke("Enterprise_CalculateSiteCollectionsDiskSpace", new object[] {
                        urls});
            return ((SharePointSiteDiskSpace[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_CalculateSiteCollectionsDiskSpace(string[] urls, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_CalculateSiteCollectionsDiskSpace", new object[] {
                        urls}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointSiteDiskSpace[] EndEnterprise_CalculateSiteCollectionsDiskSpace(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointSiteDiskSpace[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_CalculateSiteCollectionsDiskSpaceAsync(string[] urls) {
            this.Enterprise_CalculateSiteCollectionsDiskSpaceAsync(urls, null);
        }
        
        /// <remarks/>
        public void Enterprise_CalculateSiteCollectionsDiskSpaceAsync(string[] urls, object userState) {
            if ((this.Enterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted == null)) {
                this.Enterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted);
            }
            this.InvokeAsync("Enterprise_CalculateSiteCollectionsDiskSpace", new object[] {
                        urls}, this.Enterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted, userState);
        }
        
        private void OnEnterprise_CalculateSiteCollectionsDiskSpaceOperationCompleted(object arg) {
            if ((this.Enterprise_CalculateSiteCollectionsDiskSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_CalculateSiteCollectionsDiskSpaceCompleted(this, new Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_DeleteSiteCollection", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_DeleteSiteCollection(SharePointEnterpriseSiteCollection siteCollection) {
            this.Invoke("Enterprise_DeleteSiteCollection", new object[] {
                        siteCollection});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_DeleteSiteCollection(SharePointEnterpriseSiteCollection siteCollection, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_DeleteSiteCollection", new object[] {
                        siteCollection}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_DeleteSiteCollection(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection) {
            this.Enterprise_DeleteSiteCollectionAsync(siteCollection, null);
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection, object userState) {
            if ((this.Enterprise_DeleteSiteCollectionOperationCompleted == null)) {
                this.Enterprise_DeleteSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_DeleteSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_DeleteSiteCollection", new object[] {
                        siteCollection}, this.Enterprise_DeleteSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_DeleteSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_DeleteSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_DeleteSiteCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_BackupSiteCollection", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Enterprise_BackupSiteCollection(string url, string filename, bool zip) {
            object[] results = this.Invoke("Enterprise_BackupSiteCollection", new object[] {
                        url,
                        filename,
                        zip});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_BackupSiteCollection(string url, string filename, bool zip, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_BackupSiteCollection", new object[] {
                        url,
                        filename,
                        zip}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEnterprise_BackupSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_BackupSiteCollectionAsync(string url, string filename, bool zip) {
            this.Enterprise_BackupSiteCollectionAsync(url, filename, zip, null);
        }
        
        /// <remarks/>
        public void Enterprise_BackupSiteCollectionAsync(string url, string filename, bool zip, object userState) {
            if ((this.Enterprise_BackupSiteCollectionOperationCompleted == null)) {
                this.Enterprise_BackupSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_BackupSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_BackupSiteCollection", new object[] {
                        url,
                        filename,
                        zip}, this.Enterprise_BackupSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_BackupSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_BackupSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_BackupSiteCollectionCompleted(this, new Enterprise_BackupSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_RestoreSiteCollection", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_RestoreSiteCollection(SharePointEnterpriseSiteCollection siteCollection, string filename) {
            this.Invoke("Enterprise_RestoreSiteCollection", new object[] {
                        siteCollection,
                        filename});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_RestoreSiteCollection(SharePointEnterpriseSiteCollection siteCollection, string filename, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_RestoreSiteCollection", new object[] {
                        siteCollection,
                        filename}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_RestoreSiteCollection(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_RestoreSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection, string filename) {
            this.Enterprise_RestoreSiteCollectionAsync(siteCollection, filename, null);
        }
        
        /// <remarks/>
        public void Enterprise_RestoreSiteCollectionAsync(SharePointEnterpriseSiteCollection siteCollection, string filename, object userState) {
            if ((this.Enterprise_RestoreSiteCollectionOperationCompleted == null)) {
                this.Enterprise_RestoreSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_RestoreSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_RestoreSiteCollection", new object[] {
                        siteCollection,
                        filename}, this.Enterprise_RestoreSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_RestoreSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_RestoreSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_RestoreSiteCollectionCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_GetTempFileBinaryChunk", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Enterprise_GetTempFileBinaryChunk(string path, int offset, int length) {
            object[] results = this.Invoke("Enterprise_GetTempFileBinaryChunk", new object[] {
                        path,
                        offset,
                        length});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetTempFileBinaryChunk(string path, int offset, int length, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetTempFileBinaryChunk", new object[] {
                        path,
                        offset,
                        length}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndEnterprise_GetTempFileBinaryChunk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetTempFileBinaryChunkAsync(string path, int offset, int length) {
            this.Enterprise_GetTempFileBinaryChunkAsync(path, offset, length, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetTempFileBinaryChunkAsync(string path, int offset, int length, object userState) {
            if ((this.Enterprise_GetTempFileBinaryChunkOperationCompleted == null)) {
                this.Enterprise_GetTempFileBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetTempFileBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetTempFileBinaryChunk", new object[] {
                        path,
                        offset,
                        length}, this.Enterprise_GetTempFileBinaryChunkOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetTempFileBinaryChunkOperationCompleted(object arg) {
            if ((this.Enterprise_GetTempFileBinaryChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetTempFileBinaryChunkCompleted(this, new Enterprise_GetTempFileBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_AppendTempFileBinaryChunk", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Enterprise_AppendTempFileBinaryChunk(string fileName, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] chunk) {
            object[] results = this.Invoke("Enterprise_AppendTempFileBinaryChunk", new object[] {
                        fileName,
                        path,
                        chunk});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_AppendTempFileBinaryChunk(string fileName, string path, byte[] chunk, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_AppendTempFileBinaryChunk", new object[] {
                        fileName,
                        path,
                        chunk}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEnterprise_AppendTempFileBinaryChunk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_AppendTempFileBinaryChunkAsync(string fileName, string path, byte[] chunk) {
            this.Enterprise_AppendTempFileBinaryChunkAsync(fileName, path, chunk, null);
        }
        
        /// <remarks/>
        public void Enterprise_AppendTempFileBinaryChunkAsync(string fileName, string path, byte[] chunk, object userState) {
            if ((this.Enterprise_AppendTempFileBinaryChunkOperationCompleted == null)) {
                this.Enterprise_AppendTempFileBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_AppendTempFileBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("Enterprise_AppendTempFileBinaryChunk", new object[] {
                        fileName,
                        path,
                        chunk}, this.Enterprise_AppendTempFileBinaryChunkOperationCompleted, userState);
        }
        
        private void OnEnterprise_AppendTempFileBinaryChunkOperationCompleted(object arg) {
            if ((this.Enterprise_AppendTempFileBinaryChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_AppendTempFileBinaryChunkCompleted(this, new Enterprise_AppendTempFileBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_GetSiteCollectionSize", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public long Enterprise_GetSiteCollectionSize(string url) {
            object[] results = this.Invoke("Enterprise_GetSiteCollectionSize", new object[] {
                        url});
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollectionSize(string url, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollectionSize", new object[] {
                        url}, callback, asyncState);
        }
        
        /// <remarks/>
        public long EndEnterprise_GetSiteCollectionSize(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((long)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionSizeAsync(string url) {
            this.Enterprise_GetSiteCollectionSizeAsync(url, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionSizeAsync(string url, object userState) {
            if ((this.Enterprise_GetSiteCollectionSizeOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionSizeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionSizeOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollectionSize", new object[] {
                        url}, this.Enterprise_GetSiteCollectionSizeOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionSizeOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionSizeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionSizeCompleted(this, new Enterprise_GetSiteCollectionSizeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapHeaderAttribute("ServiceProviderSettingsSoapHeaderValue")]
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/server/Enterprise_SetPeoplePickerOu", RequestNamespace="http://smbsaas/solidcp/server/", ResponseNamespace="http://smbsaas/solidcp/server/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_SetPeoplePickerOu(string site, string ou) {
            this.Invoke("Enterprise_SetPeoplePickerOu", new object[] {
                        site,
                        ou});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_SetPeoplePickerOu(string site, string ou, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_SetPeoplePickerOu", new object[] {
                        site,
                        ou}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_SetPeoplePickerOu(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_SetPeoplePickerOuAsync(string site, string ou) {
            this.Enterprise_SetPeoplePickerOuAsync(site, ou, null);
        }
        
        /// <remarks/>
        public void Enterprise_SetPeoplePickerOuAsync(string site, string ou, object userState) {
            if ((this.Enterprise_SetPeoplePickerOuOperationCompleted == null)) {
                this.Enterprise_SetPeoplePickerOuOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_SetPeoplePickerOuOperationCompleted);
            }
            this.InvokeAsync("Enterprise_SetPeoplePickerOu", new object[] {
                        site,
                        ou}, this.Enterprise_SetPeoplePickerOuOperationCompleted, userState);
        }
        
        private void OnEnterprise_SetPeoplePickerOuOperationCompleted(object arg) {
            if ((this.Enterprise_SetPeoplePickerOuCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_SetPeoplePickerOuCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSupportedLanguagesCompletedEventHandler(object sender, Enterprise_GetSupportedLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSupportedLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSupportedLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionsCompletedEventHandler(object sender, Enterprise_GetSiteCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionCompletedEventHandler(object sender, Enterprise_GetSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_CreateSiteCollectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_UpdateQuotasCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventHandler(object sender, Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_CalculateSiteCollectionsDiskSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointSiteDiskSpace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointSiteDiskSpace[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_DeleteSiteCollectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_BackupSiteCollectionCompletedEventHandler(object sender, Enterprise_BackupSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_BackupSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_BackupSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_RestoreSiteCollectionCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetTempFileBinaryChunkCompletedEventHandler(object sender, Enterprise_GetTempFileBinaryChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetTempFileBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetTempFileBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_AppendTempFileBinaryChunkCompletedEventHandler(object sender, Enterprise_AppendTempFileBinaryChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_AppendTempFileBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_AppendTempFileBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionSizeCompletedEventHandler(object sender, Enterprise_GetSiteCollectionSizeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionSizeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionSizeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public long Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((long)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_SetPeoplePickerOuCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
