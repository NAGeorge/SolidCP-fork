<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="btnCancel.Text" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="btnInstall.Text" xml:space="preserve">
    <value>  Install  </value>
  </data>
  <data name="lblConfirmPassword.Text" xml:space="preserve">
    <value>Confirm password:</value>
  </data>
  <data name="lblDatabase.Text" xml:space="preserve">
    <value>Database:</value>
  </data>
  <data name="lblDatabaseName.Text" xml:space="preserve">
    <value>Database Name:</value>
  </data>
  <data name="lblDatabaseUser.Text" xml:space="preserve">
    <value>Database user:</value>
  </data>
  <data name="lblEnterDatabaseName.Text" xml:space="preserve">
    <value>Enter database name:</value>
  </data>
  <data name="lblEnterUserName.Text" xml:space="preserve">
    <value>Enter user name:</value>
  </data>
  <data name="lblInstallOnDirectory.Text" xml:space="preserve">
    <value>Application Name</value>
  </data>
  <data name="lblInstallOnWebSite.Text" xml:space="preserve">
    <value>Web Site</value>
  </data>
  <data name="lblLeaveThisFieldBlank.Text" xml:space="preserve">
    <value>Leave this field blank if you want to install the application in 
						the root of the web site (it will be accessible by http://www.yourdomain.com).&lt;br&gt;
						Otherwise, specify the name of the virtual directory to install the application 
						in (it will be accessible by http://www.yourdomain.com/directory_name). You can 
						specify the name of the existing directory too.</value>
  </data>
  <data name="lblMicrosoftSQLServerDatabase.Text" xml:space="preserve">
    <value>This application requires &lt;b&gt;Microsoft SQL Server&lt;/b&gt; database.</value>
  </data>
  <data name="lblMySQLServerDatabase.Text" xml:space="preserve">
    <value>This application requires &lt;b&gt;MySQL Server&lt;/b&gt; database.</value>
  </data>
  <data name="lblMariaDBDatabase.Text" xml:space="preserve">
    <value>This application requires &lt;b&gt;MariaDB Server&lt;/b&gt; database.</value>
  </data>
  <data name="lblNoDatabase.Text" xml:space="preserve">
    <value>This application doesn't require any database.</value>
  </data>
  <data name="lblPassword.Text" xml:space="preserve">
    <value>Password:</value>
  </data>
  <data name="lblSelectDatabase.Text" xml:space="preserve">
    <value>Select database:</value>
  </data>
  <data name="lblSelectUserName.Text" xml:space="preserve">
    <value>Select user name:</value>
  </data>
  <data name="lblUsername.Text" xml:space="preserve">
    <value>Username:</value>
  </data>
  <data name="rblDatabaseItem.ExistingDatabase" xml:space="preserve">
    <value>Use existing database</value>
  </data>
  <data name="rblDatabaseItem.NewDatabase" xml:space="preserve">
    <value>Create new database</value>
  </data>
  <data name="rblUserItem.ExistingUser" xml:space="preserve">
    <value>Existing User</value>
  </data>
  <data name="rblUserItem.NewUser" xml:space="preserve">
    <value>New User</value>
  </data>
  <data name="secAppSettings.Text" xml:space="preserve">
    <value>Application Information</value>
  </data>
  <data name="secDatabase.Text" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="secLocation.Text" xml:space="preserve">
    <value>Site Information</value>
  </data>
  <data name="Text.SelectDatabase" xml:space="preserve">
    <value>&lt;Select Database&gt;</value>
  </data>
  <data name="Text.SelectUser" xml:space="preserve">
    <value>&lt;Select User&gt;</value>
  </data>
  <data name="Text.SelectWebSite" xml:space="preserve">
    <value>&lt;Select Web Site&gt;</value>
  </data>
  <data name="hlApplication.Text" xml:space="preserve">
    <value>Click this link to access the application.</value>
  </data>
  <data name="btnOK.Text" xml:space="preserve">
    <value>OK</value>
  </data>
  <data name="DatabaseEngine.FlatFile" xml:space="preserve">
    <value>Flat File</value>
  </data>
  <data name="DatabaseEngine.SQLite" xml:space="preserve">
    <value>SQLite</value>
  </data>
  <data name="DatabaseEngine.VistaDB" xml:space="preserve">
    <value>VistaDB</value>
  </data>
  <data name="locDatabaseGroup.Text" xml:space="preserve">
    <value>Database</value>
  </data>
  <data name="locDatabaseGroupDescr.Text" xml:space="preserve">
    <value>Choose your database:</value>
  </data>
  <data name="locDatabaseType.Text" xml:space="preserve">
    <value>Database type</value>
  </data>
  <data name="locDatabaseTypeDescr.Text" xml:space="preserve">
    <value>Choose your database type:</value>
  </data>
  <data name="locNewDatabase.Text" xml:space="preserve">
    <value>Create a new or use an existing database</value>
  </data>
  <data name="locNewDatabaseDescr.Text" xml:space="preserve">
    <value>Choose whether the package should create a new database during installation or use an existing database:</value>
  </data>
  <data name="locWebSiteDescription.Text" xml:space="preserve">
    <value>Select web site to install the application:</value>
  </data>
  <data name="valRequireWebSite.Text" xml:space="preserve">
    <value>Select web site to install the application</value>
  </data>
  <data name="LaunchApplication.Text" xml:space="preserve">
    <value>Launch {0}</value>
  </data>
  <data name="LaunchApplicationTemp.Text" xml:space="preserve">
    <value>If you recently created this web site it still might be not accessible by its main URL until DNS propagation is completely finished. To open installed application right now you can use this temporary URL provided by your hosting provider: &lt;br/&gt;&lt;a href="{0}" target="_blank"&gt;{0}&lt;/a&gt;</value>
  </data>
  <data name="btnInstallText.Text" xml:space="preserve">
    <value>Install</value>
  </data>
  <data name="btnShowInstallLogText.Text" xml:space="preserve">
    <value>Show Install Log</value>
  </data>
</root>