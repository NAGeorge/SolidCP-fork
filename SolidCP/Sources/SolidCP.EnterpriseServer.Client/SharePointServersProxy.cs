// Copyright (c) 2016, SolidCP
// SolidCP is distributed under the Creative Commons Share-alike license
// 
// SolidCP is a fork of WebsitePanel:
// Copyright (c) 2015, Outercurve Foundation.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// - Redistributions of source code must  retain  the  above copyright notice, this
//   list of conditions and the following disclaimer.
//
// - Redistributions in binary form  must  reproduce the  above  copyright  notice,
//   this list of conditions  and  the  following  disclaimer in  the documentation
//   and/or other materials provided with the distribution.
//
// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its
//   contributors may be used to endorse or  promote  products  derived  from  this
//   software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT  NOT  LIMITED TO, THE IMPLIED
// WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR  PURPOSE  ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL,  SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT  OF  SUBSTITUTE  GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER  CAUSED AND ON
// ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT  LIABILITY,  OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING  IN  ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.42
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
namespace SolidCP.EnterpriseServer
{
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    using System.Data;

    using SolidCP.Providers;
    using SolidCP.Providers.OS;
    using SolidCP.Providers.SharePoint;

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name = "esSharePointServersSoap", Namespace = "http://smbsaas/solidcp/enterpriseserver")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceProviderItem))]
    public partial class esSharePointServers : Microsoft.Web.Services3.WebServicesClientProtocol
    {

        private System.Threading.SendOrPostCallback GetRawSharePointSitesPagedOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointSitesOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointSiteOperationCompleted;

        private System.Threading.SendOrPostCallback AddSharePointSiteOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteSharePointSiteOperationCompleted;

        private System.Threading.SendOrPostCallback BackupVirtualServerOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointBackupBinaryChunkOperationCompleted;

        private System.Threading.SendOrPostCallback AppendSharePointBackupBinaryChunkOperationCompleted;

        private System.Threading.SendOrPostCallback RestoreVirtualServerOperationCompleted;

        private System.Threading.SendOrPostCallback GetInstalledWebPartsOperationCompleted;

        private System.Threading.SendOrPostCallback InstallWebPartsPackageOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteWebPartsPackageOperationCompleted;

        private System.Threading.SendOrPostCallback GetRawSharePointUsersPagedOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointUsersOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointUserOperationCompleted;

        private System.Threading.SendOrPostCallback AddSharePointUserOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSharePointUserOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteSharePointUserOperationCompleted;

        private System.Threading.SendOrPostCallback GetRawSharePointGroupsPagedOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointGroupsOperationCompleted;

        private System.Threading.SendOrPostCallback GetSharePointGroupOperationCompleted;

        private System.Threading.SendOrPostCallback AddSharePointGroupOperationCompleted;

        private System.Threading.SendOrPostCallback UpdateSharePointGroupOperationCompleted;

        private System.Threading.SendOrPostCallback DeleteSharePointGroupOperationCompleted;

        /// <remarks/>
        public esSharePointServers()
        {
            this.Url = "http://localhost/SolidCPEnterpriseServer11/esSharePointServers.asmx";
        }

        /// <remarks/>
        public event GetRawSharePointSitesPagedCompletedEventHandler GetRawSharePointSitesPagedCompleted;

        /// <remarks/>
        public event GetSharePointSitesCompletedEventHandler GetSharePointSitesCompleted;

        /// <remarks/>
        public event GetSharePointSiteCompletedEventHandler GetSharePointSiteCompleted;

        /// <remarks/>
        public event AddSharePointSiteCompletedEventHandler AddSharePointSiteCompleted;

        /// <remarks/>
        public event DeleteSharePointSiteCompletedEventHandler DeleteSharePointSiteCompleted;

        /// <remarks/>
        public event BackupVirtualServerCompletedEventHandler BackupVirtualServerCompleted;

        /// <remarks/>
        public event GetSharePointBackupBinaryChunkCompletedEventHandler GetSharePointBackupBinaryChunkCompleted;

        /// <remarks/>
        public event AppendSharePointBackupBinaryChunkCompletedEventHandler AppendSharePointBackupBinaryChunkCompleted;

        /// <remarks/>
        public event RestoreVirtualServerCompletedEventHandler RestoreVirtualServerCompleted;

        /// <remarks/>
        public event GetInstalledWebPartsCompletedEventHandler GetInstalledWebPartsCompleted;

        /// <remarks/>
        public event InstallWebPartsPackageCompletedEventHandler InstallWebPartsPackageCompleted;

        /// <remarks/>
        public event DeleteWebPartsPackageCompletedEventHandler DeleteWebPartsPackageCompleted;

        /// <remarks/>
        public event GetRawSharePointUsersPagedCompletedEventHandler GetRawSharePointUsersPagedCompleted;

        /// <remarks/>
        public event GetSharePointUsersCompletedEventHandler GetSharePointUsersCompleted;

        /// <remarks/>
        public event GetSharePointUserCompletedEventHandler GetSharePointUserCompleted;

        /// <remarks/>
        public event AddSharePointUserCompletedEventHandler AddSharePointUserCompleted;

        /// <remarks/>
        public event UpdateSharePointUserCompletedEventHandler UpdateSharePointUserCompleted;

        /// <remarks/>
        public event DeleteSharePointUserCompletedEventHandler DeleteSharePointUserCompleted;

        /// <remarks/>
        public event GetRawSharePointGroupsPagedCompletedEventHandler GetRawSharePointGroupsPagedCompleted;

        /// <remarks/>
        public event GetSharePointGroupsCompletedEventHandler GetSharePointGroupsCompleted;

        /// <remarks/>
        public event GetSharePointGroupCompletedEventHandler GetSharePointGroupCompleted;

        /// <remarks/>
        public event AddSharePointGroupCompletedEventHandler AddSharePointGroupCompleted;

        /// <remarks/>
        public event UpdateSharePointGroupCompletedEventHandler UpdateSharePointGroupCompleted;

        /// <remarks/>
        public event DeleteSharePointGroupCompletedEventHandler DeleteSharePointGroupCompleted;

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetRawSharePointSitesPaged", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRawSharePointSitesPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            object[] results = this.Invoke("GetRawSharePointSitesPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRawSharePointSitesPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRawSharePointSitesPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetRawSharePointSitesPaged(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetRawSharePointSitesPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            this.GetRawSharePointSitesPagedAsync(packageId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }

        /// <remarks/>
        public void GetRawSharePointSitesPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState)
        {
            if ((this.GetRawSharePointSitesPagedOperationCompleted == null))
            {
                this.GetRawSharePointSitesPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawSharePointSitesPagedOperationCompleted);
            }
            this.InvokeAsync("GetRawSharePointSitesPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetRawSharePointSitesPagedOperationCompleted, userState);
        }

        private void OnGetRawSharePointSitesPagedOperationCompleted(object arg)
        {
            if ((this.GetRawSharePointSitesPagedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawSharePointSitesPagedCompleted(this, new GetRawSharePointSitesPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointSites", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointSite[] GetSharePointSites(int packageId, bool recursive)
        {
            object[] results = this.Invoke("GetSharePointSites", new object[] {
                        packageId,
                        recursive});
            return ((SharePointSite[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointSites(int packageId, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointSites", new object[] {
                        packageId,
                        recursive}, callback, asyncState);
        }

        /// <remarks/>
        public SharePointSite[] EndGetSharePointSites(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointSite[])(results[0]));
        }

        /// <remarks/>
        public void GetSharePointSitesAsync(int packageId, bool recursive)
        {
            this.GetSharePointSitesAsync(packageId, recursive, null);
        }

        /// <remarks/>
        public void GetSharePointSitesAsync(int packageId, bool recursive, object userState)
        {
            if ((this.GetSharePointSitesOperationCompleted == null))
            {
                this.GetSharePointSitesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointSitesOperationCompleted);
            }
            this.InvokeAsync("GetSharePointSites", new object[] {
                        packageId,
                        recursive}, this.GetSharePointSitesOperationCompleted, userState);
        }

        private void OnGetSharePointSitesOperationCompleted(object arg)
        {
            if ((this.GetSharePointSitesCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointSitesCompleted(this, new GetSharePointSitesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointSite", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointSite GetSharePointSite(int itemId)
        {
            object[] results = this.Invoke("GetSharePointSite", new object[] {
                        itemId});
            return ((SharePointSite)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointSite(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointSite", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public SharePointSite EndGetSharePointSite(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointSite)(results[0]));
        }

        /// <remarks/>
        public void GetSharePointSiteAsync(int itemId)
        {
            this.GetSharePointSiteAsync(itemId, null);
        }

        /// <remarks/>
        public void GetSharePointSiteAsync(int itemId, object userState)
        {
            if ((this.GetSharePointSiteOperationCompleted == null))
            {
                this.GetSharePointSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointSiteOperationCompleted);
            }
            this.InvokeAsync("GetSharePointSite", new object[] {
                        itemId}, this.GetSharePointSiteOperationCompleted, userState);
        }

        private void OnGetSharePointSiteOperationCompleted(object arg)
        {
            if ((this.GetSharePointSiteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointSiteCompleted(this, new GetSharePointSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/AddSharePointSite", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSharePointSite(SharePointSite item)
        {
            object[] results = this.Invoke("AddSharePointSite", new object[] {
                        item});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddSharePointSite(SharePointSite item, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddSharePointSite", new object[] {
                        item}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddSharePointSite(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddSharePointSiteAsync(SharePointSite item)
        {
            this.AddSharePointSiteAsync(item, null);
        }

        /// <remarks/>
        public void AddSharePointSiteAsync(SharePointSite item, object userState)
        {
            if ((this.AddSharePointSiteOperationCompleted == null))
            {
                this.AddSharePointSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSharePointSiteOperationCompleted);
            }
            this.InvokeAsync("AddSharePointSite", new object[] {
                        item}, this.AddSharePointSiteOperationCompleted, userState);
        }

        private void OnAddSharePointSiteOperationCompleted(object arg)
        {
            if ((this.AddSharePointSiteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSharePointSiteCompleted(this, new AddSharePointSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteSharePointSite", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSharePointSite(int itemId)
        {
            object[] results = this.Invoke("DeleteSharePointSite", new object[] {
                        itemId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteSharePointSite(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteSharePointSite", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteSharePointSite(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteSharePointSiteAsync(int itemId)
        {
            this.DeleteSharePointSiteAsync(itemId, null);
        }

        /// <remarks/>
        public void DeleteSharePointSiteAsync(int itemId, object userState)
        {
            if ((this.DeleteSharePointSiteOperationCompleted == null))
            {
                this.DeleteSharePointSiteOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSharePointSiteOperationCompleted);
            }
            this.InvokeAsync("DeleteSharePointSite", new object[] {
                        itemId}, this.DeleteSharePointSiteOperationCompleted, userState);
        }

        private void OnDeleteSharePointSiteOperationCompleted(object arg)
        {
            if ((this.DeleteSharePointSiteCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSharePointSiteCompleted(this, new DeleteSharePointSiteCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/BackupVirtualServer", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string BackupVirtualServer(int itemId, string fileName, bool zipBackup, bool download, string folderName)
        {
            object[] results = this.Invoke("BackupVirtualServer", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginBackupVirtualServer(int itemId, string fileName, bool zipBackup, bool download, string folderName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("BackupVirtualServer", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName}, callback, asyncState);
        }

        /// <remarks/>
        public string EndBackupVirtualServer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void BackupVirtualServerAsync(int itemId, string fileName, bool zipBackup, bool download, string folderName)
        {
            this.BackupVirtualServerAsync(itemId, fileName, zipBackup, download, folderName, null);
        }

        /// <remarks/>
        public void BackupVirtualServerAsync(int itemId, string fileName, bool zipBackup, bool download, string folderName, object userState)
        {
            if ((this.BackupVirtualServerOperationCompleted == null))
            {
                this.BackupVirtualServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnBackupVirtualServerOperationCompleted);
            }
            this.InvokeAsync("BackupVirtualServer", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName}, this.BackupVirtualServerOperationCompleted, userState);
        }

        private void OnBackupVirtualServerOperationCompleted(object arg)
        {
            if ((this.BackupVirtualServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.BackupVirtualServerCompleted(this, new BackupVirtualServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointBackupBinaryChunk" +
            "", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")]
        public byte[] GetSharePointBackupBinaryChunk(int itemId, string path, int offset, int length)
        {
            object[] results = this.Invoke("GetSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length});
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointBackupBinaryChunk(int itemId, string path, int offset, int length, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length}, callback, asyncState);
        }

        /// <remarks/>
        public byte[] EndGetSharePointBackupBinaryChunk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }

        /// <remarks/>
        public void GetSharePointBackupBinaryChunkAsync(int itemId, string path, int offset, int length)
        {
            this.GetSharePointBackupBinaryChunkAsync(itemId, path, offset, length, null);
        }

        /// <remarks/>
        public void GetSharePointBackupBinaryChunkAsync(int itemId, string path, int offset, int length, object userState)
        {
            if ((this.GetSharePointBackupBinaryChunkOperationCompleted == null))
            {
                this.GetSharePointBackupBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointBackupBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("GetSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length}, this.GetSharePointBackupBinaryChunkOperationCompleted, userState);
        }

        private void OnGetSharePointBackupBinaryChunkOperationCompleted(object arg)
        {
            if ((this.GetSharePointBackupBinaryChunkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointBackupBinaryChunkCompleted(this, new GetSharePointBackupBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/AppendSharePointBackupBinaryCh" +
            "unk", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string AppendSharePointBackupBinaryChunk(int itemId, string fileName, string path, [System.Xml.Serialization.XmlElementAttribute(DataType = "base64Binary")] byte[] chunk)
        {
            object[] results = this.Invoke("AppendSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk});
            return ((string)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAppendSharePointBackupBinaryChunk(int itemId, string fileName, string path, byte[] chunk, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AppendSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk}, callback, asyncState);
        }

        /// <remarks/>
        public string EndAppendSharePointBackupBinaryChunk(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }

        /// <remarks/>
        public void AppendSharePointBackupBinaryChunkAsync(int itemId, string fileName, string path, byte[] chunk)
        {
            this.AppendSharePointBackupBinaryChunkAsync(itemId, fileName, path, chunk, null);
        }

        /// <remarks/>
        public void AppendSharePointBackupBinaryChunkAsync(int itemId, string fileName, string path, byte[] chunk, object userState)
        {
            if ((this.AppendSharePointBackupBinaryChunkOperationCompleted == null))
            {
                this.AppendSharePointBackupBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAppendSharePointBackupBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("AppendSharePointBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk}, this.AppendSharePointBackupBinaryChunkOperationCompleted, userState);
        }

        private void OnAppendSharePointBackupBinaryChunkOperationCompleted(object arg)
        {
            if ((this.AppendSharePointBackupBinaryChunkCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AppendSharePointBackupBinaryChunkCompleted(this, new AppendSharePointBackupBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/RestoreVirtualServer", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int RestoreVirtualServer(int itemId, string uploadedFile, string packageFile)
        {
            object[] results = this.Invoke("RestoreVirtualServer", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginRestoreVirtualServer(int itemId, string uploadedFile, string packageFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("RestoreVirtualServer", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, callback, asyncState);
        }

        /// <remarks/>
        public int EndRestoreVirtualServer(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void RestoreVirtualServerAsync(int itemId, string uploadedFile, string packageFile)
        {
            this.RestoreVirtualServerAsync(itemId, uploadedFile, packageFile, null);
        }

        /// <remarks/>
        public void RestoreVirtualServerAsync(int itemId, string uploadedFile, string packageFile, object userState)
        {
            if ((this.RestoreVirtualServerOperationCompleted == null))
            {
                this.RestoreVirtualServerOperationCompleted = new System.Threading.SendOrPostCallback(this.OnRestoreVirtualServerOperationCompleted);
            }
            this.InvokeAsync("RestoreVirtualServer", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, this.RestoreVirtualServerOperationCompleted, userState);
        }

        private void OnRestoreVirtualServerOperationCompleted(object arg)
        {
            if ((this.RestoreVirtualServerCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.RestoreVirtualServerCompleted(this, new RestoreVirtualServerCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetInstalledWebParts", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string[] GetInstalledWebParts(int itemId)
        {
            object[] results = this.Invoke("GetInstalledWebParts", new object[] {
                        itemId});
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetInstalledWebParts(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetInstalledWebParts", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public string[] EndGetInstalledWebParts(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((string[])(results[0]));
        }

        /// <remarks/>
        public void GetInstalledWebPartsAsync(int itemId)
        {
            this.GetInstalledWebPartsAsync(itemId, null);
        }

        /// <remarks/>
        public void GetInstalledWebPartsAsync(int itemId, object userState)
        {
            if ((this.GetInstalledWebPartsOperationCompleted == null))
            {
                this.GetInstalledWebPartsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetInstalledWebPartsOperationCompleted);
            }
            this.InvokeAsync("GetInstalledWebParts", new object[] {
                        itemId}, this.GetInstalledWebPartsOperationCompleted, userState);
        }

        private void OnGetInstalledWebPartsOperationCompleted(object arg)
        {
            if ((this.GetInstalledWebPartsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetInstalledWebPartsCompleted(this, new GetInstalledWebPartsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/InstallWebPartsPackage", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int InstallWebPartsPackage(int itemId, string uploadedFile, string packageFile)
        {
            object[] results = this.Invoke("InstallWebPartsPackage", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginInstallWebPartsPackage(int itemId, string uploadedFile, string packageFile, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("InstallWebPartsPackage", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, callback, asyncState);
        }

        /// <remarks/>
        public int EndInstallWebPartsPackage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void InstallWebPartsPackageAsync(int itemId, string uploadedFile, string packageFile)
        {
            this.InstallWebPartsPackageAsync(itemId, uploadedFile, packageFile, null);
        }

        /// <remarks/>
        public void InstallWebPartsPackageAsync(int itemId, string uploadedFile, string packageFile, object userState)
        {
            if ((this.InstallWebPartsPackageOperationCompleted == null))
            {
                this.InstallWebPartsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnInstallWebPartsPackageOperationCompleted);
            }
            this.InvokeAsync("InstallWebPartsPackage", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, this.InstallWebPartsPackageOperationCompleted, userState);
        }

        private void OnInstallWebPartsPackageOperationCompleted(object arg)
        {
            if ((this.InstallWebPartsPackageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.InstallWebPartsPackageCompleted(this, new InstallWebPartsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteWebPartsPackage", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteWebPartsPackage(int itemId, string packageName)
        {
            object[] results = this.Invoke("DeleteWebPartsPackage", new object[] {
                        itemId,
                        packageName});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteWebPartsPackage(int itemId, string packageName, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteWebPartsPackage", new object[] {
                        itemId,
                        packageName}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteWebPartsPackage(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteWebPartsPackageAsync(int itemId, string packageName)
        {
            this.DeleteWebPartsPackageAsync(itemId, packageName, null);
        }

        /// <remarks/>
        public void DeleteWebPartsPackageAsync(int itemId, string packageName, object userState)
        {
            if ((this.DeleteWebPartsPackageOperationCompleted == null))
            {
                this.DeleteWebPartsPackageOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteWebPartsPackageOperationCompleted);
            }
            this.InvokeAsync("DeleteWebPartsPackage", new object[] {
                        itemId,
                        packageName}, this.DeleteWebPartsPackageOperationCompleted, userState);
        }

        private void OnDeleteWebPartsPackageOperationCompleted(object arg)
        {
            if ((this.DeleteWebPartsPackageCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteWebPartsPackageCompleted(this, new DeleteWebPartsPackageCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetRawSharePointUsersPaged", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRawSharePointUsersPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            object[] results = this.Invoke("GetRawSharePointUsersPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRawSharePointUsersPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRawSharePointUsersPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetRawSharePointUsersPaged(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetRawSharePointUsersPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            this.GetRawSharePointUsersPagedAsync(packageId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }

        /// <remarks/>
        public void GetRawSharePointUsersPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState)
        {
            if ((this.GetRawSharePointUsersPagedOperationCompleted == null))
            {
                this.GetRawSharePointUsersPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawSharePointUsersPagedOperationCompleted);
            }
            this.InvokeAsync("GetRawSharePointUsersPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetRawSharePointUsersPagedOperationCompleted, userState);
        }

        private void OnGetRawSharePointUsersPagedOperationCompleted(object arg)
        {
            if ((this.GetRawSharePointUsersPagedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawSharePointUsersPagedCompleted(this, new GetRawSharePointUsersPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointUsers", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemUser[] GetSharePointUsers(int packageId, bool recursive)
        {
            object[] results = this.Invoke("GetSharePointUsers", new object[] {
                        packageId,
                        recursive});
            return ((SystemUser[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointUsers(int packageId, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointUsers", new object[] {
                        packageId,
                        recursive}, callback, asyncState);
        }

        /// <remarks/>
        public SystemUser[] EndGetSharePointUsers(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemUser[])(results[0]));
        }

        /// <remarks/>
        public void GetSharePointUsersAsync(int packageId, bool recursive)
        {
            this.GetSharePointUsersAsync(packageId, recursive, null);
        }

        /// <remarks/>
        public void GetSharePointUsersAsync(int packageId, bool recursive, object userState)
        {
            if ((this.GetSharePointUsersOperationCompleted == null))
            {
                this.GetSharePointUsersOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointUsersOperationCompleted);
            }
            this.InvokeAsync("GetSharePointUsers", new object[] {
                        packageId,
                        recursive}, this.GetSharePointUsersOperationCompleted, userState);
        }

        private void OnGetSharePointUsersOperationCompleted(object arg)
        {
            if ((this.GetSharePointUsersCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointUsersCompleted(this, new GetSharePointUsersCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointUser", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemUser GetSharePointUser(int itemId)
        {
            object[] results = this.Invoke("GetSharePointUser", new object[] {
                        itemId});
            return ((SystemUser)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointUser(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointUser", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public SystemUser EndGetSharePointUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemUser)(results[0]));
        }

        /// <remarks/>
        public void GetSharePointUserAsync(int itemId)
        {
            this.GetSharePointUserAsync(itemId, null);
        }

        /// <remarks/>
        public void GetSharePointUserAsync(int itemId, object userState)
        {
            if ((this.GetSharePointUserOperationCompleted == null))
            {
                this.GetSharePointUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointUserOperationCompleted);
            }
            this.InvokeAsync("GetSharePointUser", new object[] {
                        itemId}, this.GetSharePointUserOperationCompleted, userState);
        }

        private void OnGetSharePointUserOperationCompleted(object arg)
        {
            if ((this.GetSharePointUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointUserCompleted(this, new GetSharePointUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/AddSharePointUser", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSharePointUser(SystemUser item)
        {
            object[] results = this.Invoke("AddSharePointUser", new object[] {
                        item});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddSharePointUser(SystemUser item, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddSharePointUser", new object[] {
                        item}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddSharePointUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddSharePointUserAsync(SystemUser item)
        {
            this.AddSharePointUserAsync(item, null);
        }

        /// <remarks/>
        public void AddSharePointUserAsync(SystemUser item, object userState)
        {
            if ((this.AddSharePointUserOperationCompleted == null))
            {
                this.AddSharePointUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSharePointUserOperationCompleted);
            }
            this.InvokeAsync("AddSharePointUser", new object[] {
                        item}, this.AddSharePointUserOperationCompleted, userState);
        }

        private void OnAddSharePointUserOperationCompleted(object arg)
        {
            if ((this.AddSharePointUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSharePointUserCompleted(this, new AddSharePointUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/UpdateSharePointUser", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSharePointUser(SystemUser item)
        {
            object[] results = this.Invoke("UpdateSharePointUser", new object[] {
                        item});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateSharePointUser(SystemUser item, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateSharePointUser", new object[] {
                        item}, callback, asyncState);
        }

        /// <remarks/>
        public int EndUpdateSharePointUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void UpdateSharePointUserAsync(SystemUser item)
        {
            this.UpdateSharePointUserAsync(item, null);
        }

        /// <remarks/>
        public void UpdateSharePointUserAsync(SystemUser item, object userState)
        {
            if ((this.UpdateSharePointUserOperationCompleted == null))
            {
                this.UpdateSharePointUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSharePointUserOperationCompleted);
            }
            this.InvokeAsync("UpdateSharePointUser", new object[] {
                        item}, this.UpdateSharePointUserOperationCompleted, userState);
        }

        private void OnUpdateSharePointUserOperationCompleted(object arg)
        {
            if ((this.UpdateSharePointUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSharePointUserCompleted(this, new UpdateSharePointUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteSharePointUser", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSharePointUser(int itemId)
        {
            object[] results = this.Invoke("DeleteSharePointUser", new object[] {
                        itemId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteSharePointUser(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteSharePointUser", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteSharePointUser(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteSharePointUserAsync(int itemId)
        {
            this.DeleteSharePointUserAsync(itemId, null);
        }

        /// <remarks/>
        public void DeleteSharePointUserAsync(int itemId, object userState)
        {
            if ((this.DeleteSharePointUserOperationCompleted == null))
            {
                this.DeleteSharePointUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSharePointUserOperationCompleted);
            }
            this.InvokeAsync("DeleteSharePointUser", new object[] {
                        itemId}, this.DeleteSharePointUserOperationCompleted, userState);
        }

        private void OnDeleteSharePointUserOperationCompleted(object arg)
        {
            if ((this.DeleteSharePointUserCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSharePointUserCompleted(this, new DeleteSharePointUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetRawSharePointGroupsPaged", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRawSharePointGroupsPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            object[] results = this.Invoke("GetRawSharePointGroupsPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetRawSharePointGroupsPaged(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetRawSharePointGroupsPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }

        /// <remarks/>
        public System.Data.DataSet EndGetRawSharePointGroupsPaged(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }

        /// <remarks/>
        public void GetRawSharePointGroupsPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows)
        {
            this.GetRawSharePointGroupsPagedAsync(packageId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }

        /// <remarks/>
        public void GetRawSharePointGroupsPagedAsync(int packageId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState)
        {
            if ((this.GetRawSharePointGroupsPagedOperationCompleted == null))
            {
                this.GetRawSharePointGroupsPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawSharePointGroupsPagedOperationCompleted);
            }
            this.InvokeAsync("GetRawSharePointGroupsPaged", new object[] {
                        packageId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetRawSharePointGroupsPagedOperationCompleted, userState);
        }

        private void OnGetRawSharePointGroupsPagedOperationCompleted(object arg)
        {
            if ((this.GetRawSharePointGroupsPagedCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawSharePointGroupsPagedCompleted(this, new GetRawSharePointGroupsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointGroups", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemGroup[] GetSharePointGroups(int packageId, bool recursive)
        {
            object[] results = this.Invoke("GetSharePointGroups", new object[] {
                        packageId,
                        recursive});
            return ((SystemGroup[])(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointGroups(int packageId, bool recursive, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointGroups", new object[] {
                        packageId,
                        recursive}, callback, asyncState);
        }

        /// <remarks/>
        public SystemGroup[] EndGetSharePointGroups(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemGroup[])(results[0]));
        }

        /// <remarks/>
        public void GetSharePointGroupsAsync(int packageId, bool recursive)
        {
            this.GetSharePointGroupsAsync(packageId, recursive, null);
        }

        /// <remarks/>
        public void GetSharePointGroupsAsync(int packageId, bool recursive, object userState)
        {
            if ((this.GetSharePointGroupsOperationCompleted == null))
            {
                this.GetSharePointGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointGroupsOperationCompleted);
            }
            this.InvokeAsync("GetSharePointGroups", new object[] {
                        packageId,
                        recursive}, this.GetSharePointGroupsOperationCompleted, userState);
        }

        private void OnGetSharePointGroupsOperationCompleted(object arg)
        {
            if ((this.GetSharePointGroupsCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointGroupsCompleted(this, new GetSharePointGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetSharePointGroup", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemGroup GetSharePointGroup(int itemId)
        {
            object[] results = this.Invoke("GetSharePointGroup", new object[] {
                        itemId});
            return ((SystemGroup)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginGetSharePointGroup(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("GetSharePointGroup", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public SystemGroup EndGetSharePointGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemGroup)(results[0]));
        }

        /// <remarks/>
        public void GetSharePointGroupAsync(int itemId)
        {
            this.GetSharePointGroupAsync(itemId, null);
        }

        /// <remarks/>
        public void GetSharePointGroupAsync(int itemId, object userState)
        {
            if ((this.GetSharePointGroupOperationCompleted == null))
            {
                this.GetSharePointGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSharePointGroupOperationCompleted);
            }
            this.InvokeAsync("GetSharePointGroup", new object[] {
                        itemId}, this.GetSharePointGroupOperationCompleted, userState);
        }

        private void OnGetSharePointGroupOperationCompleted(object arg)
        {
            if ((this.GetSharePointGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSharePointGroupCompleted(this, new GetSharePointGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/AddSharePointGroup", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSharePointGroup(SystemGroup item)
        {
            object[] results = this.Invoke("AddSharePointGroup", new object[] {
                        item});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginAddSharePointGroup(SystemGroup item, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("AddSharePointGroup", new object[] {
                        item}, callback, asyncState);
        }

        /// <remarks/>
        public int EndAddSharePointGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void AddSharePointGroupAsync(SystemGroup item)
        {
            this.AddSharePointGroupAsync(item, null);
        }

        /// <remarks/>
        public void AddSharePointGroupAsync(SystemGroup item, object userState)
        {
            if ((this.AddSharePointGroupOperationCompleted == null))
            {
                this.AddSharePointGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSharePointGroupOperationCompleted);
            }
            this.InvokeAsync("AddSharePointGroup", new object[] {
                        item}, this.AddSharePointGroupOperationCompleted, userState);
        }

        private void OnAddSharePointGroupOperationCompleted(object arg)
        {
            if ((this.AddSharePointGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSharePointGroupCompleted(this, new AddSharePointGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/UpdateSharePointGroup", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int UpdateSharePointGroup(SystemGroup item)
        {
            object[] results = this.Invoke("UpdateSharePointGroup", new object[] {
                        item});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginUpdateSharePointGroup(SystemGroup item, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("UpdateSharePointGroup", new object[] {
                        item}, callback, asyncState);
        }

        /// <remarks/>
        public int EndUpdateSharePointGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void UpdateSharePointGroupAsync(SystemGroup item)
        {
            this.UpdateSharePointGroupAsync(item, null);
        }

        /// <remarks/>
        public void UpdateSharePointGroupAsync(SystemGroup item, object userState)
        {
            if ((this.UpdateSharePointGroupOperationCompleted == null))
            {
                this.UpdateSharePointGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSharePointGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateSharePointGroup", new object[] {
                        item}, this.UpdateSharePointGroupOperationCompleted, userState);
        }

        private void OnUpdateSharePointGroupOperationCompleted(object arg)
        {
            if ((this.UpdateSharePointGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSharePointGroupCompleted(this, new UpdateSharePointGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteSharePointGroup", RequestNamespace = "http://smbsaas/solidcp/enterpriseserver", ResponseNamespace = "http://smbsaas/solidcp/enterpriseserver", Use = System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle = System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSharePointGroup(int itemId)
        {
            object[] results = this.Invoke("DeleteSharePointGroup", new object[] {
                        itemId});
            return ((int)(results[0]));
        }

        /// <remarks/>
        public System.IAsyncResult BeginDeleteSharePointGroup(int itemId, System.AsyncCallback callback, object asyncState)
        {
            return this.BeginInvoke("DeleteSharePointGroup", new object[] {
                        itemId}, callback, asyncState);
        }

        /// <remarks/>
        public int EndDeleteSharePointGroup(System.IAsyncResult asyncResult)
        {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }

        /// <remarks/>
        public void DeleteSharePointGroupAsync(int itemId)
        {
            this.DeleteSharePointGroupAsync(itemId, null);
        }

        /// <remarks/>
        public void DeleteSharePointGroupAsync(int itemId, object userState)
        {
            if ((this.DeleteSharePointGroupOperationCompleted == null))
            {
                this.DeleteSharePointGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSharePointGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteSharePointGroup", new object[] {
                        itemId}, this.DeleteSharePointGroupOperationCompleted, userState);
        }

        private void OnDeleteSharePointGroupOperationCompleted(object arg)
        {
            if ((this.DeleteSharePointGroupCompleted != null))
            {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSharePointGroupCompleted(this, new DeleteSharePointGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }

        /// <remarks/>
        public new void CancelAsync(object userState)
        {
            base.CancelAsync(userState);
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetRawSharePointSitesPagedCompletedEventHandler(object sender, GetRawSharePointSitesPagedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawSharePointSitesPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRawSharePointSitesPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointSitesCompletedEventHandler(object sender, GetSharePointSitesCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointSitesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointSitesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SharePointSite[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SharePointSite[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointSiteCompletedEventHandler(object sender, GetSharePointSiteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SharePointSite Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SharePointSite)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddSharePointSiteCompletedEventHandler(object sender, AddSharePointSiteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSharePointSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddSharePointSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteSharePointSiteCompletedEventHandler(object sender, DeleteSharePointSiteCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSharePointSiteCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteSharePointSiteCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void BackupVirtualServerCompletedEventHandler(object sender, BackupVirtualServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class BackupVirtualServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal BackupVirtualServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointBackupBinaryChunkCompletedEventHandler(object sender, GetSharePointBackupBinaryChunkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointBackupBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointBackupBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public byte[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AppendSharePointBackupBinaryChunkCompletedEventHandler(object sender, AppendSharePointBackupBinaryChunkCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AppendSharePointBackupBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AppendSharePointBackupBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void RestoreVirtualServerCompletedEventHandler(object sender, RestoreVirtualServerCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class RestoreVirtualServerCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal RestoreVirtualServerCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetInstalledWebPartsCompletedEventHandler(object sender, GetInstalledWebPartsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetInstalledWebPartsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetInstalledWebPartsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public string[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((string[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void InstallWebPartsPackageCompletedEventHandler(object sender, InstallWebPartsPackageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class InstallWebPartsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal InstallWebPartsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteWebPartsPackageCompletedEventHandler(object sender, DeleteWebPartsPackageCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteWebPartsPackageCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteWebPartsPackageCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetRawSharePointUsersPagedCompletedEventHandler(object sender, GetRawSharePointUsersPagedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawSharePointUsersPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRawSharePointUsersPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointUsersCompletedEventHandler(object sender, GetSharePointUsersCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointUsersCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointUsersCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemUser[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemUser[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointUserCompletedEventHandler(object sender, GetSharePointUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemUser Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemUser)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddSharePointUserCompletedEventHandler(object sender, AddSharePointUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSharePointUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddSharePointUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateSharePointUserCompletedEventHandler(object sender, UpdateSharePointUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSharePointUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateSharePointUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteSharePointUserCompletedEventHandler(object sender, DeleteSharePointUserCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSharePointUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteSharePointUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetRawSharePointGroupsPagedCompletedEventHandler(object sender, GetRawSharePointGroupsPagedCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawSharePointGroupsPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetRawSharePointGroupsPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public System.Data.DataSet Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointGroupsCompletedEventHandler(object sender, GetSharePointGroupsCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemGroup[] Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemGroup[])(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetSharePointGroupCompletedEventHandler(object sender, GetSharePointGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSharePointGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal GetSharePointGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public SystemGroup Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((SystemGroup)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void AddSharePointGroupCompletedEventHandler(object sender, AddSharePointGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSharePointGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal AddSharePointGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void UpdateSharePointGroupCompletedEventHandler(object sender, UpdateSharePointGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class UpdateSharePointGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal UpdateSharePointGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteSharePointGroupCompletedEventHandler(object sender, DeleteSharePointGroupCompletedEventArgs e);

    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSharePointGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs
    {

        private object[] results;

        internal DeleteSharePointGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState)
            :
                base(exception, cancelled, userState)
        {
            this.results = results;
        }

        /// <remarks/>
        public int Result
        {
            get
            {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
}
