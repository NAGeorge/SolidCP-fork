// Copyright (c) 2016, SolidCP
// SolidCP is distributed under the Creative Commons Share-alike license
// 
// SolidCP is a fork of WebsitePanel:
// Copyright (c) 2015, Outercurve Foundation.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// - Redistributions of source code must  retain  the  above copyright notice, this
//   list of conditions and the following disclaimer.
//
// - Redistributions in binary form  must  reproduce the  above  copyright  notice,
//   this list of conditions  and  the  following  disclaimer in  the documentation
//   and/or other materials provided with the distribution.
//
// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its
//   contributors may be used to endorse or  promote  products  derived  from  this
//   software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT  NOT  LIMITED TO, THE IMPLIED
// WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR  PURPOSE  ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL,  SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT  OF  SUBSTITUTE  GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER  CAUSED AND ON
// ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT  LIABILITY,  OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING  IN  ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.8009
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 
namespace SolidCP.EnterpriseServer {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    using SolidCP.Providers.SharePoint;
    using SolidCP.Providers;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="esHostedSharePointServersEntSoap", Namespace="http://smbsaas/solidcp/enterpriseserver")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceProviderItem))]
    public partial class esHostedSharePointServersEnt : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionsPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSupportedLanguagesOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_SetStorageSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetSiteCollectionByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_AddSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_DeleteSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_DeleteSiteCollectionsOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_BackupSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_RestoreSiteCollectionOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_GetBackupBinaryChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_AppendBackupBinaryChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_CalculateSharePointSitesDiskSpaceOperationCompleted;
        
        private System.Threading.SendOrPostCallback Enterprise_UpdateQuotaOperationCompleted;
        
        /// <remarks/>
        public esHostedSharePointServersEnt() {
            this.Url = "http://127.0.0.1:9002/esHostedSharePointServersEnt.asmx";
        }
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionsPagedCompletedEventHandler Enterprise_GetSiteCollectionsPagedCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSupportedLanguagesCompletedEventHandler Enterprise_GetSupportedLanguagesCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionsCompletedEventHandler Enterprise_GetSiteCollectionsCompleted;
        
        /// <remarks/>
        public event Enterprise_SetStorageSettingsCompletedEventHandler Enterprise_SetStorageSettingsCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionCompletedEventHandler Enterprise_GetSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_GetSiteCollectionByDomainCompletedEventHandler Enterprise_GetSiteCollectionByDomainCompleted;
        
        /// <remarks/>
        public event Enterprise_AddSiteCollectionCompletedEventHandler Enterprise_AddSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_DeleteSiteCollectionCompletedEventHandler Enterprise_DeleteSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_DeleteSiteCollectionsCompletedEventHandler Enterprise_DeleteSiteCollectionsCompleted;
        
        /// <remarks/>
        public event Enterprise_BackupSiteCollectionCompletedEventHandler Enterprise_BackupSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_RestoreSiteCollectionCompletedEventHandler Enterprise_RestoreSiteCollectionCompleted;
        
        /// <remarks/>
        public event Enterprise_GetBackupBinaryChunkCompletedEventHandler Enterprise_GetBackupBinaryChunkCompleted;
        
        /// <remarks/>
        public event Enterprise_AppendBackupBinaryChunkCompletedEventHandler Enterprise_AppendBackupBinaryChunkCompleted;
        
        /// <remarks/>
        public event Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventHandler Enterprise_CalculateSharePointSitesDiskSpaceCompleted;
        
        /// <remarks/>
        public event Enterprise_UpdateQuotaCompletedEventHandler Enterprise_UpdateQuotaCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetSiteCollectionsPaged", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollectionListPaged Enterprise_GetSiteCollectionsPaged(int packageId, int organizationId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            object[] results = this.Invoke("Enterprise_GetSiteCollectionsPaged", new object[] {
                        packageId,
                        organizationId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((SharePointEnterpriseSiteCollectionListPaged)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollectionsPaged(int packageId, int organizationId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollectionsPaged", new object[] {
                        packageId,
                        organizationId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollectionListPaged EndEnterprise_GetSiteCollectionsPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollectionListPaged)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsPagedAsync(int packageId, int organizationId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            this.Enterprise_GetSiteCollectionsPagedAsync(packageId, organizationId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsPagedAsync(int packageId, int organizationId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState) {
            if ((this.Enterprise_GetSiteCollectionsPagedOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionsPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionsPagedOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollectionsPaged", new object[] {
                        packageId,
                        organizationId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.Enterprise_GetSiteCollectionsPagedOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionsPagedOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionsPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionsPagedCompleted(this, new Enterprise_GetSiteCollectionsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetSupportedLanguages", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int[] Enterprise_GetSupportedLanguages(int packageId) {
            object[] results = this.Invoke("Enterprise_GetSupportedLanguages", new object[] {
                        packageId});
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSupportedLanguages(int packageId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSupportedLanguages", new object[] {
                        packageId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int[] EndEnterprise_GetSupportedLanguages(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSupportedLanguagesAsync(int packageId) {
            this.Enterprise_GetSupportedLanguagesAsync(packageId, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSupportedLanguagesAsync(int packageId, object userState) {
            if ((this.Enterprise_GetSupportedLanguagesOperationCompleted == null)) {
                this.Enterprise_GetSupportedLanguagesOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSupportedLanguagesOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSupportedLanguages", new object[] {
                        packageId}, this.Enterprise_GetSupportedLanguagesOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSupportedLanguagesOperationCompleted(object arg) {
            if ((this.Enterprise_GetSupportedLanguagesCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSupportedLanguagesCompleted(this, new Enterprise_GetSupportedLanguagesCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetSiteCollections", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollection[] Enterprise_GetSiteCollections(int packageId, bool recursive) {
            object[] results = this.Invoke("Enterprise_GetSiteCollections", new object[] {
                        packageId,
                        recursive});
            return ((SharePointEnterpriseSiteCollection[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollections(int packageId, bool recursive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollections", new object[] {
                        packageId,
                        recursive}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection[] EndEnterprise_GetSiteCollections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollection[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsAsync(int packageId, bool recursive) {
            this.Enterprise_GetSiteCollectionsAsync(packageId, recursive, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionsAsync(int packageId, bool recursive, object userState) {
            if ((this.Enterprise_GetSiteCollectionsOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionsOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollections", new object[] {
                        packageId,
                        recursive}, this.Enterprise_GetSiteCollectionsOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionsOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionsCompleted(this, new Enterprise_GetSiteCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_SetStorageSettings", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Enterprise_SetStorageSettings(int itemId, int maxStorage, int warningStorage, bool applyToSiteCollections) {
            object[] results = this.Invoke("Enterprise_SetStorageSettings", new object[] {
                        itemId,
                        maxStorage,
                        warningStorage,
                        applyToSiteCollections});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_SetStorageSettings(int itemId, int maxStorage, int warningStorage, bool applyToSiteCollections, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_SetStorageSettings", new object[] {
                        itemId,
                        maxStorage,
                        warningStorage,
                        applyToSiteCollections}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEnterprise_SetStorageSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_SetStorageSettingsAsync(int itemId, int maxStorage, int warningStorage, bool applyToSiteCollections) {
            this.Enterprise_SetStorageSettingsAsync(itemId, maxStorage, warningStorage, applyToSiteCollections, null);
        }
        
        /// <remarks/>
        public void Enterprise_SetStorageSettingsAsync(int itemId, int maxStorage, int warningStorage, bool applyToSiteCollections, object userState) {
            if ((this.Enterprise_SetStorageSettingsOperationCompleted == null)) {
                this.Enterprise_SetStorageSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_SetStorageSettingsOperationCompleted);
            }
            this.InvokeAsync("Enterprise_SetStorageSettings", new object[] {
                        itemId,
                        maxStorage,
                        warningStorage,
                        applyToSiteCollections}, this.Enterprise_SetStorageSettingsOperationCompleted, userState);
        }
        
        private void OnEnterprise_SetStorageSettingsOperationCompleted(object arg) {
            if ((this.Enterprise_SetStorageSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_SetStorageSettingsCompleted(this, new Enterprise_SetStorageSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetSiteCollection", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollection Enterprise_GetSiteCollection(int itemId) {
            object[] results = this.Invoke("Enterprise_GetSiteCollection", new object[] {
                        itemId});
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollection(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollection", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection EndEnterprise_GetSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionAsync(int itemId) {
            this.Enterprise_GetSiteCollectionAsync(itemId, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionAsync(int itemId, object userState) {
            if ((this.Enterprise_GetSiteCollectionOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollection", new object[] {
                        itemId}, this.Enterprise_GetSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionCompleted(this, new Enterprise_GetSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetSiteCollectionByDomain" +
            "", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteCollection Enterprise_GetSiteCollectionByDomain(int organizationId, string domain) {
            object[] results = this.Invoke("Enterprise_GetSiteCollectionByDomain", new object[] {
                        organizationId,
                        domain});
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetSiteCollectionByDomain(int organizationId, string domain, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetSiteCollectionByDomain", new object[] {
                        organizationId,
                        domain}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection EndEnterprise_GetSiteCollectionByDomain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SharePointEnterpriseSiteCollection)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionByDomainAsync(int organizationId, string domain) {
            this.Enterprise_GetSiteCollectionByDomainAsync(organizationId, domain, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetSiteCollectionByDomainAsync(int organizationId, string domain, object userState) {
            if ((this.Enterprise_GetSiteCollectionByDomainOperationCompleted == null)) {
                this.Enterprise_GetSiteCollectionByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetSiteCollectionByDomainOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetSiteCollectionByDomain", new object[] {
                        organizationId,
                        domain}, this.Enterprise_GetSiteCollectionByDomainOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetSiteCollectionByDomainOperationCompleted(object arg) {
            if ((this.Enterprise_GetSiteCollectionByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetSiteCollectionByDomainCompleted(this, new Enterprise_GetSiteCollectionByDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_AddSiteCollection", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Enterprise_AddSiteCollection(SharePointEnterpriseSiteCollection item) {
            object[] results = this.Invoke("Enterprise_AddSiteCollection", new object[] {
                        item});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_AddSiteCollection(SharePointEnterpriseSiteCollection item, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_AddSiteCollection", new object[] {
                        item}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEnterprise_AddSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_AddSiteCollectionAsync(SharePointEnterpriseSiteCollection item) {
            this.Enterprise_AddSiteCollectionAsync(item, null);
        }
        
        /// <remarks/>
        public void Enterprise_AddSiteCollectionAsync(SharePointEnterpriseSiteCollection item, object userState) {
            if ((this.Enterprise_AddSiteCollectionOperationCompleted == null)) {
                this.Enterprise_AddSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_AddSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_AddSiteCollection", new object[] {
                        item}, this.Enterprise_AddSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_AddSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_AddSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_AddSiteCollectionCompleted(this, new Enterprise_AddSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_DeleteSiteCollection", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Enterprise_DeleteSiteCollection(int itemId) {
            object[] results = this.Invoke("Enterprise_DeleteSiteCollection", new object[] {
                        itemId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_DeleteSiteCollection(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_DeleteSiteCollection", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEnterprise_DeleteSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionAsync(int itemId) {
            this.Enterprise_DeleteSiteCollectionAsync(itemId, null);
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionAsync(int itemId, object userState) {
            if ((this.Enterprise_DeleteSiteCollectionOperationCompleted == null)) {
                this.Enterprise_DeleteSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_DeleteSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_DeleteSiteCollection", new object[] {
                        itemId}, this.Enterprise_DeleteSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_DeleteSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_DeleteSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_DeleteSiteCollectionCompleted(this, new Enterprise_DeleteSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_DeleteSiteCollections", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Enterprise_DeleteSiteCollections(int organizationId) {
            object[] results = this.Invoke("Enterprise_DeleteSiteCollections", new object[] {
                        organizationId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_DeleteSiteCollections(int organizationId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_DeleteSiteCollections", new object[] {
                        organizationId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEnterprise_DeleteSiteCollections(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionsAsync(int organizationId) {
            this.Enterprise_DeleteSiteCollectionsAsync(organizationId, null);
        }
        
        /// <remarks/>
        public void Enterprise_DeleteSiteCollectionsAsync(int organizationId, object userState) {
            if ((this.Enterprise_DeleteSiteCollectionsOperationCompleted == null)) {
                this.Enterprise_DeleteSiteCollectionsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_DeleteSiteCollectionsOperationCompleted);
            }
            this.InvokeAsync("Enterprise_DeleteSiteCollections", new object[] {
                        organizationId}, this.Enterprise_DeleteSiteCollectionsOperationCompleted, userState);
        }
        
        private void OnEnterprise_DeleteSiteCollectionsOperationCompleted(object arg) {
            if ((this.Enterprise_DeleteSiteCollectionsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_DeleteSiteCollectionsCompleted(this, new Enterprise_DeleteSiteCollectionsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_BackupSiteCollection", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Enterprise_BackupSiteCollection(int itemId, string fileName, bool zipBackup, bool download, string folderName) {
            object[] results = this.Invoke("Enterprise_BackupSiteCollection", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_BackupSiteCollection(int itemId, string fileName, bool zipBackup, bool download, string folderName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_BackupSiteCollection", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEnterprise_BackupSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_BackupSiteCollectionAsync(int itemId, string fileName, bool zipBackup, bool download, string folderName) {
            this.Enterprise_BackupSiteCollectionAsync(itemId, fileName, zipBackup, download, folderName, null);
        }
        
        /// <remarks/>
        public void Enterprise_BackupSiteCollectionAsync(int itemId, string fileName, bool zipBackup, bool download, string folderName, object userState) {
            if ((this.Enterprise_BackupSiteCollectionOperationCompleted == null)) {
                this.Enterprise_BackupSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_BackupSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_BackupSiteCollection", new object[] {
                        itemId,
                        fileName,
                        zipBackup,
                        download,
                        folderName}, this.Enterprise_BackupSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_BackupSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_BackupSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_BackupSiteCollectionCompleted(this, new Enterprise_BackupSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_RestoreSiteCollection", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int Enterprise_RestoreSiteCollection(int itemId, string uploadedFile, string packageFile) {
            object[] results = this.Invoke("Enterprise_RestoreSiteCollection", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_RestoreSiteCollection(int itemId, string uploadedFile, string packageFile, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_RestoreSiteCollection", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndEnterprise_RestoreSiteCollection(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_RestoreSiteCollectionAsync(int itemId, string uploadedFile, string packageFile) {
            this.Enterprise_RestoreSiteCollectionAsync(itemId, uploadedFile, packageFile, null);
        }
        
        /// <remarks/>
        public void Enterprise_RestoreSiteCollectionAsync(int itemId, string uploadedFile, string packageFile, object userState) {
            if ((this.Enterprise_RestoreSiteCollectionOperationCompleted == null)) {
                this.Enterprise_RestoreSiteCollectionOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_RestoreSiteCollectionOperationCompleted);
            }
            this.InvokeAsync("Enterprise_RestoreSiteCollection", new object[] {
                        itemId,
                        uploadedFile,
                        packageFile}, this.Enterprise_RestoreSiteCollectionOperationCompleted, userState);
        }
        
        private void OnEnterprise_RestoreSiteCollectionOperationCompleted(object arg) {
            if ((this.Enterprise_RestoreSiteCollectionCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_RestoreSiteCollectionCompleted(this, new Enterprise_RestoreSiteCollectionCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_GetBackupBinaryChunk", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] Enterprise_GetBackupBinaryChunk(int itemId, string path, int offset, int length) {
            object[] results = this.Invoke("Enterprise_GetBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_GetBackupBinaryChunk(int itemId, string path, int offset, int length, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_GetBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndEnterprise_GetBackupBinaryChunk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_GetBackupBinaryChunkAsync(int itemId, string path, int offset, int length) {
            this.Enterprise_GetBackupBinaryChunkAsync(itemId, path, offset, length, null);
        }
        
        /// <remarks/>
        public void Enterprise_GetBackupBinaryChunkAsync(int itemId, string path, int offset, int length, object userState) {
            if ((this.Enterprise_GetBackupBinaryChunkOperationCompleted == null)) {
                this.Enterprise_GetBackupBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_GetBackupBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("Enterprise_GetBackupBinaryChunk", new object[] {
                        itemId,
                        path,
                        offset,
                        length}, this.Enterprise_GetBackupBinaryChunkOperationCompleted, userState);
        }
        
        private void OnEnterprise_GetBackupBinaryChunkOperationCompleted(object arg) {
            if ((this.Enterprise_GetBackupBinaryChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_GetBackupBinaryChunkCompleted(this, new Enterprise_GetBackupBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_AppendBackupBinaryChunk", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string Enterprise_AppendBackupBinaryChunk(int itemId, string fileName, string path, [System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")] byte[] chunk) {
            object[] results = this.Invoke("Enterprise_AppendBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_AppendBackupBinaryChunk(int itemId, string fileName, string path, byte[] chunk, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_AppendBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndEnterprise_AppendBackupBinaryChunk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_AppendBackupBinaryChunkAsync(int itemId, string fileName, string path, byte[] chunk) {
            this.Enterprise_AppendBackupBinaryChunkAsync(itemId, fileName, path, chunk, null);
        }
        
        /// <remarks/>
        public void Enterprise_AppendBackupBinaryChunkAsync(int itemId, string fileName, string path, byte[] chunk, object userState) {
            if ((this.Enterprise_AppendBackupBinaryChunkOperationCompleted == null)) {
                this.Enterprise_AppendBackupBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_AppendBackupBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("Enterprise_AppendBackupBinaryChunk", new object[] {
                        itemId,
                        fileName,
                        path,
                        chunk}, this.Enterprise_AppendBackupBinaryChunkOperationCompleted, userState);
        }
        
        private void OnEnterprise_AppendBackupBinaryChunkOperationCompleted(object arg) {
            if ((this.Enterprise_AppendBackupBinaryChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_AppendBackupBinaryChunkCompleted(this, new Enterprise_AppendBackupBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_CalculateSharePointSitesD" +
            "iskSpace", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SharePointEnterpriseSiteDiskSpace[] Enterprise_CalculateSharePointSitesDiskSpace(int itemId, out int errorCode) {
            object[] results = this.Invoke("Enterprise_CalculateSharePointSitesDiskSpace", new object[] {
                        itemId});
            errorCode = ((int)(results[1]));
            return ((SharePointEnterpriseSiteDiskSpace[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_CalculateSharePointSitesDiskSpace(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_CalculateSharePointSitesDiskSpace", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteDiskSpace[] EndEnterprise_CalculateSharePointSitesDiskSpace(System.IAsyncResult asyncResult, out int errorCode) {
            object[] results = this.EndInvoke(asyncResult);
            errorCode = ((int)(results[1]));
            return ((SharePointEnterpriseSiteDiskSpace[])(results[0]));
        }
        
        /// <remarks/>
        public void Enterprise_CalculateSharePointSitesDiskSpaceAsync(int itemId) {
            this.Enterprise_CalculateSharePointSitesDiskSpaceAsync(itemId, null);
        }
        
        /// <remarks/>
        public void Enterprise_CalculateSharePointSitesDiskSpaceAsync(int itemId, object userState) {
            if ((this.Enterprise_CalculateSharePointSitesDiskSpaceOperationCompleted == null)) {
                this.Enterprise_CalculateSharePointSitesDiskSpaceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_CalculateSharePointSitesDiskSpaceOperationCompleted);
            }
            this.InvokeAsync("Enterprise_CalculateSharePointSitesDiskSpace", new object[] {
                        itemId}, this.Enterprise_CalculateSharePointSitesDiskSpaceOperationCompleted, userState);
        }
        
        private void OnEnterprise_CalculateSharePointSitesDiskSpaceOperationCompleted(object arg) {
            if ((this.Enterprise_CalculateSharePointSitesDiskSpaceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_CalculateSharePointSitesDiskSpaceCompleted(this, new Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/Enterprise_UpdateQuota", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void Enterprise_UpdateQuota(int itemId, int siteCollectionId, int maxSize, int warningSize) {
            this.Invoke("Enterprise_UpdateQuota", new object[] {
                        itemId,
                        siteCollectionId,
                        maxSize,
                        warningSize});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginEnterprise_UpdateQuota(int itemId, int siteCollectionId, int maxSize, int warningSize, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("Enterprise_UpdateQuota", new object[] {
                        itemId,
                        siteCollectionId,
                        maxSize,
                        warningSize}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndEnterprise_UpdateQuota(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void Enterprise_UpdateQuotaAsync(int itemId, int siteCollectionId, int maxSize, int warningSize) {
            this.Enterprise_UpdateQuotaAsync(itemId, siteCollectionId, maxSize, warningSize, null);
        }
        
        /// <remarks/>
        public void Enterprise_UpdateQuotaAsync(int itemId, int siteCollectionId, int maxSize, int warningSize, object userState) {
            if ((this.Enterprise_UpdateQuotaOperationCompleted == null)) {
                this.Enterprise_UpdateQuotaOperationCompleted = new System.Threading.SendOrPostCallback(this.OnEnterprise_UpdateQuotaOperationCompleted);
            }
            this.InvokeAsync("Enterprise_UpdateQuota", new object[] {
                        itemId,
                        siteCollectionId,
                        maxSize,
                        warningSize}, this.Enterprise_UpdateQuotaOperationCompleted, userState);
        }
        
        private void OnEnterprise_UpdateQuotaOperationCompleted(object arg) {
            if ((this.Enterprise_UpdateQuotaCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.Enterprise_UpdateQuotaCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionsPagedCompletedEventHandler(object sender, Enterprise_GetSiteCollectionsPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionsPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionsPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollectionListPaged Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollectionListPaged)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSupportedLanguagesCompletedEventHandler(object sender, Enterprise_GetSupportedLanguagesCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSupportedLanguagesCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSupportedLanguagesCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionsCompletedEventHandler(object sender, Enterprise_GetSiteCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollection[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_SetStorageSettingsCompletedEventHandler(object sender, Enterprise_SetStorageSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_SetStorageSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_SetStorageSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionCompletedEventHandler(object sender, Enterprise_GetSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetSiteCollectionByDomainCompletedEventHandler(object sender, Enterprise_GetSiteCollectionByDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetSiteCollectionByDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetSiteCollectionByDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteCollection Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteCollection)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_AddSiteCollectionCompletedEventHandler(object sender, Enterprise_AddSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_AddSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_AddSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_DeleteSiteCollectionCompletedEventHandler(object sender, Enterprise_DeleteSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_DeleteSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_DeleteSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_DeleteSiteCollectionsCompletedEventHandler(object sender, Enterprise_DeleteSiteCollectionsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_DeleteSiteCollectionsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_DeleteSiteCollectionsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_BackupSiteCollectionCompletedEventHandler(object sender, Enterprise_BackupSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_BackupSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_BackupSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_RestoreSiteCollectionCompletedEventHandler(object sender, Enterprise_RestoreSiteCollectionCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_RestoreSiteCollectionCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_RestoreSiteCollectionCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_GetBackupBinaryChunkCompletedEventHandler(object sender, Enterprise_GetBackupBinaryChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_GetBackupBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_GetBackupBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_AppendBackupBinaryChunkCompletedEventHandler(object sender, Enterprise_AppendBackupBinaryChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_AppendBackupBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_AppendBackupBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventHandler(object sender, Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal Enterprise_CalculateSharePointSitesDiskSpaceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SharePointEnterpriseSiteDiskSpace[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SharePointEnterpriseSiteDiskSpace[])(this.results[0]));
            }
        }
        
        /// <remarks/>
        public int errorCode {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[1]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void Enterprise_UpdateQuotaCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
}
