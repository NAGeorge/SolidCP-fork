//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.7905
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.3038.
// 

using SolidCP.EnterpriseServer.Base.HostedSolution;
using SolidCP.Providers;
using SolidCP.Providers.Common;
using SolidCP.Providers.HostedSolution;
using SolidCP.Providers.ResultObjects;

namespace SolidCP.EnterpriseServer.HostedSolution {
    using System.Xml.Serialization;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Diagnostics;
    using System.Data;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="esOrganizationsSoap", Namespace="http://tempuri.org/")]
    [System.Xml.Serialization.XmlIncludeAttribute(typeof(ServiceProviderItem))]
    public partial class esOrganizations : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        private System.Threading.SendOrPostCallback UpdateSupportServiceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSupportServiceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddSupportServiceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportServiceLevelOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckPhoneNumberIsInUseOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeletePasswordresetAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetAccessTokenResponseOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordresetAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateOrganizationPasswordSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetWebDavSystemSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationPasswordSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckOrgIdExistsOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetRawOrganizationsPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationByIdOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationUserSummuryLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendOrganizationUserSummuryLetterOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationStatisticsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationStatisticsByOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAccountIdByUserPrincipalNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDefaultOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGeneralSettingsWithExtraDataOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendResetUserPasswordLinkSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendResetUserPasswordPincodeSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendResetUserPasswordPincodeEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUserPasswordRequestSmsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendUserPasswordRequestEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddOrganizationDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback ChangeOrganizationDomainTypeOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationDomainsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteOrganizationDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetOrganizationDefaultDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationObjectsByDomainOperationCompleted;
        
        private System.Threading.SendOrPostCallback CheckDomainUsedByHostedOrganizationOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback ImportUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationDeletedUsersPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationUsersPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetUserGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPrincipalNameOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetUserPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetDeletedUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetArchiveFileBinaryChunkOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetPasswordPolicyOperationCompleted;
        
        private System.Threading.SendOrPostCallback SendResetUserPasswordEmailOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreatePasswordResetAccessTokenOperationCompleted;
        
        private System.Threading.SendOrPostCallback CreateSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityGroupGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetSecurityGroupGeneralSettingsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetOrganizationSecurityGroupsPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddObjectToSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteObjectFromSecurityGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSecurityGroupsByMemberOperationCompleted;
        
        private System.Threading.SendOrPostCallback SearchOrganizationAccountsOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAdditionalGroupsOperationCompleted;
        
        private System.Threading.SendOrPostCallback UpdateAdditionalGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteAdditionalGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback AddAdditionalGroupOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetSupportServiceLevelsOperationCompleted;
        
        /// <remarks/>
        public esOrganizations() {
            this.Url = "http://127.0.0.1:9002/esOrganizations.asmx";
        }
        
        /// <remarks/>
        public event UpdateSupportServiceLevelCompletedEventHandler UpdateSupportServiceLevelCompleted;
        
        /// <remarks/>
        public event DeleteSupportServiceLevelCompletedEventHandler DeleteSupportServiceLevelCompleted;
        
        /// <remarks/>
        public event AddSupportServiceLevelCompletedEventHandler AddSupportServiceLevelCompleted;
        
        /// <remarks/>
        public event GetSupportServiceLevelCompletedEventHandler GetSupportServiceLevelCompleted;
        
        /// <remarks/>
        public event CheckPhoneNumberIsInUseCompletedEventHandler CheckPhoneNumberIsInUseCompleted;
        
        /// <remarks/>
        public event DeletePasswordresetAccessTokenCompletedEventHandler DeletePasswordresetAccessTokenCompleted;
        
        /// <remarks/>
        public event SetAccessTokenResponseCompletedEventHandler SetAccessTokenResponseCompleted;
        
        /// <remarks/>
        public event GetPasswordresetAccessTokenCompletedEventHandler GetPasswordresetAccessTokenCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationGeneralSettingsCompletedEventHandler UpdateOrganizationGeneralSettingsCompleted;
        
        /// <remarks/>
        public event GetOrganizationGeneralSettingsCompletedEventHandler GetOrganizationGeneralSettingsCompleted;
        
        /// <remarks/>
        public event UpdateOrganizationPasswordSettingsCompletedEventHandler UpdateOrganizationPasswordSettingsCompleted;
        
        /// <remarks/>
        public event GetWebDavSystemSettingsCompletedEventHandler GetWebDavSystemSettingsCompleted;
        
        /// <remarks/>
        public event GetOrganizationPasswordSettingsCompletedEventHandler GetOrganizationPasswordSettingsCompleted;
        
        /// <remarks/>
        public event CheckOrgIdExistsCompletedEventHandler CheckOrgIdExistsCompleted;
        
        /// <remarks/>
        public event CreateOrganizationCompletedEventHandler CreateOrganizationCompleted;
        
        /// <remarks/>
        public event GetRawOrganizationsPagedCompletedEventHandler GetRawOrganizationsPagedCompleted;
        
        /// <remarks/>
        public event GetOrganizationsCompletedEventHandler GetOrganizationsCompleted;
        
        /// <remarks/>
        public event GetOrganizationByIdCompletedEventHandler GetOrganizationByIdCompleted;
        
        /// <remarks/>
        public event GetOrganizationUserSummuryLetterCompletedEventHandler GetOrganizationUserSummuryLetterCompleted;
        
        /// <remarks/>
        public event SendOrganizationUserSummuryLetterCompletedEventHandler SendOrganizationUserSummuryLetterCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationCompletedEventHandler DeleteOrganizationCompleted;
        
        /// <remarks/>
        public event GetOrganizationStatisticsCompletedEventHandler GetOrganizationStatisticsCompleted;
        
        /// <remarks/>
        public event GetOrganizationStatisticsByOrganizationCompletedEventHandler GetOrganizationStatisticsByOrganizationCompleted;
        
        /// <remarks/>
        public event GetOrganizationCompletedEventHandler GetOrganizationCompleted;
        
        /// <remarks/>
        public event GetAccountIdByUserPrincipalNameCompletedEventHandler GetAccountIdByUserPrincipalNameCompleted;
        
        /// <remarks/>
        public event SetDefaultOrganizationCompletedEventHandler SetDefaultOrganizationCompleted;
        
        /// <remarks/>
        public event GetUserGeneralSettingsWithExtraDataCompletedEventHandler GetUserGeneralSettingsWithExtraDataCompleted;
        
        /// <remarks/>
        public event SendResetUserPasswordLinkSmsCompletedEventHandler SendResetUserPasswordLinkSmsCompleted;
        
        /// <remarks/>
        public event SendResetUserPasswordPincodeSmsCompletedEventHandler SendResetUserPasswordPincodeSmsCompleted;
        
        /// <remarks/>
        public event SendResetUserPasswordPincodeEmailCompletedEventHandler SendResetUserPasswordPincodeEmailCompleted;
        
        /// <remarks/>
        public event SendUserPasswordRequestSmsCompletedEventHandler SendUserPasswordRequestSmsCompleted;
        
        /// <remarks/>
        public event SendUserPasswordRequestEmailCompletedEventHandler SendUserPasswordRequestEmailCompleted;
        
        /// <remarks/>
        public event AddOrganizationDomainCompletedEventHandler AddOrganizationDomainCompleted;
        
        /// <remarks/>
        public event ChangeOrganizationDomainTypeCompletedEventHandler ChangeOrganizationDomainTypeCompleted;
        
        /// <remarks/>
        public event GetOrganizationDomainsCompletedEventHandler GetOrganizationDomainsCompleted;
        
        /// <remarks/>
        public event DeleteOrganizationDomainCompletedEventHandler DeleteOrganizationDomainCompleted;
        
        /// <remarks/>
        public event SetOrganizationDefaultDomainCompletedEventHandler SetOrganizationDefaultDomainCompleted;
        
        /// <remarks/>
        public event GetOrganizationObjectsByDomainCompletedEventHandler GetOrganizationObjectsByDomainCompleted;
        
        /// <remarks/>
        public event CheckDomainUsedByHostedOrganizationCompletedEventHandler CheckDomainUsedByHostedOrganizationCompleted;
        
        /// <remarks/>
        public event CreateUserCompletedEventHandler CreateUserCompleted;
        
        /// <remarks/>
        public event ImportUserCompletedEventHandler ImportUserCompleted;
        
        /// <remarks/>
        public event GetOrganizationDeletedUsersPagedCompletedEventHandler GetOrganizationDeletedUsersPagedCompleted;
        
        /// <remarks/>
        public event GetOrganizationUsersPagedCompletedEventHandler GetOrganizationUsersPagedCompleted;
        
        /// <remarks/>
        public event GetUserGeneralSettingsCompletedEventHandler GetUserGeneralSettingsCompleted;
        
        /// <remarks/>
        public event SetUserGeneralSettingsCompletedEventHandler SetUserGeneralSettingsCompleted;
        
        /// <remarks/>
        public event SetUserPrincipalNameCompletedEventHandler SetUserPrincipalNameCompleted;
        
        /// <remarks/>
        public event SetUserPasswordCompletedEventHandler SetUserPasswordCompleted;
        
        /// <remarks/>
        public event SearchAccountsCompletedEventHandler SearchAccountsCompleted;
        
        /// <remarks/>
        public event SetDeletedUserCompletedEventHandler SetDeletedUserCompleted;
        
        /// <remarks/>
        public event GetArchiveFileBinaryChunkCompletedEventHandler GetArchiveFileBinaryChunkCompleted;
        
        /// <remarks/>
        public event DeleteUserCompletedEventHandler DeleteUserCompleted;
        
        /// <remarks/>
        public event GetPasswordPolicyCompletedEventHandler GetPasswordPolicyCompleted;
        
        /// <remarks/>
        public event SendResetUserPasswordEmailCompletedEventHandler SendResetUserPasswordEmailCompleted;
        
        /// <remarks/>
        public event CreatePasswordResetAccessTokenCompletedEventHandler CreatePasswordResetAccessTokenCompleted;
        
        /// <remarks/>
        public event CreateSecurityGroupCompletedEventHandler CreateSecurityGroupCompleted;
        
        /// <remarks/>
        public event GetSecurityGroupGeneralSettingsCompletedEventHandler GetSecurityGroupGeneralSettingsCompleted;
        
        /// <remarks/>
        public event DeleteSecurityGroupCompletedEventHandler DeleteSecurityGroupCompleted;
        
        /// <remarks/>
        public event SetSecurityGroupGeneralSettingsCompletedEventHandler SetSecurityGroupGeneralSettingsCompleted;
        
        /// <remarks/>
        public event GetOrganizationSecurityGroupsPagedCompletedEventHandler GetOrganizationSecurityGroupsPagedCompleted;
        
        /// <remarks/>
        public event AddObjectToSecurityGroupCompletedEventHandler AddObjectToSecurityGroupCompleted;
        
        /// <remarks/>
        public event DeleteObjectFromSecurityGroupCompletedEventHandler DeleteObjectFromSecurityGroupCompleted;
        
        /// <remarks/>
        public event GetSecurityGroupsByMemberCompletedEventHandler GetSecurityGroupsByMemberCompleted;
        
        /// <remarks/>
        public event SearchOrganizationAccountsCompletedEventHandler SearchOrganizationAccountsCompleted;
        
        /// <remarks/>
        public event GetAdditionalGroupsCompletedEventHandler GetAdditionalGroupsCompleted;
        
        /// <remarks/>
        public event UpdateAdditionalGroupCompletedEventHandler UpdateAdditionalGroupCompleted;
        
        /// <remarks/>
        public event DeleteAdditionalGroupCompletedEventHandler DeleteAdditionalGroupCompleted;
        
        /// <remarks/>
        public event AddAdditionalGroupCompletedEventHandler AddAdditionalGroupCompleted;
        
        /// <remarks/>
        public event GetSupportServiceLevelsCompletedEventHandler GetSupportServiceLevelsCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateSupportServiceLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateSupportServiceLevel(int levelID, string levelName, string levelDescription) {
            this.Invoke("UpdateSupportServiceLevel", new object[] {
                        levelID,
                        levelName,
                        levelDescription});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateSupportServiceLevel(int levelID, string levelName, string levelDescription, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateSupportServiceLevel", new object[] {
                        levelID,
                        levelName,
                        levelDescription}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateSupportServiceLevel(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateSupportServiceLevelAsync(int levelID, string levelName, string levelDescription) {
            this.UpdateSupportServiceLevelAsync(levelID, levelName, levelDescription, null);
        }
        
        /// <remarks/>
        public void UpdateSupportServiceLevelAsync(int levelID, string levelName, string levelDescription, object userState) {
            if ((this.UpdateSupportServiceLevelOperationCompleted == null)) {
                this.UpdateSupportServiceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateSupportServiceLevelOperationCompleted);
            }
            this.InvokeAsync("UpdateSupportServiceLevel", new object[] {
                        levelID,
                        levelName,
                        levelDescription}, this.UpdateSupportServiceLevelOperationCompleted, userState);
        }
        
        private void OnUpdateSupportServiceLevelOperationCompleted(object arg) {
            if ((this.UpdateSupportServiceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateSupportServiceLevelCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSupportServiceLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject DeleteSupportServiceLevel(int levelId) {
            object[] results = this.Invoke("DeleteSupportServiceLevel", new object[] {
                        levelId});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSupportServiceLevel(int levelId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSupportServiceLevel", new object[] {
                        levelId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndDeleteSupportServiceLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSupportServiceLevelAsync(int levelId) {
            this.DeleteSupportServiceLevelAsync(levelId, null);
        }
        
        /// <remarks/>
        public void DeleteSupportServiceLevelAsync(int levelId, object userState) {
            if ((this.DeleteSupportServiceLevelOperationCompleted == null)) {
                this.DeleteSupportServiceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSupportServiceLevelOperationCompleted);
            }
            this.InvokeAsync("DeleteSupportServiceLevel", new object[] {
                        levelId}, this.DeleteSupportServiceLevelOperationCompleted, userState);
        }
        
        private void OnDeleteSupportServiceLevelOperationCompleted(object arg) {
            if ((this.DeleteSupportServiceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSupportServiceLevelCompleted(this, new DeleteSupportServiceLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddSupportServiceLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddSupportServiceLevel(string levelName, string levelDescription) {
            object[] results = this.Invoke("AddSupportServiceLevel", new object[] {
                        levelName,
                        levelDescription});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddSupportServiceLevel(string levelName, string levelDescription, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddSupportServiceLevel", new object[] {
                        levelName,
                        levelDescription}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddSupportServiceLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddSupportServiceLevelAsync(string levelName, string levelDescription) {
            this.AddSupportServiceLevelAsync(levelName, levelDescription, null);
        }
        
        /// <remarks/>
        public void AddSupportServiceLevelAsync(string levelName, string levelDescription, object userState) {
            if ((this.AddSupportServiceLevelOperationCompleted == null)) {
                this.AddSupportServiceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddSupportServiceLevelOperationCompleted);
            }
            this.InvokeAsync("AddSupportServiceLevel", new object[] {
                        levelName,
                        levelDescription}, this.AddSupportServiceLevelOperationCompleted, userState);
        }
        
        private void OnAddSupportServiceLevelOperationCompleted(object arg) {
            if ((this.AddSupportServiceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddSupportServiceLevelCompleted(this, new AddSupportServiceLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupportServiceLevel", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceLevel GetSupportServiceLevel(int levelID) {
            object[] results = this.Invoke("GetSupportServiceLevel", new object[] {
                        levelID});
            return ((ServiceLevel)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSupportServiceLevel(int levelID, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSupportServiceLevel", new object[] {
                        levelID}, callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceLevel EndGetSupportServiceLevel(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceLevel)(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportServiceLevelAsync(int levelID) {
            this.GetSupportServiceLevelAsync(levelID, null);
        }
        
        /// <remarks/>
        public void GetSupportServiceLevelAsync(int levelID, object userState) {
            if ((this.GetSupportServiceLevelOperationCompleted == null)) {
                this.GetSupportServiceLevelOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportServiceLevelOperationCompleted);
            }
            this.InvokeAsync("GetSupportServiceLevel", new object[] {
                        levelID}, this.GetSupportServiceLevelOperationCompleted, userState);
        }
        
        private void OnGetSupportServiceLevelOperationCompleted(object arg) {
            if ((this.GetSupportServiceLevelCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportServiceLevelCompleted(this, new GetSupportServiceLevelCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckPhoneNumberIsInUse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckPhoneNumberIsInUse(int itemId, string phoneNumber, string userSamAccountName) {
            object[] results = this.Invoke("CheckPhoneNumberIsInUse", new object[] {
                        itemId,
                        phoneNumber,
                        userSamAccountName});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckPhoneNumberIsInUse(int itemId, string phoneNumber, string userSamAccountName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckPhoneNumberIsInUse", new object[] {
                        itemId,
                        phoneNumber,
                        userSamAccountName}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckPhoneNumberIsInUse(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckPhoneNumberIsInUseAsync(int itemId, string phoneNumber, string userSamAccountName) {
            this.CheckPhoneNumberIsInUseAsync(itemId, phoneNumber, userSamAccountName, null);
        }
        
        /// <remarks/>
        public void CheckPhoneNumberIsInUseAsync(int itemId, string phoneNumber, string userSamAccountName, object userState) {
            if ((this.CheckPhoneNumberIsInUseOperationCompleted == null)) {
                this.CheckPhoneNumberIsInUseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckPhoneNumberIsInUseOperationCompleted);
            }
            this.InvokeAsync("CheckPhoneNumberIsInUse", new object[] {
                        itemId,
                        phoneNumber,
                        userSamAccountName}, this.CheckPhoneNumberIsInUseOperationCompleted, userState);
        }
        
        private void OnCheckPhoneNumberIsInUseOperationCompleted(object arg) {
            if ((this.CheckPhoneNumberIsInUseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckPhoneNumberIsInUseCompleted(this, new CheckPhoneNumberIsInUseCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeletePasswordresetAccessToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeletePasswordresetAccessToken(System.Guid accessToken) {
            this.Invoke("DeletePasswordresetAccessToken", new object[] {
                        accessToken});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeletePasswordresetAccessToken(System.Guid accessToken, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeletePasswordresetAccessToken", new object[] {
                        accessToken}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeletePasswordresetAccessToken(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeletePasswordresetAccessTokenAsync(System.Guid accessToken) {
            this.DeletePasswordresetAccessTokenAsync(accessToken, null);
        }
        
        /// <remarks/>
        public void DeletePasswordresetAccessTokenAsync(System.Guid accessToken, object userState) {
            if ((this.DeletePasswordresetAccessTokenOperationCompleted == null)) {
                this.DeletePasswordresetAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeletePasswordresetAccessTokenOperationCompleted);
            }
            this.InvokeAsync("DeletePasswordresetAccessToken", new object[] {
                        accessToken}, this.DeletePasswordresetAccessTokenOperationCompleted, userState);
        }
        
        private void OnDeletePasswordresetAccessTokenOperationCompleted(object arg) {
            if ((this.DeletePasswordresetAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeletePasswordresetAccessTokenCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetAccessTokenResponse", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetAccessTokenResponse(System.Guid accessToken, string response) {
            this.Invoke("SetAccessTokenResponse", new object[] {
                        accessToken,
                        response});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetAccessTokenResponse(System.Guid accessToken, string response, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetAccessTokenResponse", new object[] {
                        accessToken,
                        response}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetAccessTokenResponse(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetAccessTokenResponseAsync(System.Guid accessToken, string response) {
            this.SetAccessTokenResponseAsync(accessToken, response, null);
        }
        
        /// <remarks/>
        public void SetAccessTokenResponseAsync(System.Guid accessToken, string response, object userState) {
            if ((this.SetAccessTokenResponseOperationCompleted == null)) {
                this.SetAccessTokenResponseOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetAccessTokenResponseOperationCompleted);
            }
            this.InvokeAsync("SetAccessTokenResponse", new object[] {
                        accessToken,
                        response}, this.SetAccessTokenResponseOperationCompleted, userState);
        }
        
        private void OnSetAccessTokenResponseOperationCompleted(object arg) {
            if ((this.SetAccessTokenResponseCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetAccessTokenResponseCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPasswordresetAccessToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessToken GetPasswordresetAccessToken(System.Guid token) {
            object[] results = this.Invoke("GetPasswordresetAccessToken", new object[] {
                        token});
            return ((AccessToken)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPasswordresetAccessToken(System.Guid token, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPasswordresetAccessToken", new object[] {
                        token}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccessToken EndGetPasswordresetAccessToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccessToken)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordresetAccessTokenAsync(System.Guid token) {
            this.GetPasswordresetAccessTokenAsync(token, null);
        }
        
        /// <remarks/>
        public void GetPasswordresetAccessTokenAsync(System.Guid token, object userState) {
            if ((this.GetPasswordresetAccessTokenOperationCompleted == null)) {
                this.GetPasswordresetAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordresetAccessTokenOperationCompleted);
            }
            this.InvokeAsync("GetPasswordresetAccessToken", new object[] {
                        token}, this.GetPasswordresetAccessTokenOperationCompleted, userState);
        }
        
        private void OnGetPasswordresetAccessTokenOperationCompleted(object arg) {
            if ((this.GetPasswordresetAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordresetAccessTokenCompleted(this, new GetPasswordresetAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrganizationGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrganizationGeneralSettings(int itemId, OrganizationGeneralSettings settings) {
            this.Invoke("UpdateOrganizationGeneralSettings", new object[] {
                        itemId,
                        settings});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateOrganizationGeneralSettings(int itemId, OrganizationGeneralSettings settings, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateOrganizationGeneralSettings", new object[] {
                        itemId,
                        settings}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateOrganizationGeneralSettings(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateOrganizationGeneralSettingsAsync(int itemId, OrganizationGeneralSettings settings) {
            this.UpdateOrganizationGeneralSettingsAsync(itemId, settings, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationGeneralSettingsAsync(int itemId, OrganizationGeneralSettings settings, object userState) {
            if ((this.UpdateOrganizationGeneralSettingsOperationCompleted == null)) {
                this.UpdateOrganizationGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationGeneralSettings", new object[] {
                        itemId,
                        settings}, this.UpdateOrganizationGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationGeneralSettingsOperationCompleted(object arg) {
            if ((this.UpdateOrganizationGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationGeneralSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationGeneralSettings GetOrganizationGeneralSettings(int itemId) {
            object[] results = this.Invoke("GetOrganizationGeneralSettings", new object[] {
                        itemId});
            return ((OrganizationGeneralSettings)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationGeneralSettings(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationGeneralSettings", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationGeneralSettings EndGetOrganizationGeneralSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationGeneralSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationGeneralSettingsAsync(int itemId) {
            this.GetOrganizationGeneralSettingsAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationGeneralSettingsAsync(int itemId, object userState) {
            if ((this.GetOrganizationGeneralSettingsOperationCompleted == null)) {
                this.GetOrganizationGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationGeneralSettings", new object[] {
                        itemId}, this.GetOrganizationGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationGeneralSettingsOperationCompleted(object arg) {
            if ((this.GetOrganizationGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationGeneralSettingsCompleted(this, new GetOrganizationGeneralSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateOrganizationPasswordSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateOrganizationPasswordSettings(int itemId, OrganizationPasswordSettings settings) {
            this.Invoke("UpdateOrganizationPasswordSettings", new object[] {
                        itemId,
                        settings});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateOrganizationPasswordSettings(int itemId, OrganizationPasswordSettings settings, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateOrganizationPasswordSettings", new object[] {
                        itemId,
                        settings}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateOrganizationPasswordSettings(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateOrganizationPasswordSettingsAsync(int itemId, OrganizationPasswordSettings settings) {
            this.UpdateOrganizationPasswordSettingsAsync(itemId, settings, null);
        }
        
        /// <remarks/>
        public void UpdateOrganizationPasswordSettingsAsync(int itemId, OrganizationPasswordSettings settings, object userState) {
            if ((this.UpdateOrganizationPasswordSettingsOperationCompleted == null)) {
                this.UpdateOrganizationPasswordSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateOrganizationPasswordSettingsOperationCompleted);
            }
            this.InvokeAsync("UpdateOrganizationPasswordSettings", new object[] {
                        itemId,
                        settings}, this.UpdateOrganizationPasswordSettingsOperationCompleted, userState);
        }
        
        private void OnUpdateOrganizationPasswordSettingsOperationCompleted(object arg) {
            if ((this.UpdateOrganizationPasswordSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateOrganizationPasswordSettingsCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetWebDavSystemSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public SystemSettings GetWebDavSystemSettings() {
            object[] results = this.Invoke("GetWebDavSystemSettings", new object[0]);
            return ((SystemSettings)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetWebDavSystemSettings(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetWebDavSystemSettings", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public SystemSettings EndGetWebDavSystemSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((SystemSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetWebDavSystemSettingsAsync() {
            this.GetWebDavSystemSettingsAsync(null);
        }
        
        /// <remarks/>
        public void GetWebDavSystemSettingsAsync(object userState) {
            if ((this.GetWebDavSystemSettingsOperationCompleted == null)) {
                this.GetWebDavSystemSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetWebDavSystemSettingsOperationCompleted);
            }
            this.InvokeAsync("GetWebDavSystemSettings", new object[0], this.GetWebDavSystemSettingsOperationCompleted, userState);
        }
        
        private void OnGetWebDavSystemSettingsOperationCompleted(object arg) {
            if ((this.GetWebDavSystemSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetWebDavSystemSettingsCompleted(this, new GetWebDavSystemSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationPasswordSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationPasswordSettings GetOrganizationPasswordSettings(int itemId) {
            object[] results = this.Invoke("GetOrganizationPasswordSettings", new object[] {
                        itemId});
            return ((OrganizationPasswordSettings)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationPasswordSettings(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationPasswordSettings", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationPasswordSettings EndGetOrganizationPasswordSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationPasswordSettings)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationPasswordSettingsAsync(int itemId) {
            this.GetOrganizationPasswordSettingsAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationPasswordSettingsAsync(int itemId, object userState) {
            if ((this.GetOrganizationPasswordSettingsOperationCompleted == null)) {
                this.GetOrganizationPasswordSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationPasswordSettingsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationPasswordSettings", new object[] {
                        itemId}, this.GetOrganizationPasswordSettingsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationPasswordSettingsOperationCompleted(object arg) {
            if ((this.GetOrganizationPasswordSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationPasswordSettingsCompleted(this, new GetOrganizationPasswordSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckOrgIdExists", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckOrgIdExists(string orgId) {
            object[] results = this.Invoke("CheckOrgIdExists", new object[] {
                        orgId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckOrgIdExists(string orgId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckOrgIdExists", new object[] {
                        orgId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckOrgIdExists(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckOrgIdExistsAsync(string orgId) {
            this.CheckOrgIdExistsAsync(orgId, null);
        }
        
        /// <remarks/>
        public void CheckOrgIdExistsAsync(string orgId, object userState) {
            if ((this.CheckOrgIdExistsOperationCompleted == null)) {
                this.CheckOrgIdExistsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckOrgIdExistsOperationCompleted);
            }
            this.InvokeAsync("CheckOrgIdExists", new object[] {
                        orgId}, this.CheckOrgIdExistsOperationCompleted, userState);
        }
        
        private void OnCheckOrgIdExistsOperationCompleted(object arg) {
            if ((this.CheckOrgIdExistsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckOrgIdExistsCompleted(this, new CheckOrgIdExistsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateOrganization(int packageId, string organizationID, string organizationName, string domainName) {
            object[] results = this.Invoke("CreateOrganization", new object[] {
                        packageId,
                        organizationID,
                        organizationName,
                        domainName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateOrganization(int packageId, string organizationID, string organizationName, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateOrganization", new object[] {
                        packageId,
                        organizationID,
                        organizationName,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateOrganization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateOrganizationAsync(int packageId, string organizationID, string organizationName, string domainName) {
            this.CreateOrganizationAsync(packageId, organizationID, organizationName, domainName, null);
        }
        
        /// <remarks/>
        public void CreateOrganizationAsync(int packageId, string organizationID, string organizationName, string domainName, object userState) {
            if ((this.CreateOrganizationOperationCompleted == null)) {
                this.CreateOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateOrganizationOperationCompleted);
            }
            this.InvokeAsync("CreateOrganization", new object[] {
                        packageId,
                        organizationID,
                        organizationName,
                        domainName}, this.CreateOrganizationOperationCompleted, userState);
        }
        
        private void OnCreateOrganizationOperationCompleted(object arg) {
            if ((this.CreateOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateOrganizationCompleted(this, new CreateOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetRawOrganizationsPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetRawOrganizationsPaged(int packageId, bool recursive, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            object[] results = this.Invoke("GetRawOrganizationsPaged", new object[] {
                        packageId,
                        recursive,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetRawOrganizationsPaged(int packageId, bool recursive, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetRawOrganizationsPaged", new object[] {
                        packageId,
                        recursive,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetRawOrganizationsPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetRawOrganizationsPagedAsync(int packageId, bool recursive, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            this.GetRawOrganizationsPagedAsync(packageId, recursive, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetRawOrganizationsPagedAsync(int packageId, bool recursive, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState) {
            if ((this.GetRawOrganizationsPagedOperationCompleted == null)) {
                this.GetRawOrganizationsPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetRawOrganizationsPagedOperationCompleted);
            }
            this.InvokeAsync("GetRawOrganizationsPaged", new object[] {
                        packageId,
                        recursive,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetRawOrganizationsPagedOperationCompleted, userState);
        }
        
        private void OnGetRawOrganizationsPagedOperationCompleted(object arg) {
            if ((this.GetRawOrganizationsPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetRawOrganizationsPagedCompleted(this, new GetRawOrganizationsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizations", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Organization[] GetOrganizations(int packageId, bool recursive) {
            object[] results = this.Invoke("GetOrganizations", new object[] {
                        packageId,
                        recursive});
            return ((Organization[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizations(int packageId, bool recursive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizations", new object[] {
                        packageId,
                        recursive}, callback, asyncState);
        }
        
        /// <remarks/>
        public Organization[] EndGetOrganizations(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Organization[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationsAsync(int packageId, bool recursive) {
            this.GetOrganizationsAsync(packageId, recursive, null);
        }
        
        /// <remarks/>
        public void GetOrganizationsAsync(int packageId, bool recursive, object userState) {
            if ((this.GetOrganizationsOperationCompleted == null)) {
                this.GetOrganizationsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizations", new object[] {
                        packageId,
                        recursive}, this.GetOrganizationsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationsOperationCompleted(object arg) {
            if ((this.GetOrganizationsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationsCompleted(this, new GetOrganizationsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationById", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Organization GetOrganizationById(string organizationId) {
            object[] results = this.Invoke("GetOrganizationById", new object[] {
                        organizationId});
            return ((Organization)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationById(string organizationId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationById", new object[] {
                        organizationId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Organization EndGetOrganizationById(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Organization)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationByIdAsync(string organizationId) {
            this.GetOrganizationByIdAsync(organizationId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationByIdAsync(string organizationId, object userState) {
            if ((this.GetOrganizationByIdOperationCompleted == null)) {
                this.GetOrganizationByIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationByIdOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationById", new object[] {
                        organizationId}, this.GetOrganizationByIdOperationCompleted, userState);
        }
        
        private void OnGetOrganizationByIdOperationCompleted(object arg) {
            if ((this.GetOrganizationByIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationByIdCompleted(this, new GetOrganizationByIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationUserSummuryLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public string GetOrganizationUserSummuryLetter(int itemId, int accountId, bool pmm, bool emailMode, bool signup) {
            object[] results = this.Invoke("GetOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        pmm,
                        emailMode,
                        signup});
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationUserSummuryLetter(int itemId, int accountId, bool pmm, bool emailMode, bool signup, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        pmm,
                        emailMode,
                        signup}, callback, asyncState);
        }
        
        /// <remarks/>
        public string EndGetOrganizationUserSummuryLetter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((string)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationUserSummuryLetterAsync(int itemId, int accountId, bool pmm, bool emailMode, bool signup) {
            this.GetOrganizationUserSummuryLetterAsync(itemId, accountId, pmm, emailMode, signup, null);
        }
        
        /// <remarks/>
        public void GetOrganizationUserSummuryLetterAsync(int itemId, int accountId, bool pmm, bool emailMode, bool signup, object userState) {
            if ((this.GetOrganizationUserSummuryLetterOperationCompleted == null)) {
                this.GetOrganizationUserSummuryLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationUserSummuryLetterOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        pmm,
                        emailMode,
                        signup}, this.GetOrganizationUserSummuryLetterOperationCompleted, userState);
        }
        
        private void OnGetOrganizationUserSummuryLetterOperationCompleted(object arg) {
            if ((this.GetOrganizationUserSummuryLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationUserSummuryLetterCompleted(this, new GetOrganizationUserSummuryLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendOrganizationUserSummuryLetter", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SendOrganizationUserSummuryLetter(int itemId, int accountId, bool signup, string to, string cc) {
            object[] results = this.Invoke("SendOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        signup,
                        to,
                        cc});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendOrganizationUserSummuryLetter(int itemId, int accountId, bool signup, string to, string cc, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        signup,
                        to,
                        cc}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSendOrganizationUserSummuryLetter(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SendOrganizationUserSummuryLetterAsync(int itemId, int accountId, bool signup, string to, string cc) {
            this.SendOrganizationUserSummuryLetterAsync(itemId, accountId, signup, to, cc, null);
        }
        
        /// <remarks/>
        public void SendOrganizationUserSummuryLetterAsync(int itemId, int accountId, bool signup, string to, string cc, object userState) {
            if ((this.SendOrganizationUserSummuryLetterOperationCompleted == null)) {
                this.SendOrganizationUserSummuryLetterOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendOrganizationUserSummuryLetterOperationCompleted);
            }
            this.InvokeAsync("SendOrganizationUserSummuryLetter", new object[] {
                        itemId,
                        accountId,
                        signup,
                        to,
                        cc}, this.SendOrganizationUserSummuryLetterOperationCompleted, userState);
        }
        
        private void OnSendOrganizationUserSummuryLetterOperationCompleted(object arg) {
            if ((this.SendOrganizationUserSummuryLetterCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendOrganizationUserSummuryLetterCompleted(this, new SendOrganizationUserSummuryLetterCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganization(int itemId) {
            object[] results = this.Invoke("DeleteOrganization", new object[] {
                        itemId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteOrganization(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteOrganization", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteOrganization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationAsync(int itemId) {
            this.DeleteOrganizationAsync(itemId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationAsync(int itemId, object userState) {
            if ((this.DeleteOrganizationOperationCompleted == null)) {
                this.DeleteOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganization", new object[] {
                        itemId}, this.DeleteOrganizationOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationOperationCompleted(object arg) {
            if ((this.DeleteOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationCompleted(this, new DeleteOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationStatistics", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationStatistics GetOrganizationStatistics(int itemId) {
            object[] results = this.Invoke("GetOrganizationStatistics", new object[] {
                        itemId});
            return ((OrganizationStatistics)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationStatistics(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationStatistics", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationStatistics EndGetOrganizationStatistics(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationStatistics)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationStatisticsAsync(int itemId) {
            this.GetOrganizationStatisticsAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationStatisticsAsync(int itemId, object userState) {
            if ((this.GetOrganizationStatisticsOperationCompleted == null)) {
                this.GetOrganizationStatisticsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationStatisticsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationStatistics", new object[] {
                        itemId}, this.GetOrganizationStatisticsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationStatisticsOperationCompleted(object arg) {
            if ((this.GetOrganizationStatisticsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationStatisticsCompleted(this, new GetOrganizationStatisticsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationStatisticsByOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationStatistics GetOrganizationStatisticsByOrganization(int itemId) {
            object[] results = this.Invoke("GetOrganizationStatisticsByOrganization", new object[] {
                        itemId});
            return ((OrganizationStatistics)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationStatisticsByOrganization(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationStatisticsByOrganization", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationStatistics EndGetOrganizationStatisticsByOrganization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationStatistics)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationStatisticsByOrganizationAsync(int itemId) {
            this.GetOrganizationStatisticsByOrganizationAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationStatisticsByOrganizationAsync(int itemId, object userState) {
            if ((this.GetOrganizationStatisticsByOrganizationOperationCompleted == null)) {
                this.GetOrganizationStatisticsByOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationStatisticsByOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationStatisticsByOrganization", new object[] {
                        itemId}, this.GetOrganizationStatisticsByOrganizationOperationCompleted, userState);
        }
        
        private void OnGetOrganizationStatisticsByOrganizationOperationCompleted(object arg) {
            if ((this.GetOrganizationStatisticsByOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationStatisticsByOrganizationCompleted(this, new GetOrganizationStatisticsByOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public Organization GetOrganization(int itemId) {
            object[] results = this.Invoke("GetOrganization", new object[] {
                        itemId});
            return ((Organization)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganization(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganization", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public Organization EndGetOrganization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((Organization)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationAsync(int itemId) {
            this.GetOrganizationAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationAsync(int itemId, object userState) {
            if ((this.GetOrganizationOperationCompleted == null)) {
                this.GetOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationOperationCompleted);
            }
            this.InvokeAsync("GetOrganization", new object[] {
                        itemId}, this.GetOrganizationOperationCompleted, userState);
        }
        
        private void OnGetOrganizationOperationCompleted(object arg) {
            if ((this.GetOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationCompleted(this, new GetOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAccountIdByUserPrincipalName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int GetAccountIdByUserPrincipalName(int itemId, string userPrincipalName) {
            object[] results = this.Invoke("GetAccountIdByUserPrincipalName", new object[] {
                        itemId,
                        userPrincipalName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAccountIdByUserPrincipalName(int itemId, string userPrincipalName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAccountIdByUserPrincipalName", new object[] {
                        itemId,
                        userPrincipalName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndGetAccountIdByUserPrincipalName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void GetAccountIdByUserPrincipalNameAsync(int itemId, string userPrincipalName) {
            this.GetAccountIdByUserPrincipalNameAsync(itemId, userPrincipalName, null);
        }
        
        /// <remarks/>
        public void GetAccountIdByUserPrincipalNameAsync(int itemId, string userPrincipalName, object userState) {
            if ((this.GetAccountIdByUserPrincipalNameOperationCompleted == null)) {
                this.GetAccountIdByUserPrincipalNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAccountIdByUserPrincipalNameOperationCompleted);
            }
            this.InvokeAsync("GetAccountIdByUserPrincipalName", new object[] {
                        itemId,
                        userPrincipalName}, this.GetAccountIdByUserPrincipalNameOperationCompleted, userState);
        }
        
        private void OnGetAccountIdByUserPrincipalNameOperationCompleted(object arg) {
            if ((this.GetAccountIdByUserPrincipalNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAccountIdByUserPrincipalNameCompleted(this, new GetAccountIdByUserPrincipalNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDefaultOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SetDefaultOrganization(int newDefaultOrganizationId, int currentDefaultOrganizationId) {
            this.Invoke("SetDefaultOrganization", new object[] {
                        newDefaultOrganizationId,
                        currentDefaultOrganizationId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDefaultOrganization(int newDefaultOrganizationId, int currentDefaultOrganizationId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDefaultOrganization", new object[] {
                        newDefaultOrganizationId,
                        currentDefaultOrganizationId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSetDefaultOrganization(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SetDefaultOrganizationAsync(int newDefaultOrganizationId, int currentDefaultOrganizationId) {
            this.SetDefaultOrganizationAsync(newDefaultOrganizationId, currentDefaultOrganizationId, null);
        }
        
        /// <remarks/>
        public void SetDefaultOrganizationAsync(int newDefaultOrganizationId, int currentDefaultOrganizationId, object userState) {
            if ((this.SetDefaultOrganizationOperationCompleted == null)) {
                this.SetDefaultOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDefaultOrganizationOperationCompleted);
            }
            this.InvokeAsync("SetDefaultOrganization", new object[] {
                        newDefaultOrganizationId,
                        currentDefaultOrganizationId}, this.SetDefaultOrganizationOperationCompleted, userState);
        }
        
        private void OnSetDefaultOrganizationOperationCompleted(object arg) {
            if ((this.SetDefaultOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDefaultOrganizationCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGeneralSettingsWithExtraData", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationUser GetUserGeneralSettingsWithExtraData(int itemId, int accountId) {
            object[] results = this.Invoke("GetUserGeneralSettingsWithExtraData", new object[] {
                        itemId,
                        accountId});
            return ((OrganizationUser)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserGeneralSettingsWithExtraData(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserGeneralSettingsWithExtraData", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationUser EndGetUserGeneralSettingsWithExtraData(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGeneralSettingsWithExtraDataAsync(int itemId, int accountId) {
            this.GetUserGeneralSettingsWithExtraDataAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void GetUserGeneralSettingsWithExtraDataAsync(int itemId, int accountId, object userState) {
            if ((this.GetUserGeneralSettingsWithExtraDataOperationCompleted == null)) {
                this.GetUserGeneralSettingsWithExtraDataOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGeneralSettingsWithExtraDataOperationCompleted);
            }
            this.InvokeAsync("GetUserGeneralSettingsWithExtraData", new object[] {
                        itemId,
                        accountId}, this.GetUserGeneralSettingsWithExtraDataOperationCompleted, userState);
        }
        
        private void OnGetUserGeneralSettingsWithExtraDataOperationCompleted(object arg) {
            if ((this.GetUserGeneralSettingsWithExtraDataCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGeneralSettingsWithExtraDataCompleted(this, new GetUserGeneralSettingsWithExtraDataCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendResetUserPasswordLinkSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SendResetUserPasswordLinkSms(int itemId, int accountId, string reason, string phoneTo) {
            object[] results = this.Invoke("SendResetUserPasswordLinkSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendResetUserPasswordLinkSms(int itemId, int accountId, string reason, string phoneTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendResetUserPasswordLinkSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSendResetUserPasswordLinkSms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendResetUserPasswordLinkSmsAsync(int itemId, int accountId, string reason, string phoneTo) {
            this.SendResetUserPasswordLinkSmsAsync(itemId, accountId, reason, phoneTo, null);
        }
        
        /// <remarks/>
        public void SendResetUserPasswordLinkSmsAsync(int itemId, int accountId, string reason, string phoneTo, object userState) {
            if ((this.SendResetUserPasswordLinkSmsOperationCompleted == null)) {
                this.SendResetUserPasswordLinkSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendResetUserPasswordLinkSmsOperationCompleted);
            }
            this.InvokeAsync("SendResetUserPasswordLinkSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo}, this.SendResetUserPasswordLinkSmsOperationCompleted, userState);
        }
        
        private void OnSendResetUserPasswordLinkSmsOperationCompleted(object arg) {
            if ((this.SendResetUserPasswordLinkSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendResetUserPasswordLinkSmsCompleted(this, new SendResetUserPasswordLinkSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendResetUserPasswordPincodeSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SendResetUserPasswordPincodeSms(System.Guid token, string phoneTo) {
            object[] results = this.Invoke("SendResetUserPasswordPincodeSms", new object[] {
                        token,
                        phoneTo});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendResetUserPasswordPincodeSms(System.Guid token, string phoneTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendResetUserPasswordPincodeSms", new object[] {
                        token,
                        phoneTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSendResetUserPasswordPincodeSms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendResetUserPasswordPincodeSmsAsync(System.Guid token, string phoneTo) {
            this.SendResetUserPasswordPincodeSmsAsync(token, phoneTo, null);
        }
        
        /// <remarks/>
        public void SendResetUserPasswordPincodeSmsAsync(System.Guid token, string phoneTo, object userState) {
            if ((this.SendResetUserPasswordPincodeSmsOperationCompleted == null)) {
                this.SendResetUserPasswordPincodeSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendResetUserPasswordPincodeSmsOperationCompleted);
            }
            this.InvokeAsync("SendResetUserPasswordPincodeSms", new object[] {
                        token,
                        phoneTo}, this.SendResetUserPasswordPincodeSmsOperationCompleted, userState);
        }
        
        private void OnSendResetUserPasswordPincodeSmsOperationCompleted(object arg) {
            if ((this.SendResetUserPasswordPincodeSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendResetUserPasswordPincodeSmsCompleted(this, new SendResetUserPasswordPincodeSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendResetUserPasswordPincodeEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SendResetUserPasswordPincodeEmail(System.Guid token, string mailTo) {
            object[] results = this.Invoke("SendResetUserPasswordPincodeEmail", new object[] {
                        token,
                        mailTo});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendResetUserPasswordPincodeEmail(System.Guid token, string mailTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendResetUserPasswordPincodeEmail", new object[] {
                        token,
                        mailTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSendResetUserPasswordPincodeEmail(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendResetUserPasswordPincodeEmailAsync(System.Guid token, string mailTo) {
            this.SendResetUserPasswordPincodeEmailAsync(token, mailTo, null);
        }
        
        /// <remarks/>
        public void SendResetUserPasswordPincodeEmailAsync(System.Guid token, string mailTo, object userState) {
            if ((this.SendResetUserPasswordPincodeEmailOperationCompleted == null)) {
                this.SendResetUserPasswordPincodeEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendResetUserPasswordPincodeEmailOperationCompleted);
            }
            this.InvokeAsync("SendResetUserPasswordPincodeEmail", new object[] {
                        token,
                        mailTo}, this.SendResetUserPasswordPincodeEmailOperationCompleted, userState);
        }
        
        private void OnSendResetUserPasswordPincodeEmailOperationCompleted(object arg) {
            if ((this.SendResetUserPasswordPincodeEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendResetUserPasswordPincodeEmailCompleted(this, new SendResetUserPasswordPincodeEmailCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUserPasswordRequestSms", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SendUserPasswordRequestSms(int itemId, int accountId, string reason, string phoneTo) {
            object[] results = this.Invoke("SendUserPasswordRequestSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendUserPasswordRequestSms(int itemId, int accountId, string reason, string phoneTo, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendUserPasswordRequestSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSendUserPasswordRequestSms(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SendUserPasswordRequestSmsAsync(int itemId, int accountId, string reason, string phoneTo) {
            this.SendUserPasswordRequestSmsAsync(itemId, accountId, reason, phoneTo, null);
        }
        
        /// <remarks/>
        public void SendUserPasswordRequestSmsAsync(int itemId, int accountId, string reason, string phoneTo, object userState) {
            if ((this.SendUserPasswordRequestSmsOperationCompleted == null)) {
                this.SendUserPasswordRequestSmsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUserPasswordRequestSmsOperationCompleted);
            }
            this.InvokeAsync("SendUserPasswordRequestSms", new object[] {
                        itemId,
                        accountId,
                        reason,
                        phoneTo}, this.SendUserPasswordRequestSmsOperationCompleted, userState);
        }
        
        private void OnSendUserPasswordRequestSmsOperationCompleted(object arg) {
            if ((this.SendUserPasswordRequestSmsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUserPasswordRequestSmsCompleted(this, new SendUserPasswordRequestSmsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendUserPasswordRequestEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendUserPasswordRequestEmail(int itemId, int accountId, string reason, string mailTo, bool finalStep) {
            this.Invoke("SendUserPasswordRequestEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendUserPasswordRequestEmail(int itemId, int accountId, string reason, string mailTo, bool finalStep, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendUserPasswordRequestEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendUserPasswordRequestEmail(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendUserPasswordRequestEmailAsync(int itemId, int accountId, string reason, string mailTo, bool finalStep) {
            this.SendUserPasswordRequestEmailAsync(itemId, accountId, reason, mailTo, finalStep, null);
        }
        
        /// <remarks/>
        public void SendUserPasswordRequestEmailAsync(int itemId, int accountId, string reason, string mailTo, bool finalStep, object userState) {
            if ((this.SendUserPasswordRequestEmailOperationCompleted == null)) {
                this.SendUserPasswordRequestEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendUserPasswordRequestEmailOperationCompleted);
            }
            this.InvokeAsync("SendUserPasswordRequestEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep}, this.SendUserPasswordRequestEmailOperationCompleted, userState);
        }
        
        private void OnSendUserPasswordRequestEmailOperationCompleted(object arg) {
            if ((this.SendUserPasswordRequestEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendUserPasswordRequestEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddOrganizationDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddOrganizationDomain(int itemId, string domainName) {
            object[] results = this.Invoke("AddOrganizationDomain", new object[] {
                        itemId,
                        domainName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddOrganizationDomain(int itemId, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddOrganizationDomain", new object[] {
                        itemId,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddOrganizationDomain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddOrganizationDomainAsync(int itemId, string domainName) {
            this.AddOrganizationDomainAsync(itemId, domainName, null);
        }
        
        /// <remarks/>
        public void AddOrganizationDomainAsync(int itemId, string domainName, object userState) {
            if ((this.AddOrganizationDomainOperationCompleted == null)) {
                this.AddOrganizationDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddOrganizationDomainOperationCompleted);
            }
            this.InvokeAsync("AddOrganizationDomain", new object[] {
                        itemId,
                        domainName}, this.AddOrganizationDomainOperationCompleted, userState);
        }
        
        private void OnAddOrganizationDomainOperationCompleted(object arg) {
            if ((this.AddOrganizationDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddOrganizationDomainCompleted(this, new AddOrganizationDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ChangeOrganizationDomainType", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ChangeOrganizationDomainType(int itemId, int domainId, ExchangeAcceptedDomainType newDomainType) {
            object[] results = this.Invoke("ChangeOrganizationDomainType", new object[] {
                        itemId,
                        domainId,
                        newDomainType});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginChangeOrganizationDomainType(int itemId, int domainId, ExchangeAcceptedDomainType newDomainType, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ChangeOrganizationDomainType", new object[] {
                        itemId,
                        domainId,
                        newDomainType}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndChangeOrganizationDomainType(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ChangeOrganizationDomainTypeAsync(int itemId, int domainId, ExchangeAcceptedDomainType newDomainType) {
            this.ChangeOrganizationDomainTypeAsync(itemId, domainId, newDomainType, null);
        }
        
        /// <remarks/>
        public void ChangeOrganizationDomainTypeAsync(int itemId, int domainId, ExchangeAcceptedDomainType newDomainType, object userState) {
            if ((this.ChangeOrganizationDomainTypeOperationCompleted == null)) {
                this.ChangeOrganizationDomainTypeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnChangeOrganizationDomainTypeOperationCompleted);
            }
            this.InvokeAsync("ChangeOrganizationDomainType", new object[] {
                        itemId,
                        domainId,
                        newDomainType}, this.ChangeOrganizationDomainTypeOperationCompleted, userState);
        }
        
        private void OnChangeOrganizationDomainTypeOperationCompleted(object arg) {
            if ((this.ChangeOrganizationDomainTypeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ChangeOrganizationDomainTypeCompleted(this, new ChangeOrganizationDomainTypeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationDomains", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationDomainName[] GetOrganizationDomains(int itemId) {
            object[] results = this.Invoke("GetOrganizationDomains", new object[] {
                        itemId});
            return ((OrganizationDomainName[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationDomains(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationDomains", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationDomainName[] EndGetOrganizationDomains(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationDomainName[])(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationDomainsAsync(int itemId) {
            this.GetOrganizationDomainsAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetOrganizationDomainsAsync(int itemId, object userState) {
            if ((this.GetOrganizationDomainsOperationCompleted == null)) {
                this.GetOrganizationDomainsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationDomainsOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationDomains", new object[] {
                        itemId}, this.GetOrganizationDomainsOperationCompleted, userState);
        }
        
        private void OnGetOrganizationDomainsOperationCompleted(object arg) {
            if ((this.GetOrganizationDomainsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationDomainsCompleted(this, new GetOrganizationDomainsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteOrganizationDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteOrganizationDomain(int itemId, int domainId) {
            object[] results = this.Invoke("DeleteOrganizationDomain", new object[] {
                        itemId,
                        domainId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteOrganizationDomain(int itemId, int domainId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteOrganizationDomain", new object[] {
                        itemId,
                        domainId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteOrganizationDomain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteOrganizationDomainAsync(int itemId, int domainId) {
            this.DeleteOrganizationDomainAsync(itemId, domainId, null);
        }
        
        /// <remarks/>
        public void DeleteOrganizationDomainAsync(int itemId, int domainId, object userState) {
            if ((this.DeleteOrganizationDomainOperationCompleted == null)) {
                this.DeleteOrganizationDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteOrganizationDomainOperationCompleted);
            }
            this.InvokeAsync("DeleteOrganizationDomain", new object[] {
                        itemId,
                        domainId}, this.DeleteOrganizationDomainOperationCompleted, userState);
        }
        
        private void OnDeleteOrganizationDomainOperationCompleted(object arg) {
            if ((this.DeleteOrganizationDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteOrganizationDomainCompleted(this, new DeleteOrganizationDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetOrganizationDefaultDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetOrganizationDefaultDomain(int itemId, int domainId) {
            object[] results = this.Invoke("SetOrganizationDefaultDomain", new object[] {
                        itemId,
                        domainId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetOrganizationDefaultDomain(int itemId, int domainId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetOrganizationDefaultDomain", new object[] {
                        itemId,
                        domainId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetOrganizationDefaultDomain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetOrganizationDefaultDomainAsync(int itemId, int domainId) {
            this.SetOrganizationDefaultDomainAsync(itemId, domainId, null);
        }
        
        /// <remarks/>
        public void SetOrganizationDefaultDomainAsync(int itemId, int domainId, object userState) {
            if ((this.SetOrganizationDefaultDomainOperationCompleted == null)) {
                this.SetOrganizationDefaultDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetOrganizationDefaultDomainOperationCompleted);
            }
            this.InvokeAsync("SetOrganizationDefaultDomain", new object[] {
                        itemId,
                        domainId}, this.SetOrganizationDefaultDomainOperationCompleted, userState);
        }
        
        private void OnSetOrganizationDefaultDomainOperationCompleted(object arg) {
            if ((this.SetOrganizationDefaultDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetOrganizationDefaultDomainCompleted(this, new SetOrganizationDefaultDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationObjectsByDomain", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public System.Data.DataSet GetOrganizationObjectsByDomain(int itemId, string domainName) {
            object[] results = this.Invoke("GetOrganizationObjectsByDomain", new object[] {
                        itemId,
                        domainName});
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationObjectsByDomain(int itemId, string domainName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationObjectsByDomain", new object[] {
                        itemId,
                        domainName}, callback, asyncState);
        }
        
        /// <remarks/>
        public System.Data.DataSet EndGetOrganizationObjectsByDomain(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((System.Data.DataSet)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationObjectsByDomainAsync(int itemId, string domainName) {
            this.GetOrganizationObjectsByDomainAsync(itemId, domainName, null);
        }
        
        /// <remarks/>
        public void GetOrganizationObjectsByDomainAsync(int itemId, string domainName, object userState) {
            if ((this.GetOrganizationObjectsByDomainOperationCompleted == null)) {
                this.GetOrganizationObjectsByDomainOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationObjectsByDomainOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationObjectsByDomain", new object[] {
                        itemId,
                        domainName}, this.GetOrganizationObjectsByDomainOperationCompleted, userState);
        }
        
        private void OnGetOrganizationObjectsByDomainOperationCompleted(object arg) {
            if ((this.GetOrganizationObjectsByDomainCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationObjectsByDomainCompleted(this, new GetOrganizationObjectsByDomainCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CheckDomainUsedByHostedOrganization", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public bool CheckDomainUsedByHostedOrganization(int itemId, int domainId) {
            object[] results = this.Invoke("CheckDomainUsedByHostedOrganization", new object[] {
                        itemId,
                        domainId});
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCheckDomainUsedByHostedOrganization(int itemId, int domainId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CheckDomainUsedByHostedOrganization", new object[] {
                        itemId,
                        domainId}, callback, asyncState);
        }
        
        /// <remarks/>
        public bool EndCheckDomainUsedByHostedOrganization(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((bool)(results[0]));
        }
        
        /// <remarks/>
        public void CheckDomainUsedByHostedOrganizationAsync(int itemId, int domainId) {
            this.CheckDomainUsedByHostedOrganizationAsync(itemId, domainId, null);
        }
        
        /// <remarks/>
        public void CheckDomainUsedByHostedOrganizationAsync(int itemId, int domainId, object userState) {
            if ((this.CheckDomainUsedByHostedOrganizationOperationCompleted == null)) {
                this.CheckDomainUsedByHostedOrganizationOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCheckDomainUsedByHostedOrganizationOperationCompleted);
            }
            this.InvokeAsync("CheckDomainUsedByHostedOrganization", new object[] {
                        itemId,
                        domainId}, this.CheckDomainUsedByHostedOrganizationOperationCompleted, userState);
        }
        
        private void OnCheckDomainUsedByHostedOrganizationOperationCompleted(object arg) {
            if ((this.CheckDomainUsedByHostedOrganizationCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CheckDomainUsedByHostedOrganizationCompleted(this, new CheckDomainUsedByHostedOrganizationCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateUser(int itemId, string displayName, string name, string domain, string password, string subscriberNumber, bool sendNotification, string to) {
            object[] results = this.Invoke("CreateUser", new object[] {
                        itemId,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber,
                        sendNotification,
                        to});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateUser(int itemId, string displayName, string name, string domain, string password, string subscriberNumber, bool sendNotification, string to, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateUser", new object[] {
                        itemId,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber,
                        sendNotification,
                        to}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateUserAsync(int itemId, string displayName, string name, string domain, string password, string subscriberNumber, bool sendNotification, string to) {
            this.CreateUserAsync(itemId, displayName, name, domain, password, subscriberNumber, sendNotification, to, null);
        }
        
        /// <remarks/>
        public void CreateUserAsync(int itemId, string displayName, string name, string domain, string password, string subscriberNumber, bool sendNotification, string to, object userState) {
            if ((this.CreateUserOperationCompleted == null)) {
                this.CreateUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateUserOperationCompleted);
            }
            this.InvokeAsync("CreateUser", new object[] {
                        itemId,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber,
                        sendNotification,
                        to}, this.CreateUserOperationCompleted, userState);
        }
        
        private void OnCreateUserOperationCompleted(object arg) {
            if ((this.CreateUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateUserCompleted(this, new CreateUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/ImportUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int ImportUser(int itemId, string accountName, string displayName, string name, string domain, string password, string subscriberNumber) {
            object[] results = this.Invoke("ImportUser", new object[] {
                        itemId,
                        accountName,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginImportUser(int itemId, string accountName, string displayName, string name, string domain, string password, string subscriberNumber, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("ImportUser", new object[] {
                        itemId,
                        accountName,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndImportUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void ImportUserAsync(int itemId, string accountName, string displayName, string name, string domain, string password, string subscriberNumber) {
            this.ImportUserAsync(itemId, accountName, displayName, name, domain, password, subscriberNumber, null);
        }
        
        /// <remarks/>
        public void ImportUserAsync(int itemId, string accountName, string displayName, string name, string domain, string password, string subscriberNumber, object userState) {
            if ((this.ImportUserOperationCompleted == null)) {
                this.ImportUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnImportUserOperationCompleted);
            }
            this.InvokeAsync("ImportUser", new object[] {
                        itemId,
                        accountName,
                        displayName,
                        name,
                        domain,
                        password,
                        subscriberNumber}, this.ImportUserOperationCompleted, userState);
        }
        
        private void OnImportUserOperationCompleted(object arg) {
            if ((this.ImportUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.ImportUserCompleted(this, new ImportUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationDeletedUsersPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationDeletedUsersPaged GetOrganizationDeletedUsersPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            object[] results = this.Invoke("GetOrganizationDeletedUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((OrganizationDeletedUsersPaged)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationDeletedUsersPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationDeletedUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationDeletedUsersPaged EndGetOrganizationDeletedUsersPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationDeletedUsersPaged)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationDeletedUsersPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            this.GetOrganizationDeletedUsersPagedAsync(itemId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetOrganizationDeletedUsersPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState) {
            if ((this.GetOrganizationDeletedUsersPagedOperationCompleted == null)) {
                this.GetOrganizationDeletedUsersPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationDeletedUsersPagedOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationDeletedUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetOrganizationDeletedUsersPagedOperationCompleted, userState);
        }
        
        private void OnGetOrganizationDeletedUsersPagedOperationCompleted(object arg) {
            if ((this.GetOrganizationDeletedUsersPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationDeletedUsersPagedCompleted(this, new GetOrganizationDeletedUsersPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationUsersPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationUsersPaged GetOrganizationUsersPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            object[] results = this.Invoke("GetOrganizationUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((OrganizationUsersPaged)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationUsersPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationUsersPaged EndGetOrganizationUsersPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationUsersPaged)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationUsersPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            this.GetOrganizationUsersPagedAsync(itemId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetOrganizationUsersPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState) {
            if ((this.GetOrganizationUsersPagedOperationCompleted == null)) {
                this.GetOrganizationUsersPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationUsersPagedOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationUsersPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetOrganizationUsersPagedOperationCompleted, userState);
        }
        
        private void OnGetOrganizationUsersPagedOperationCompleted(object arg) {
            if ((this.GetOrganizationUsersPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationUsersPagedCompleted(this, new GetOrganizationUsersPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetUserGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationUser GetUserGeneralSettings(int itemId, int accountId) {
            object[] results = this.Invoke("GetUserGeneralSettings", new object[] {
                        itemId,
                        accountId});
            return ((OrganizationUser)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetUserGeneralSettings(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetUserGeneralSettings", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationUser EndGetUserGeneralSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationUser)(results[0]));
        }
        
        /// <remarks/>
        public void GetUserGeneralSettingsAsync(int itemId, int accountId) {
            this.GetUserGeneralSettingsAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void GetUserGeneralSettingsAsync(int itemId, int accountId, object userState) {
            if ((this.GetUserGeneralSettingsOperationCompleted == null)) {
                this.GetUserGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetUserGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("GetUserGeneralSettings", new object[] {
                        itemId,
                        accountId}, this.GetUserGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnGetUserGeneralSettingsOperationCompleted(object arg) {
            if ((this.GetUserGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetUserGeneralSettingsCompleted(this, new GetUserGeneralSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUserGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetUserGeneralSettings(
                    int itemId, 
                    int accountId, 
                    string displayName, 
                    string password, 
                    bool hideAddressBook, 
                    bool disabled, 
                    bool locked, 
                    string firstName, 
                    string initials, 
                    string lastName, 
                    string address, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string jobTitle, 
                    string company, 
                    string department, 
                    string office, 
                    string managerAccountName, 
                    string businessPhone, 
                    string fax, 
                    string homePhone, 
                    string mobilePhone, 
                    string pager, 
                    string webPage, 
                    string notes, 
                    string externalEmail, 
                    string subscriberNumber, 
                    int levelId, 
                    bool isVIP, 
                    bool userMustChangePassword) {
            object[] results = this.Invoke("SetUserGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        password,
                        hideAddressBook,
                        disabled,
                        locked,
                        firstName,
                        initials,
                        lastName,
                        address,
                        city,
                        state,
                        zip,
                        country,
                        jobTitle,
                        company,
                        department,
                        office,
                        managerAccountName,
                        businessPhone,
                        fax,
                        homePhone,
                        mobilePhone,
                        pager,
                        webPage,
                        notes,
                        externalEmail,
                        subscriberNumber,
                        levelId,
                        isVIP,
                        userMustChangePassword});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUserGeneralSettings(
                    int itemId, 
                    int accountId, 
                    string displayName, 
                    string password, 
                    bool hideAddressBook, 
                    bool disabled, 
                    bool locked, 
                    string firstName, 
                    string initials, 
                    string lastName, 
                    string address, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string jobTitle, 
                    string company, 
                    string department, 
                    string office, 
                    string managerAccountName, 
                    string businessPhone, 
                    string fax, 
                    string homePhone, 
                    string mobilePhone, 
                    string pager, 
                    string webPage, 
                    string notes, 
                    string externalEmail, 
                    string subscriberNumber, 
                    int levelId, 
                    bool isVIP, 
                    bool userMustChangePassword, 
                    System.AsyncCallback callback, 
                    object asyncState) {
            return this.BeginInvoke("SetUserGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        password,
                        hideAddressBook,
                        disabled,
                        locked,
                        firstName,
                        initials,
                        lastName,
                        address,
                        city,
                        state,
                        zip,
                        country,
                        jobTitle,
                        company,
                        department,
                        office,
                        managerAccountName,
                        businessPhone,
                        fax,
                        homePhone,
                        mobilePhone,
                        pager,
                        webPage,
                        notes,
                        externalEmail,
                        subscriberNumber,
                        levelId,
                        isVIP,
                        userMustChangePassword}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetUserGeneralSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserGeneralSettingsAsync(
                    int itemId, 
                    int accountId, 
                    string displayName, 
                    string password, 
                    bool hideAddressBook, 
                    bool disabled, 
                    bool locked, 
                    string firstName, 
                    string initials, 
                    string lastName, 
                    string address, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string jobTitle, 
                    string company, 
                    string department, 
                    string office, 
                    string managerAccountName, 
                    string businessPhone, 
                    string fax, 
                    string homePhone, 
                    string mobilePhone, 
                    string pager, 
                    string webPage, 
                    string notes, 
                    string externalEmail, 
                    string subscriberNumber, 
                    int levelId, 
                    bool isVIP, 
                    bool userMustChangePassword) {
            this.SetUserGeneralSettingsAsync(itemId, accountId, displayName, password, hideAddressBook, disabled, locked, firstName, initials, lastName, address, city, state, zip, country, jobTitle, company, department, office, managerAccountName, businessPhone, fax, homePhone, mobilePhone, pager, webPage, notes, externalEmail, subscriberNumber, levelId, isVIP, userMustChangePassword, null);
        }
        
        /// <remarks/>
        public void SetUserGeneralSettingsAsync(
                    int itemId, 
                    int accountId, 
                    string displayName, 
                    string password, 
                    bool hideAddressBook, 
                    bool disabled, 
                    bool locked, 
                    string firstName, 
                    string initials, 
                    string lastName, 
                    string address, 
                    string city, 
                    string state, 
                    string zip, 
                    string country, 
                    string jobTitle, 
                    string company, 
                    string department, 
                    string office, 
                    string managerAccountName, 
                    string businessPhone, 
                    string fax, 
                    string homePhone, 
                    string mobilePhone, 
                    string pager, 
                    string webPage, 
                    string notes, 
                    string externalEmail, 
                    string subscriberNumber, 
                    int levelId, 
                    bool isVIP, 
                    bool userMustChangePassword, 
                    object userState) {
            if ((this.SetUserGeneralSettingsOperationCompleted == null)) {
                this.SetUserGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("SetUserGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        password,
                        hideAddressBook,
                        disabled,
                        locked,
                        firstName,
                        initials,
                        lastName,
                        address,
                        city,
                        state,
                        zip,
                        country,
                        jobTitle,
                        company,
                        department,
                        office,
                        managerAccountName,
                        businessPhone,
                        fax,
                        homePhone,
                        mobilePhone,
                        pager,
                        webPage,
                        notes,
                        externalEmail,
                        subscriberNumber,
                        levelId,
                        isVIP,
                        userMustChangePassword}, this.SetUserGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnSetUserGeneralSettingsOperationCompleted(object arg) {
            if ((this.SetUserGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserGeneralSettingsCompleted(this, new SetUserGeneralSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUserPrincipalName", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetUserPrincipalName(int itemId, int accountId, string userPrincipalName, bool inherit) {
            object[] results = this.Invoke("SetUserPrincipalName", new object[] {
                        itemId,
                        accountId,
                        userPrincipalName,
                        inherit});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUserPrincipalName(int itemId, int accountId, string userPrincipalName, bool inherit, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUserPrincipalName", new object[] {
                        itemId,
                        accountId,
                        userPrincipalName,
                        inherit}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetUserPrincipalName(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserPrincipalNameAsync(int itemId, int accountId, string userPrincipalName, bool inherit) {
            this.SetUserPrincipalNameAsync(itemId, accountId, userPrincipalName, inherit, null);
        }
        
        /// <remarks/>
        public void SetUserPrincipalNameAsync(int itemId, int accountId, string userPrincipalName, bool inherit, object userState) {
            if ((this.SetUserPrincipalNameOperationCompleted == null)) {
                this.SetUserPrincipalNameOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPrincipalNameOperationCompleted);
            }
            this.InvokeAsync("SetUserPrincipalName", new object[] {
                        itemId,
                        accountId,
                        userPrincipalName,
                        inherit}, this.SetUserPrincipalNameOperationCompleted, userState);
        }
        
        private void OnSetUserPrincipalNameOperationCompleted(object arg) {
            if ((this.SetUserPrincipalNameCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPrincipalNameCompleted(this, new SetUserPrincipalNameCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetUserPassword", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetUserPassword(int itemId, int accountId, string password) {
            object[] results = this.Invoke("SetUserPassword", new object[] {
                        itemId,
                        accountId,
                        password});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetUserPassword(int itemId, int accountId, string password, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetUserPassword", new object[] {
                        itemId,
                        accountId,
                        password}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetUserPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(int itemId, int accountId, string password) {
            this.SetUserPasswordAsync(itemId, accountId, password, null);
        }
        
        /// <remarks/>
        public void SetUserPasswordAsync(int itemId, int accountId, string password, object userState) {
            if ((this.SetUserPasswordOperationCompleted == null)) {
                this.SetUserPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetUserPasswordOperationCompleted);
            }
            this.InvokeAsync("SetUserPassword", new object[] {
                        itemId,
                        accountId,
                        password}, this.SetUserPasswordOperationCompleted, userState);
        }
        
        private void OnSetUserPasswordOperationCompleted(object arg) {
            if ((this.SetUserPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetUserPasswordCompleted(this, new SetUserPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationUser[] SearchAccounts(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeMailboxes) {
            object[] results = this.Invoke("SearchAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeMailboxes});
            return ((OrganizationUser[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchAccounts(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeMailboxes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeMailboxes}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationUser[] EndSearchAccounts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationUser[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchAccountsAsync(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeMailboxes) {
            this.SearchAccountsAsync(itemId, filterColumn, filterValue, sortColumn, includeMailboxes, null);
        }
        
        /// <remarks/>
        public void SearchAccountsAsync(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeMailboxes, object userState) {
            if ((this.SearchAccountsOperationCompleted == null)) {
                this.SearchAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchAccountsOperationCompleted);
            }
            this.InvokeAsync("SearchAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeMailboxes}, this.SearchAccountsOperationCompleted, userState);
        }
        
        private void OnSearchAccountsOperationCompleted(object arg) {
            if ((this.SearchAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchAccountsCompleted(this, new SearchAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetDeletedUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetDeletedUser(int itemId, int accountId, bool enableForceArchive) {
            object[] results = this.Invoke("SetDeletedUser", new object[] {
                        itemId,
                        accountId,
                        enableForceArchive});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetDeletedUser(int itemId, int accountId, bool enableForceArchive, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetDeletedUser", new object[] {
                        itemId,
                        accountId,
                        enableForceArchive}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetDeletedUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetDeletedUserAsync(int itemId, int accountId, bool enableForceArchive) {
            this.SetDeletedUserAsync(itemId, accountId, enableForceArchive, null);
        }
        
        /// <remarks/>
        public void SetDeletedUserAsync(int itemId, int accountId, bool enableForceArchive, object userState) {
            if ((this.SetDeletedUserOperationCompleted == null)) {
                this.SetDeletedUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetDeletedUserOperationCompleted);
            }
            this.InvokeAsync("SetDeletedUser", new object[] {
                        itemId,
                        accountId,
                        enableForceArchive}, this.SetDeletedUserOperationCompleted, userState);
        }
        
        private void OnSetDeletedUserOperationCompleted(object arg) {
            if ((this.SetDeletedUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetDeletedUserCompleted(this, new SetDeletedUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetArchiveFileBinaryChunk", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        [return: System.Xml.Serialization.XmlElementAttribute(DataType="base64Binary")]
        public byte[] GetArchiveFileBinaryChunk(int packageId, int itemId, int deleteAccountId, int offset, int length) {
            object[] results = this.Invoke("GetArchiveFileBinaryChunk", new object[] {
                        packageId,
                        itemId,
                        deleteAccountId,
                        offset,
                        length});
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetArchiveFileBinaryChunk(int packageId, int itemId, int deleteAccountId, int offset, int length, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetArchiveFileBinaryChunk", new object[] {
                        packageId,
                        itemId,
                        deleteAccountId,
                        offset,
                        length}, callback, asyncState);
        }
        
        /// <remarks/>
        public byte[] EndGetArchiveFileBinaryChunk(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((byte[])(results[0]));
        }
        
        /// <remarks/>
        public void GetArchiveFileBinaryChunkAsync(int packageId, int itemId, int deleteAccountId, int offset, int length) {
            this.GetArchiveFileBinaryChunkAsync(packageId, itemId, deleteAccountId, offset, length, null);
        }
        
        /// <remarks/>
        public void GetArchiveFileBinaryChunkAsync(int packageId, int itemId, int deleteAccountId, int offset, int length, object userState) {
            if ((this.GetArchiveFileBinaryChunkOperationCompleted == null)) {
                this.GetArchiveFileBinaryChunkOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetArchiveFileBinaryChunkOperationCompleted);
            }
            this.InvokeAsync("GetArchiveFileBinaryChunk", new object[] {
                        packageId,
                        itemId,
                        deleteAccountId,
                        offset,
                        length}, this.GetArchiveFileBinaryChunkOperationCompleted, userState);
        }
        
        private void OnGetArchiveFileBinaryChunkOperationCompleted(object arg) {
            if ((this.GetArchiveFileBinaryChunkCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetArchiveFileBinaryChunkCompleted(this, new GetArchiveFileBinaryChunkCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteUser", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteUser(int itemId, int accountId) {
            object[] results = this.Invoke("DeleteUser", new object[] {
                        itemId,
                        accountId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteUser(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteUser", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int itemId, int accountId) {
            this.DeleteUserAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void DeleteUserAsync(int itemId, int accountId, object userState) {
            if ((this.DeleteUserOperationCompleted == null)) {
                this.DeleteUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteUserOperationCompleted);
            }
            this.InvokeAsync("DeleteUser", new object[] {
                        itemId,
                        accountId}, this.DeleteUserOperationCompleted, userState);
        }
        
        private void OnDeleteUserOperationCompleted(object arg) {
            if ((this.DeleteUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteUserCompleted(this, new DeleteUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetPasswordPolicy", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PasswordPolicyResult GetPasswordPolicy(int itemId) {
            object[] results = this.Invoke("GetPasswordPolicy", new object[] {
                        itemId});
            return ((PasswordPolicyResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetPasswordPolicy(int itemId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetPasswordPolicy", new object[] {
                        itemId}, callback, asyncState);
        }
        
        /// <remarks/>
        public PasswordPolicyResult EndGetPasswordPolicy(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((PasswordPolicyResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetPasswordPolicyAsync(int itemId) {
            this.GetPasswordPolicyAsync(itemId, null);
        }
        
        /// <remarks/>
        public void GetPasswordPolicyAsync(int itemId, object userState) {
            if ((this.GetPasswordPolicyOperationCompleted == null)) {
                this.GetPasswordPolicyOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetPasswordPolicyOperationCompleted);
            }
            this.InvokeAsync("GetPasswordPolicy", new object[] {
                        itemId}, this.GetPasswordPolicyOperationCompleted, userState);
        }
        
        private void OnGetPasswordPolicyOperationCompleted(object arg) {
            if ((this.GetPasswordPolicyCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetPasswordPolicyCompleted(this, new GetPasswordPolicyCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SendResetUserPasswordEmail", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void SendResetUserPasswordEmail(int itemId, int accountId, string reason, string mailTo, bool finalStep) {
            this.Invoke("SendResetUserPasswordEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSendResetUserPasswordEmail(int itemId, int accountId, string reason, string mailTo, bool finalStep, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SendResetUserPasswordEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndSendResetUserPasswordEmail(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void SendResetUserPasswordEmailAsync(int itemId, int accountId, string reason, string mailTo, bool finalStep) {
            this.SendResetUserPasswordEmailAsync(itemId, accountId, reason, mailTo, finalStep, null);
        }
        
        /// <remarks/>
        public void SendResetUserPasswordEmailAsync(int itemId, int accountId, string reason, string mailTo, bool finalStep, object userState) {
            if ((this.SendResetUserPasswordEmailOperationCompleted == null)) {
                this.SendResetUserPasswordEmailOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSendResetUserPasswordEmailOperationCompleted);
            }
            this.InvokeAsync("SendResetUserPasswordEmail", new object[] {
                        itemId,
                        accountId,
                        reason,
                        mailTo,
                        finalStep}, this.SendResetUserPasswordEmailOperationCompleted, userState);
        }
        
        private void OnSendResetUserPasswordEmailOperationCompleted(object arg) {
            if ((this.SendResetUserPasswordEmailCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SendResetUserPasswordEmailCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreatePasswordResetAccessToken", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AccessToken CreatePasswordResetAccessToken(int itemId, int accountId) {
            object[] results = this.Invoke("CreatePasswordResetAccessToken", new object[] {
                        itemId,
                        accountId});
            return ((AccessToken)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreatePasswordResetAccessToken(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreatePasswordResetAccessToken", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AccessToken EndCreatePasswordResetAccessToken(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AccessToken)(results[0]));
        }
        
        /// <remarks/>
        public void CreatePasswordResetAccessTokenAsync(int itemId, int accountId) {
            this.CreatePasswordResetAccessTokenAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void CreatePasswordResetAccessTokenAsync(int itemId, int accountId, object userState) {
            if ((this.CreatePasswordResetAccessTokenOperationCompleted == null)) {
                this.CreatePasswordResetAccessTokenOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreatePasswordResetAccessTokenOperationCompleted);
            }
            this.InvokeAsync("CreatePasswordResetAccessToken", new object[] {
                        itemId,
                        accountId}, this.CreatePasswordResetAccessTokenOperationCompleted, userState);
        }
        
        private void OnCreatePasswordResetAccessTokenOperationCompleted(object arg) {
            if ((this.CreatePasswordResetAccessTokenCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreatePasswordResetAccessTokenCompleted(this, new CreatePasswordResetAccessTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/CreateSecurityGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int CreateSecurityGroup(int itemId, string displayName) {
            object[] results = this.Invoke("CreateSecurityGroup", new object[] {
                        itemId,
                        displayName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateSecurityGroup(int itemId, string displayName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateSecurityGroup", new object[] {
                        itemId,
                        displayName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndCreateSecurityGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void CreateSecurityGroupAsync(int itemId, string displayName) {
            this.CreateSecurityGroupAsync(itemId, displayName, null);
        }
        
        /// <remarks/>
        public void CreateSecurityGroupAsync(int itemId, string displayName, object userState) {
            if ((this.CreateSecurityGroupOperationCompleted == null)) {
                this.CreateSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("CreateSecurityGroup", new object[] {
                        itemId,
                        displayName}, this.CreateSecurityGroupOperationCompleted, userState);
        }
        
        private void OnCreateSecurityGroupOperationCompleted(object arg) {
            if ((this.CreateSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateSecurityGroupCompleted(this, new CreateSecurityGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityGroupGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationSecurityGroup GetSecurityGroupGeneralSettings(int itemId, int accountId) {
            object[] results = this.Invoke("GetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId});
            return ((OrganizationSecurityGroup)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSecurityGroupGeneralSettings(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationSecurityGroup EndGetSecurityGroupGeneralSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationSecurityGroup)(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityGroupGeneralSettingsAsync(int itemId, int accountId) {
            this.GetSecurityGroupGeneralSettingsAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void GetSecurityGroupGeneralSettingsAsync(int itemId, int accountId, object userState) {
            if ((this.GetSecurityGroupGeneralSettingsOperationCompleted == null)) {
                this.GetSecurityGroupGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityGroupGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("GetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId}, this.GetSecurityGroupGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnGetSecurityGroupGeneralSettingsOperationCompleted(object arg) {
            if ((this.GetSecurityGroupGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityGroupGeneralSettingsCompleted(this, new GetSecurityGroupGeneralSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteSecurityGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteSecurityGroup(int itemId, int accountId) {
            object[] results = this.Invoke("DeleteSecurityGroup", new object[] {
                        itemId,
                        accountId});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteSecurityGroup(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteSecurityGroup", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteSecurityGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteSecurityGroupAsync(int itemId, int accountId) {
            this.DeleteSecurityGroupAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void DeleteSecurityGroupAsync(int itemId, int accountId, object userState) {
            if ((this.DeleteSecurityGroupOperationCompleted == null)) {
                this.DeleteSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteSecurityGroup", new object[] {
                        itemId,
                        accountId}, this.DeleteSecurityGroupOperationCompleted, userState);
        }
        
        private void OnDeleteSecurityGroupOperationCompleted(object arg) {
            if ((this.DeleteSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteSecurityGroupCompleted(this, new DeleteSecurityGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SetSecurityGroupGeneralSettings", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int SetSecurityGroupGeneralSettings(int itemId, int accountId, string displayName, string[] memberAccounts, string notes) {
            object[] results = this.Invoke("SetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        memberAccounts,
                        notes});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetSecurityGroupGeneralSettings(int itemId, int accountId, string displayName, string[] memberAccounts, string notes, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        memberAccounts,
                        notes}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndSetSecurityGroupGeneralSettings(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void SetSecurityGroupGeneralSettingsAsync(int itemId, int accountId, string displayName, string[] memberAccounts, string notes) {
            this.SetSecurityGroupGeneralSettingsAsync(itemId, accountId, displayName, memberAccounts, notes, null);
        }
        
        /// <remarks/>
        public void SetSecurityGroupGeneralSettingsAsync(int itemId, int accountId, string displayName, string[] memberAccounts, string notes, object userState) {
            if ((this.SetSecurityGroupGeneralSettingsOperationCompleted == null)) {
                this.SetSecurityGroupGeneralSettingsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetSecurityGroupGeneralSettingsOperationCompleted);
            }
            this.InvokeAsync("SetSecurityGroupGeneralSettings", new object[] {
                        itemId,
                        accountId,
                        displayName,
                        memberAccounts,
                        notes}, this.SetSecurityGroupGeneralSettingsOperationCompleted, userState);
        }
        
        private void OnSetSecurityGroupGeneralSettingsOperationCompleted(object arg) {
            if ((this.SetSecurityGroupGeneralSettingsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetSecurityGroupGeneralSettingsCompleted(this, new SetSecurityGroupGeneralSettingsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetOrganizationSecurityGroupsPaged", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeAccountsPaged GetOrganizationSecurityGroupsPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            object[] results = this.Invoke("GetOrganizationSecurityGroupsPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows});
            return ((ExchangeAccountsPaged)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetOrganizationSecurityGroupsPaged(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetOrganizationSecurityGroupsPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExchangeAccountsPaged EndGetOrganizationSecurityGroupsPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExchangeAccountsPaged)(results[0]));
        }
        
        /// <remarks/>
        public void GetOrganizationSecurityGroupsPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows) {
            this.GetOrganizationSecurityGroupsPagedAsync(itemId, filterColumn, filterValue, sortColumn, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetOrganizationSecurityGroupsPagedAsync(int itemId, string filterColumn, string filterValue, string sortColumn, int startRow, int maximumRows, object userState) {
            if ((this.GetOrganizationSecurityGroupsPagedOperationCompleted == null)) {
                this.GetOrganizationSecurityGroupsPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetOrganizationSecurityGroupsPagedOperationCompleted);
            }
            this.InvokeAsync("GetOrganizationSecurityGroupsPaged", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        startRow,
                        maximumRows}, this.GetOrganizationSecurityGroupsPagedOperationCompleted, userState);
        }
        
        private void OnGetOrganizationSecurityGroupsPagedOperationCompleted(object arg) {
            if ((this.GetOrganizationSecurityGroupsPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetOrganizationSecurityGroupsPagedCompleted(this, new GetOrganizationSecurityGroupsPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddObjectToSecurityGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddObjectToSecurityGroup(int itemId, int accountId, string groupName) {
            object[] results = this.Invoke("AddObjectToSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddObjectToSecurityGroup(int itemId, int accountId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddObjectToSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddObjectToSecurityGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddObjectToSecurityGroupAsync(int itemId, int accountId, string groupName) {
            this.AddObjectToSecurityGroupAsync(itemId, accountId, groupName, null);
        }
        
        /// <remarks/>
        public void AddObjectToSecurityGroupAsync(int itemId, int accountId, string groupName, object userState) {
            if ((this.AddObjectToSecurityGroupOperationCompleted == null)) {
                this.AddObjectToSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddObjectToSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("AddObjectToSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName}, this.AddObjectToSecurityGroupOperationCompleted, userState);
        }
        
        private void OnAddObjectToSecurityGroupOperationCompleted(object arg) {
            if ((this.AddObjectToSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddObjectToSecurityGroupCompleted(this, new AddObjectToSecurityGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteObjectFromSecurityGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int DeleteObjectFromSecurityGroup(int itemId, int accountId, string groupName) {
            object[] results = this.Invoke("DeleteObjectFromSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteObjectFromSecurityGroup(int itemId, int accountId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteObjectFromSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndDeleteObjectFromSecurityGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteObjectFromSecurityGroupAsync(int itemId, int accountId, string groupName) {
            this.DeleteObjectFromSecurityGroupAsync(itemId, accountId, groupName, null);
        }
        
        /// <remarks/>
        public void DeleteObjectFromSecurityGroupAsync(int itemId, int accountId, string groupName, object userState) {
            if ((this.DeleteObjectFromSecurityGroupOperationCompleted == null)) {
                this.DeleteObjectFromSecurityGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteObjectFromSecurityGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteObjectFromSecurityGroup", new object[] {
                        itemId,
                        accountId,
                        groupName}, this.DeleteObjectFromSecurityGroupOperationCompleted, userState);
        }
        
        private void OnDeleteObjectFromSecurityGroupOperationCompleted(object arg) {
            if ((this.DeleteObjectFromSecurityGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteObjectFromSecurityGroupCompleted(this, new DeleteObjectFromSecurityGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSecurityGroupsByMember", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeAccount[] GetSecurityGroupsByMember(int itemId, int accountId) {
            object[] results = this.Invoke("GetSecurityGroupsByMember", new object[] {
                        itemId,
                        accountId});
            return ((ExchangeAccount[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSecurityGroupsByMember(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSecurityGroupsByMember", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExchangeAccount[] EndGetSecurityGroupsByMember(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExchangeAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSecurityGroupsByMemberAsync(int itemId, int accountId) {
            this.GetSecurityGroupsByMemberAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void GetSecurityGroupsByMemberAsync(int itemId, int accountId, object userState) {
            if ((this.GetSecurityGroupsByMemberOperationCompleted == null)) {
                this.GetSecurityGroupsByMemberOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSecurityGroupsByMemberOperationCompleted);
            }
            this.InvokeAsync("GetSecurityGroupsByMember", new object[] {
                        itemId,
                        accountId}, this.GetSecurityGroupsByMemberOperationCompleted, userState);
        }
        
        private void OnGetSecurityGroupsByMemberOperationCompleted(object arg) {
            if ((this.GetSecurityGroupsByMemberCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSecurityGroupsByMemberCompleted(this, new GetSecurityGroupsByMemberCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SearchOrganizationAccounts", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ExchangeAccount[] SearchOrganizationAccounts(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeOnlySecurityGroups) {
            object[] results = this.Invoke("SearchOrganizationAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeOnlySecurityGroups});
            return ((ExchangeAccount[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSearchOrganizationAccounts(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeOnlySecurityGroups, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SearchOrganizationAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeOnlySecurityGroups}, callback, asyncState);
        }
        
        /// <remarks/>
        public ExchangeAccount[] EndSearchOrganizationAccounts(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ExchangeAccount[])(results[0]));
        }
        
        /// <remarks/>
        public void SearchOrganizationAccountsAsync(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeOnlySecurityGroups) {
            this.SearchOrganizationAccountsAsync(itemId, filterColumn, filterValue, sortColumn, includeOnlySecurityGroups, null);
        }
        
        /// <remarks/>
        public void SearchOrganizationAccountsAsync(int itemId, string filterColumn, string filterValue, string sortColumn, bool includeOnlySecurityGroups, object userState) {
            if ((this.SearchOrganizationAccountsOperationCompleted == null)) {
                this.SearchOrganizationAccountsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSearchOrganizationAccountsOperationCompleted);
            }
            this.InvokeAsync("SearchOrganizationAccounts", new object[] {
                        itemId,
                        filterColumn,
                        filterValue,
                        sortColumn,
                        includeOnlySecurityGroups}, this.SearchOrganizationAccountsOperationCompleted, userState);
        }
        
        private void OnSearchOrganizationAccountsOperationCompleted(object arg) {
            if ((this.SearchOrganizationAccountsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SearchOrganizationAccountsCompleted(this, new SearchOrganizationAccountsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAdditionalGroups", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public AdditionalGroup[] GetAdditionalGroups(int userId) {
            object[] results = this.Invoke("GetAdditionalGroups", new object[] {
                        userId});
            return ((AdditionalGroup[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetAdditionalGroups(int userId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetAdditionalGroups", new object[] {
                        userId}, callback, asyncState);
        }
        
        /// <remarks/>
        public AdditionalGroup[] EndGetAdditionalGroups(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((AdditionalGroup[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAdditionalGroupsAsync(int userId) {
            this.GetAdditionalGroupsAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAdditionalGroupsAsync(int userId, object userState) {
            if ((this.GetAdditionalGroupsOperationCompleted == null)) {
                this.GetAdditionalGroupsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAdditionalGroupsOperationCompleted);
            }
            this.InvokeAsync("GetAdditionalGroups", new object[] {
                        userId}, this.GetAdditionalGroupsOperationCompleted, userState);
        }
        
        private void OnGetAdditionalGroupsOperationCompleted(object arg) {
            if ((this.GetAdditionalGroupsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAdditionalGroupsCompleted(this, new GetAdditionalGroupsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/UpdateAdditionalGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void UpdateAdditionalGroup(int groupId, string groupName) {
            this.Invoke("UpdateAdditionalGroup", new object[] {
                        groupId,
                        groupName});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginUpdateAdditionalGroup(int groupId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("UpdateAdditionalGroup", new object[] {
                        groupId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndUpdateAdditionalGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void UpdateAdditionalGroupAsync(int groupId, string groupName) {
            this.UpdateAdditionalGroupAsync(groupId, groupName, null);
        }
        
        /// <remarks/>
        public void UpdateAdditionalGroupAsync(int groupId, string groupName, object userState) {
            if ((this.UpdateAdditionalGroupOperationCompleted == null)) {
                this.UpdateAdditionalGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnUpdateAdditionalGroupOperationCompleted);
            }
            this.InvokeAsync("UpdateAdditionalGroup", new object[] {
                        groupId,
                        groupName}, this.UpdateAdditionalGroupOperationCompleted, userState);
        }
        
        private void OnUpdateAdditionalGroupOperationCompleted(object arg) {
            if ((this.UpdateAdditionalGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.UpdateAdditionalGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/DeleteAdditionalGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public void DeleteAdditionalGroup(int groupId) {
            this.Invoke("DeleteAdditionalGroup", new object[] {
                        groupId});
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteAdditionalGroup(int groupId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteAdditionalGroup", new object[] {
                        groupId}, callback, asyncState);
        }
        
        /// <remarks/>
        public void EndDeleteAdditionalGroup(System.IAsyncResult asyncResult) {
            this.EndInvoke(asyncResult);
        }
        
        /// <remarks/>
        public void DeleteAdditionalGroupAsync(int groupId) {
            this.DeleteAdditionalGroupAsync(groupId, null);
        }
        
        /// <remarks/>
        public void DeleteAdditionalGroupAsync(int groupId, object userState) {
            if ((this.DeleteAdditionalGroupOperationCompleted == null)) {
                this.DeleteAdditionalGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteAdditionalGroupOperationCompleted);
            }
            this.InvokeAsync("DeleteAdditionalGroup", new object[] {
                        groupId}, this.DeleteAdditionalGroupOperationCompleted, userState);
        }
        
        private void OnDeleteAdditionalGroupOperationCompleted(object arg) {
            if ((this.DeleteAdditionalGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteAdditionalGroupCompleted(this, new System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/AddAdditionalGroup", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public int AddAdditionalGroup(int userId, string groupName) {
            object[] results = this.Invoke("AddAdditionalGroup", new object[] {
                        userId,
                        groupName});
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginAddAdditionalGroup(int userId, string groupName, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("AddAdditionalGroup", new object[] {
                        userId,
                        groupName}, callback, asyncState);
        }
        
        /// <remarks/>
        public int EndAddAdditionalGroup(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((int)(results[0]));
        }
        
        /// <remarks/>
        public void AddAdditionalGroupAsync(int userId, string groupName) {
            this.AddAdditionalGroupAsync(userId, groupName, null);
        }
        
        /// <remarks/>
        public void AddAdditionalGroupAsync(int userId, string groupName, object userState) {
            if ((this.AddAdditionalGroupOperationCompleted == null)) {
                this.AddAdditionalGroupOperationCompleted = new System.Threading.SendOrPostCallback(this.OnAddAdditionalGroupOperationCompleted);
            }
            this.InvokeAsync("AddAdditionalGroup", new object[] {
                        userId,
                        groupName}, this.AddAdditionalGroupOperationCompleted, userState);
        }
        
        private void OnAddAdditionalGroupOperationCompleted(object arg) {
            if ((this.AddAdditionalGroupCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.AddAdditionalGroupCompleted(this, new AddAdditionalGroupCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetSupportServiceLevels", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ServiceLevel[] GetSupportServiceLevels() {
            object[] results = this.Invoke("GetSupportServiceLevels", new object[0]);
            return ((ServiceLevel[])(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetSupportServiceLevels(System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetSupportServiceLevels", new object[0], callback, asyncState);
        }
        
        /// <remarks/>
        public ServiceLevel[] EndGetSupportServiceLevels(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ServiceLevel[])(results[0]));
        }
        
        /// <remarks/>
        public void GetSupportServiceLevelsAsync() {
            this.GetSupportServiceLevelsAsync(null);
        }
        
        /// <remarks/>
        public void GetSupportServiceLevelsAsync(object userState) {
            if ((this.GetSupportServiceLevelsOperationCompleted == null)) {
                this.GetSupportServiceLevelsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetSupportServiceLevelsOperationCompleted);
            }
            this.InvokeAsync("GetSupportServiceLevels", new object[0], this.GetSupportServiceLevelsOperationCompleted, userState);
        }
        
        private void OnGetSupportServiceLevelsOperationCompleted(object arg) {
            if ((this.GetSupportServiceLevelsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetSupportServiceLevelsCompleted(this, new GetSupportServiceLevelsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateSupportServiceLevelCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteSupportServiceLevelCompletedEventHandler(object sender, DeleteSupportServiceLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSupportServiceLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSupportServiceLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AddSupportServiceLevelCompletedEventHandler(object sender, AddSupportServiceLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddSupportServiceLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddSupportServiceLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSupportServiceLevelCompletedEventHandler(object sender, GetSupportServiceLevelCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportServiceLevelCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportServiceLevelCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceLevel Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceLevel)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CheckPhoneNumberIsInUseCompletedEventHandler(object sender, CheckPhoneNumberIsInUseCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckPhoneNumberIsInUseCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckPhoneNumberIsInUseCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeletePasswordresetAccessTokenCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetAccessTokenResponseCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetPasswordresetAccessTokenCompletedEventHandler(object sender, GetPasswordresetAccessTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordresetAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordresetAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateOrganizationGeneralSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationGeneralSettingsCompletedEventHandler(object sender, GetOrganizationGeneralSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationGeneralSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationGeneralSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationGeneralSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationGeneralSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateOrganizationPasswordSettingsCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetWebDavSystemSettingsCompletedEventHandler(object sender, GetWebDavSystemSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetWebDavSystemSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetWebDavSystemSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public SystemSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((SystemSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationPasswordSettingsCompletedEventHandler(object sender, GetOrganizationPasswordSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationPasswordSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationPasswordSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationPasswordSettings Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationPasswordSettings)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CheckOrgIdExistsCompletedEventHandler(object sender, CheckOrgIdExistsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckOrgIdExistsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckOrgIdExistsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreateOrganizationCompletedEventHandler(object sender, CreateOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetRawOrganizationsPagedCompletedEventHandler(object sender, GetRawOrganizationsPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetRawOrganizationsPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetRawOrganizationsPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationsCompletedEventHandler(object sender, GetOrganizationsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Organization[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Organization[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationByIdCompletedEventHandler(object sender, GetOrganizationByIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationByIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationByIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Organization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Organization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationUserSummuryLetterCompletedEventHandler(object sender, GetOrganizationUserSummuryLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationUserSummuryLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationUserSummuryLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public string Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((string)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendOrganizationUserSummuryLetterCompletedEventHandler(object sender, SendOrganizationUserSummuryLetterCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendOrganizationUserSummuryLetterCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendOrganizationUserSummuryLetterCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteOrganizationCompletedEventHandler(object sender, DeleteOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationStatisticsCompletedEventHandler(object sender, GetOrganizationStatisticsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationStatisticsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationStatisticsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationStatistics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationStatistics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationStatisticsByOrganizationCompletedEventHandler(object sender, GetOrganizationStatisticsByOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationStatisticsByOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationStatisticsByOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationStatistics Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationStatistics)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationCompletedEventHandler(object sender, GetOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public Organization Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((Organization)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAccountIdByUserPrincipalNameCompletedEventHandler(object sender, GetAccountIdByUserPrincipalNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAccountIdByUserPrincipalNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAccountIdByUserPrincipalNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetDefaultOrganizationCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserGeneralSettingsWithExtraDataCompletedEventHandler(object sender, GetUserGeneralSettingsWithExtraDataCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGeneralSettingsWithExtraDataCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGeneralSettingsWithExtraDataCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendResetUserPasswordLinkSmsCompletedEventHandler(object sender, SendResetUserPasswordLinkSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendResetUserPasswordLinkSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendResetUserPasswordLinkSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendResetUserPasswordPincodeSmsCompletedEventHandler(object sender, SendResetUserPasswordPincodeSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendResetUserPasswordPincodeSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendResetUserPasswordPincodeSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendResetUserPasswordPincodeEmailCompletedEventHandler(object sender, SendResetUserPasswordPincodeEmailCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendResetUserPasswordPincodeEmailCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendResetUserPasswordPincodeEmailCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendUserPasswordRequestSmsCompletedEventHandler(object sender, SendUserPasswordRequestSmsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SendUserPasswordRequestSmsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SendUserPasswordRequestSmsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendUserPasswordRequestEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AddOrganizationDomainCompletedEventHandler(object sender, AddOrganizationDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddOrganizationDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddOrganizationDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ChangeOrganizationDomainTypeCompletedEventHandler(object sender, ChangeOrganizationDomainTypeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ChangeOrganizationDomainTypeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ChangeOrganizationDomainTypeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationDomainsCompletedEventHandler(object sender, GetOrganizationDomainsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationDomainsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationDomainsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationDomainName[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationDomainName[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteOrganizationDomainCompletedEventHandler(object sender, DeleteOrganizationDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteOrganizationDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteOrganizationDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetOrganizationDefaultDomainCompletedEventHandler(object sender, SetOrganizationDefaultDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetOrganizationDefaultDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetOrganizationDefaultDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationObjectsByDomainCompletedEventHandler(object sender, GetOrganizationObjectsByDomainCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationObjectsByDomainCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationObjectsByDomainCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public System.Data.DataSet Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((System.Data.DataSet)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CheckDomainUsedByHostedOrganizationCompletedEventHandler(object sender, CheckDomainUsedByHostedOrganizationCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CheckDomainUsedByHostedOrganizationCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CheckDomainUsedByHostedOrganizationCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public bool Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((bool)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreateUserCompletedEventHandler(object sender, CreateUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void ImportUserCompletedEventHandler(object sender, ImportUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class ImportUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal ImportUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationDeletedUsersPagedCompletedEventHandler(object sender, GetOrganizationDeletedUsersPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationDeletedUsersPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationDeletedUsersPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationDeletedUsersPaged Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationDeletedUsersPaged)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationUsersPagedCompletedEventHandler(object sender, GetOrganizationUsersPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationUsersPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationUsersPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationUsersPaged Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationUsersPaged)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetUserGeneralSettingsCompletedEventHandler(object sender, GetUserGeneralSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetUserGeneralSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetUserGeneralSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationUser Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationUser)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetUserGeneralSettingsCompletedEventHandler(object sender, SetUserGeneralSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserGeneralSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserGeneralSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetUserPrincipalNameCompletedEventHandler(object sender, SetUserPrincipalNameCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserPrincipalNameCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserPrincipalNameCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetUserPasswordCompletedEventHandler(object sender, SetUserPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetUserPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetUserPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SearchAccountsCompletedEventHandler(object sender, SearchAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationUser[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationUser[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetDeletedUserCompletedEventHandler(object sender, SetDeletedUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetDeletedUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetDeletedUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetArchiveFileBinaryChunkCompletedEventHandler(object sender, GetArchiveFileBinaryChunkCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetArchiveFileBinaryChunkCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetArchiveFileBinaryChunkCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public byte[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((byte[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteUserCompletedEventHandler(object sender, DeleteUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetPasswordPolicyCompletedEventHandler(object sender, GetPasswordPolicyCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetPasswordPolicyCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetPasswordPolicyCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PasswordPolicyResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PasswordPolicyResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SendResetUserPasswordEmailCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreatePasswordResetAccessTokenCompletedEventHandler(object sender, CreatePasswordResetAccessTokenCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreatePasswordResetAccessTokenCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreatePasswordResetAccessTokenCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AccessToken Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AccessToken)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void CreateSecurityGroupCompletedEventHandler(object sender, CreateSecurityGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateSecurityGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateSecurityGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSecurityGroupGeneralSettingsCompletedEventHandler(object sender, GetSecurityGroupGeneralSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityGroupGeneralSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityGroupGeneralSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationSecurityGroup Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationSecurityGroup)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteSecurityGroupCompletedEventHandler(object sender, DeleteSecurityGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteSecurityGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteSecurityGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SetSecurityGroupGeneralSettingsCompletedEventHandler(object sender, SetSecurityGroupGeneralSettingsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetSecurityGroupGeneralSettingsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetSecurityGroupGeneralSettingsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetOrganizationSecurityGroupsPagedCompletedEventHandler(object sender, GetOrganizationSecurityGroupsPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetOrganizationSecurityGroupsPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetOrganizationSecurityGroupsPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeAccountsPaged Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeAccountsPaged)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AddObjectToSecurityGroupCompletedEventHandler(object sender, AddObjectToSecurityGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddObjectToSecurityGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddObjectToSecurityGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteObjectFromSecurityGroupCompletedEventHandler(object sender, DeleteObjectFromSecurityGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteObjectFromSecurityGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteObjectFromSecurityGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSecurityGroupsByMemberCompletedEventHandler(object sender, GetSecurityGroupsByMemberCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSecurityGroupsByMemberCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSecurityGroupsByMemberCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void SearchOrganizationAccountsCompletedEventHandler(object sender, SearchOrganizationAccountsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SearchOrganizationAccountsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SearchOrganizationAccountsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ExchangeAccount[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ExchangeAccount[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetAdditionalGroupsCompletedEventHandler(object sender, GetAdditionalGroupsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAdditionalGroupsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAdditionalGroupsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public AdditionalGroup[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((AdditionalGroup[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void UpdateAdditionalGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void DeleteAdditionalGroupCompletedEventHandler(object sender, System.ComponentModel.AsyncCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void AddAdditionalGroupCompletedEventHandler(object sender, AddAdditionalGroupCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class AddAdditionalGroupCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal AddAdditionalGroupCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public int Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((int)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    public delegate void GetSupportServiceLevelsCompletedEventHandler(object sender, GetSupportServiceLevelsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.3038")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetSupportServiceLevelsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetSupportServiceLevelsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ServiceLevel[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ServiceLevel[])(this.results[0]));
            }
        }
    }
}
