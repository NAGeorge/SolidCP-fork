// Copyright (c) 2016, SolidCP
// SolidCP is distributed under the Creative Commons Share-alike license
// 
// SolidCP is a fork of WebsitePanel:
// Copyright (c) 2015, Outercurve Foundation.
// All rights reserved.
//
// Redistribution and use in source and binary forms, with or without modification,
// are permitted provided that the following conditions are met:
//
// - Redistributions of source code must  retain  the  above copyright notice, this
//   list of conditions and the following disclaimer.
//
// - Redistributions in binary form  must  reproduce the  above  copyright  notice,
//   this list of conditions  and  the  following  disclaimer in  the documentation
//   and/or other materials provided with the distribution.
//
// - Neither  the  name  of  the  Outercurve Foundation  nor   the   names  of  its
//   contributors may be used to endorse or  promote  products  derived  from  this
//   software without specific prior written permission.
//
// THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS" AND
// ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING,  BUT  NOT  LIMITED TO, THE IMPLIED
// WARRANTIES  OF  MERCHANTABILITY   AND  FITNESS  FOR  A  PARTICULAR  PURPOSE  ARE
// DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR
// ANY DIRECT, INDIRECT, INCIDENTAL,  SPECIAL,  EXEMPLARY, OR CONSEQUENTIAL DAMAGES
// (INCLUDING, BUT NOT LIMITED TO,  PROCUREMENT  OF  SUBSTITUTE  GOODS OR SERVICES;
// LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)  HOWEVER  CAUSED AND ON
// ANY  THEORY  OF  LIABILITY,  WHETHER  IN  CONTRACT,  STRICT  LIABILITY,  OR TORT
// (INCLUDING NEGLIGENCE OR OTHERWISE)  ARISING  IN  ANY WAY OUT OF THE USE OF THIS
// SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.1433
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by wsdl, Version=2.0.50727.42.
// 
using SolidCP.Providers.Common;
using SolidCP.Providers.ResultObjects;

namespace SolidCP.EnterpriseServer.HostedSolution {
    using System.Diagnostics;
    using System.Web.Services;
    using System.ComponentModel;
    using System.Web.Services.Protocols;
    using System;
    using System.Xml.Serialization;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="esBlackBerrySoap", Namespace="http://smbsaas/solidcp/enterpriseserver")]
    public partial class esBlackBerry : Microsoft.Web.Services3.WebServicesClientProtocol {
        
        private System.Threading.SendOrPostCallback CreateBlackBerryUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteBlackBerryUserOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlackBerryUsersPagedOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlackBerryUserCountOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetBlackBerryUserStatsOperationCompleted;
        
        private System.Threading.SendOrPostCallback DeleteDataFromBlackBerryDeviceOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetEmailActivationPasswordOperationCompleted;
        
        private System.Threading.SendOrPostCallback SetActivationPasswordWithExpirationTimeOperationCompleted;
        
        /// <remarks/>
        public esBlackBerry() {
            this.Url = "http://localhost/SolidCPEnterpriseServer/esBlackBerry.asmx";
        }
        
        /// <remarks/>
        public event CreateBlackBerryUserCompletedEventHandler CreateBlackBerryUserCompleted;
        
        /// <remarks/>
        public event DeleteBlackBerryUserCompletedEventHandler DeleteBlackBerryUserCompleted;
        
        /// <remarks/>
        public event GetBlackBerryUsersPagedCompletedEventHandler GetBlackBerryUsersPagedCompleted;
        
        /// <remarks/>
        public event GetBlackBerryUserCountCompletedEventHandler GetBlackBerryUserCountCompleted;
        
        /// <remarks/>
        public event GetBlackBerryUserStatsCompletedEventHandler GetBlackBerryUserStatsCompleted;
        
        /// <remarks/>
        public event DeleteDataFromBlackBerryDeviceCompletedEventHandler DeleteDataFromBlackBerryDeviceCompleted;
        
        /// <remarks/>
        public event SetEmailActivationPasswordCompletedEventHandler SetEmailActivationPasswordCompleted;
        
        /// <remarks/>
        public event SetActivationPasswordWithExpirationTimeCompletedEventHandler SetActivationPasswordWithExpirationTimeCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/CreateBlackBerryUser", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject CreateBlackBerryUser(int itemId, int accountId) {
            object[] results = this.Invoke("CreateBlackBerryUser", new object[] {
                        itemId,
                        accountId});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginCreateBlackBerryUser(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("CreateBlackBerryUser", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndCreateBlackBerryUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void CreateBlackBerryUserAsync(int itemId, int accountId) {
            this.CreateBlackBerryUserAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void CreateBlackBerryUserAsync(int itemId, int accountId, object userState) {
            if ((this.CreateBlackBerryUserOperationCompleted == null)) {
                this.CreateBlackBerryUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnCreateBlackBerryUserOperationCompleted);
            }
            this.InvokeAsync("CreateBlackBerryUser", new object[] {
                        itemId,
                        accountId}, this.CreateBlackBerryUserOperationCompleted, userState);
        }
        
        private void OnCreateBlackBerryUserOperationCompleted(object arg) {
            if ((this.CreateBlackBerryUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.CreateBlackBerryUserCompleted(this, new CreateBlackBerryUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteBlackBerryUser", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject DeleteBlackBerryUser(int itemId, int accountId) {
            object[] results = this.Invoke("DeleteBlackBerryUser", new object[] {
                        itemId,
                        accountId});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteBlackBerryUser(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteBlackBerryUser", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndDeleteBlackBerryUser(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteBlackBerryUserAsync(int itemId, int accountId) {
            this.DeleteBlackBerryUserAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void DeleteBlackBerryUserAsync(int itemId, int accountId, object userState) {
            if ((this.DeleteBlackBerryUserOperationCompleted == null)) {
                this.DeleteBlackBerryUserOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteBlackBerryUserOperationCompleted);
            }
            this.InvokeAsync("DeleteBlackBerryUser", new object[] {
                        itemId,
                        accountId}, this.DeleteBlackBerryUserOperationCompleted, userState);
        }
        
        private void OnDeleteBlackBerryUserOperationCompleted(object arg) {
            if ((this.DeleteBlackBerryUserCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteBlackBerryUserCompleted(this, new DeleteBlackBerryUserCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetBlackBerryUsersPaged", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public OrganizationUsersPagedResult GetBlackBerryUsersPaged(int itemId, string sortColumn, string sortDirection, string name, string email, int startRow, int maximumRows) {
            object[] results = this.Invoke("GetBlackBerryUsersPaged", new object[] {
                        itemId,
                        sortColumn,
                        sortDirection,
                        name,
                        email,
                        startRow,
                        maximumRows});
            return ((OrganizationUsersPagedResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBlackBerryUsersPaged(int itemId, string sortColumn, string sortDirection, string name, string email, int startRow, int maximumRows, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBlackBerryUsersPaged", new object[] {
                        itemId,
                        sortColumn,
                        sortDirection,
                        name,
                        email,
                        startRow,
                        maximumRows}, callback, asyncState);
        }
        
        /// <remarks/>
        public OrganizationUsersPagedResult EndGetBlackBerryUsersPaged(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((OrganizationUsersPagedResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlackBerryUsersPagedAsync(int itemId, string sortColumn, string sortDirection, string name, string email, int startRow, int maximumRows) {
            this.GetBlackBerryUsersPagedAsync(itemId, sortColumn, sortDirection, name, email, startRow, maximumRows, null);
        }
        
        /// <remarks/>
        public void GetBlackBerryUsersPagedAsync(int itemId, string sortColumn, string sortDirection, string name, string email, int startRow, int maximumRows, object userState) {
            if ((this.GetBlackBerryUsersPagedOperationCompleted == null)) {
                this.GetBlackBerryUsersPagedOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlackBerryUsersPagedOperationCompleted);
            }
            this.InvokeAsync("GetBlackBerryUsersPaged", new object[] {
                        itemId,
                        sortColumn,
                        sortDirection,
                        name,
                        email,
                        startRow,
                        maximumRows}, this.GetBlackBerryUsersPagedOperationCompleted, userState);
        }
        
        private void OnGetBlackBerryUsersPagedOperationCompleted(object arg) {
            if ((this.GetBlackBerryUsersPagedCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlackBerryUsersPagedCompleted(this, new GetBlackBerryUsersPagedCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetBlackBerryUserCount", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public IntResult GetBlackBerryUserCount(int itemId, string name, string email) {
            object[] results = this.Invoke("GetBlackBerryUserCount", new object[] {
                        itemId,
                        name,
                        email});
            return ((IntResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBlackBerryUserCount(int itemId, string name, string email, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBlackBerryUserCount", new object[] {
                        itemId,
                        name,
                        email}, callback, asyncState);
        }
        
        /// <remarks/>
        public IntResult EndGetBlackBerryUserCount(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((IntResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlackBerryUserCountAsync(int itemId, string name, string email) {
            this.GetBlackBerryUserCountAsync(itemId, name, email, null);
        }
        
        /// <remarks/>
        public void GetBlackBerryUserCountAsync(int itemId, string name, string email, object userState) {
            if ((this.GetBlackBerryUserCountOperationCompleted == null)) {
                this.GetBlackBerryUserCountOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlackBerryUserCountOperationCompleted);
            }
            this.InvokeAsync("GetBlackBerryUserCount", new object[] {
                        itemId,
                        name,
                        email}, this.GetBlackBerryUserCountOperationCompleted, userState);
        }
        
        private void OnGetBlackBerryUserCountOperationCompleted(object arg) {
            if ((this.GetBlackBerryUserCountCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlackBerryUserCountCompleted(this, new GetBlackBerryUserCountCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/GetBlackBerryUserStats", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public BlackBerryUserStatsResult GetBlackBerryUserStats(int itemId, int accountId) {
            object[] results = this.Invoke("GetBlackBerryUserStats", new object[] {
                        itemId,
                        accountId});
            return ((BlackBerryUserStatsResult)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginGetBlackBerryUserStats(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("GetBlackBerryUserStats", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public BlackBerryUserStatsResult EndGetBlackBerryUserStats(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((BlackBerryUserStatsResult)(results[0]));
        }
        
        /// <remarks/>
        public void GetBlackBerryUserStatsAsync(int itemId, int accountId) {
            this.GetBlackBerryUserStatsAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void GetBlackBerryUserStatsAsync(int itemId, int accountId, object userState) {
            if ((this.GetBlackBerryUserStatsOperationCompleted == null)) {
                this.GetBlackBerryUserStatsOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetBlackBerryUserStatsOperationCompleted);
            }
            this.InvokeAsync("GetBlackBerryUserStats", new object[] {
                        itemId,
                        accountId}, this.GetBlackBerryUserStatsOperationCompleted, userState);
        }
        
        private void OnGetBlackBerryUserStatsOperationCompleted(object arg) {
            if ((this.GetBlackBerryUserStatsCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetBlackBerryUserStatsCompleted(this, new GetBlackBerryUserStatsCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/DeleteDataFromBlackBerryDevice", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject DeleteDataFromBlackBerryDevice(int itemId, int accountId) {
            object[] results = this.Invoke("DeleteDataFromBlackBerryDevice", new object[] {
                        itemId,
                        accountId});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginDeleteDataFromBlackBerryDevice(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("DeleteDataFromBlackBerryDevice", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndDeleteDataFromBlackBerryDevice(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void DeleteDataFromBlackBerryDeviceAsync(int itemId, int accountId) {
            this.DeleteDataFromBlackBerryDeviceAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void DeleteDataFromBlackBerryDeviceAsync(int itemId, int accountId, object userState) {
            if ((this.DeleteDataFromBlackBerryDeviceOperationCompleted == null)) {
                this.DeleteDataFromBlackBerryDeviceOperationCompleted = new System.Threading.SendOrPostCallback(this.OnDeleteDataFromBlackBerryDeviceOperationCompleted);
            }
            this.InvokeAsync("DeleteDataFromBlackBerryDevice", new object[] {
                        itemId,
                        accountId}, this.DeleteDataFromBlackBerryDeviceOperationCompleted, userState);
        }
        
        private void OnDeleteDataFromBlackBerryDeviceOperationCompleted(object arg) {
            if ((this.DeleteDataFromBlackBerryDeviceCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.DeleteDataFromBlackBerryDeviceCompleted(this, new DeleteDataFromBlackBerryDeviceCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/SetEmailActivationPassword", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SetEmailActivationPassword(int itemId, int accountId) {
            object[] results = this.Invoke("SetEmailActivationPassword", new object[] {
                        itemId,
                        accountId});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetEmailActivationPassword(int itemId, int accountId, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetEmailActivationPassword", new object[] {
                        itemId,
                        accountId}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSetEmailActivationPassword(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SetEmailActivationPasswordAsync(int itemId, int accountId) {
            this.SetEmailActivationPasswordAsync(itemId, accountId, null);
        }
        
        /// <remarks/>
        public void SetEmailActivationPasswordAsync(int itemId, int accountId, object userState) {
            if ((this.SetEmailActivationPasswordOperationCompleted == null)) {
                this.SetEmailActivationPasswordOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetEmailActivationPasswordOperationCompleted);
            }
            this.InvokeAsync("SetEmailActivationPassword", new object[] {
                        itemId,
                        accountId}, this.SetEmailActivationPasswordOperationCompleted, userState);
        }
        
        private void OnSetEmailActivationPasswordOperationCompleted(object arg) {
            if ((this.SetEmailActivationPasswordCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetEmailActivationPasswordCompleted(this, new SetEmailActivationPasswordCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://smbsaas/solidcp/enterpriseserver/SetActivationPasswordWithExpiratio" +
            "nTime", RequestNamespace="http://smbsaas/solidcp/enterpriseserver", ResponseNamespace="http://smbsaas/solidcp/enterpriseserver", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public ResultObject SetActivationPasswordWithExpirationTime(int itemId, int accountId, string password, int time) {
            object[] results = this.Invoke("SetActivationPasswordWithExpirationTime", new object[] {
                        itemId,
                        accountId,
                        password,
                        time});
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public System.IAsyncResult BeginSetActivationPasswordWithExpirationTime(int itemId, int accountId, string password, int time, System.AsyncCallback callback, object asyncState) {
            return this.BeginInvoke("SetActivationPasswordWithExpirationTime", new object[] {
                        itemId,
                        accountId,
                        password,
                        time}, callback, asyncState);
        }
        
        /// <remarks/>
        public ResultObject EndSetActivationPasswordWithExpirationTime(System.IAsyncResult asyncResult) {
            object[] results = this.EndInvoke(asyncResult);
            return ((ResultObject)(results[0]));
        }
        
        /// <remarks/>
        public void SetActivationPasswordWithExpirationTimeAsync(int itemId, int accountId, string password, int time) {
            this.SetActivationPasswordWithExpirationTimeAsync(itemId, accountId, password, time, null);
        }
        
        /// <remarks/>
        public void SetActivationPasswordWithExpirationTimeAsync(int itemId, int accountId, string password, int time, object userState) {
            if ((this.SetActivationPasswordWithExpirationTimeOperationCompleted == null)) {
                this.SetActivationPasswordWithExpirationTimeOperationCompleted = new System.Threading.SendOrPostCallback(this.OnSetActivationPasswordWithExpirationTimeOperationCompleted);
            }
            this.InvokeAsync("SetActivationPasswordWithExpirationTime", new object[] {
                        itemId,
                        accountId,
                        password,
                        time}, this.SetActivationPasswordWithExpirationTimeOperationCompleted, userState);
        }
        
        private void OnSetActivationPasswordWithExpirationTimeOperationCompleted(object arg) {
            if ((this.SetActivationPasswordWithExpirationTimeCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.SetActivationPasswordWithExpirationTimeCompleted(this, new SetActivationPasswordWithExpirationTimeCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
    }
    
    
    
    
    
    
    
    
    
    
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void CreateBlackBerryUserCompletedEventHandler(object sender, CreateBlackBerryUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class CreateBlackBerryUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal CreateBlackBerryUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteBlackBerryUserCompletedEventHandler(object sender, DeleteBlackBerryUserCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteBlackBerryUserCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteBlackBerryUserCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetBlackBerryUsersPagedCompletedEventHandler(object sender, GetBlackBerryUsersPagedCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlackBerryUsersPagedCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlackBerryUsersPagedCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public OrganizationUsersPagedResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((OrganizationUsersPagedResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetBlackBerryUserCountCompletedEventHandler(object sender, GetBlackBerryUserCountCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlackBerryUserCountCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlackBerryUserCountCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public IntResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((IntResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void GetBlackBerryUserStatsCompletedEventHandler(object sender, GetBlackBerryUserStatsCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetBlackBerryUserStatsCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetBlackBerryUserStatsCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public BlackBerryUserStatsResult Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((BlackBerryUserStatsResult)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void DeleteDataFromBlackBerryDeviceCompletedEventHandler(object sender, DeleteDataFromBlackBerryDeviceCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class DeleteDataFromBlackBerryDeviceCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal DeleteDataFromBlackBerryDeviceCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetEmailActivationPasswordCompletedEventHandler(object sender, SetEmailActivationPasswordCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetEmailActivationPasswordCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetEmailActivationPasswordCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    public delegate void SetActivationPasswordWithExpirationTimeCompletedEventHandler(object sender, SetActivationPasswordWithExpirationTimeCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("wsdl", "2.0.50727.42")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class SetActivationPasswordWithExpirationTimeCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal SetActivationPasswordWithExpirationTimeCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public ResultObject Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((ResultObject)(this.results[0]));
            }
        }
    }
}
